import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as r,o as a}from"./app-kRXLCKCy.js";const n={};function s(i,e){return a(),o("div",null,[...e[0]||(e[0]=[r('<p>Comme l&#39;a dit le grand Linus Torvalds<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> :</p><blockquote><p><em>Bad programmers worry about the code.<br> Good programmers worry about data structures and their relationships.</em></p></blockquote><p>Donc faut traiter des schema, expliquer que c la lingua franca d&#39;Hyperion (à partir de l&#39;endpoint et dans toute la trace qui en découle (la vie de l&#39;endpoint), toute la communication se fait avec des schemas (tu reçois un schema de FastAPI ds les endpoints, tu envoies un schema aux CRUDs, donc les CRUDs &quot;comprennent&quot; les schemas et ils gèrent intérieurement la conversion avec les modèles)).</p><p>Expliquer des bases de Pydantic et de validation (c littéralement Zod en python hein).</p><p>Et tjs donner des exemples c important. Et expliquer qu&#39;il faut souvent un plusieurs modèles pour 1 &quot;type logique&quot;, genre un TrucBase, un TrucEdit et un TrucComplete, et expliquer que l&#39;héritage c important.</p><p>Un petit point sur le principe de Liskov<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> peut éclaircir des doutes sur la validité d&#39;un supertype.</p><p>Expliquer pk le typage fort et statique c cool pour catch pleins d&#39;erreurs, avoir de l&#39;intellisense propre, et valider les données une seule fois à l&#39;entrée<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p><a href="https://lwn.net/Articles/193245" target="_blank" rel="noopener noreferrer">Mail original (sur LWN)</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p><a href="https://fr.wikipedia.org/wiki/Principe_de_substitution_de_Liskov" target="_blank" rel="noopener noreferrer">Principe de substitution de Liskov</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p><a href="https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/" target="_blank" rel="noopener noreferrer"><em>Parse, don&#39;t validate</em></a>, cité dans <a href="https://v3.zod.dev/?id=introduction" target="_blank" rel="noopener noreferrer">l&#39;intro de Zod v3</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li></ol></section>',9)])])}const p=t(n,[["render",s]]),d=JSON.parse(`{"path":"/hyperion/module/schemas.html","title":"Schemas","lang":"fr-FR","frontmatter":{"title":"Schemas","order":1,"category":["Guide"],"description":"Comme l'a dit le grand Linus Torvalds[1] : Bad programmers worry about the code. Good programmers worry about data structures and their relationships. Donc faut traiter des sche...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Schemas\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-13T16:47:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aeecleclair\\",\\"url\\":\\"https://github.com/aeecleclair/\\"}]}"],["meta",{"property":"og:url","content":"https://docs.myecl.fr/hyperion/module/schemas.html"}],["meta",{"property":"og:site_name","content":"MyECL - ÉCLAIR"}],["meta",{"property":"og:title","content":"Schemas"}],["meta",{"property":"og:description","content":"Comme l'a dit le grand Linus Torvalds[1] : Bad programmers worry about the code. Good programmers worry about data structures and their relationships. Donc faut traiter des sche..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"fr-FR"}],["meta",{"property":"og:updated_time","content":"2025-09-13T16:47:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T16:47:01.000Z"}]]},"git":{"createdTime":1757770073000,"updatedTime":1757782021000,"contributors":[{"name":"Marc-Andrieu","username":"Marc-Andrieu","email":"marc.andrieu@outlook.com","commits":2,"url":"https://github.com/Marc-Andrieu"}]},"readingTime":{"minutes":1.58,"words":237},"filePathRelative":"hyperion/module/schemas.md","autoDesc":true}`);export{p as comp,d as data};
