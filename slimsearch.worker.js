/**
* @vue/shared v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function xt(e){const t=Object.create(null);for(const n of e.split(","))t[n]=1;return n=>n in t}const Ot={},St=()=>{},ze=Object.assign,It=Object.prototype.hasOwnProperty,se=(e,t)=>It.call(e,t),z=Array.isArray,Y=e=>Ve(e)==="[object Map]",oe=e=>typeof e=="function",Ce=e=>typeof e=="string",L=e=>typeof e=="symbol",B=e=>e!==null&&typeof e=="object",Nt=Object.prototype.toString,Ve=e=>Nt.call(e),ke=e=>Ve(e).slice(8,-1),ie=e=>Ce(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Mt=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},Ln=Mt(e=>e.charAt(0).toUpperCase()+e.slice(1)),W=(e,t)=>!Object.is(e,t);let $e;const ce=()=>$e||($e=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});/**
* @vue/reactivity v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Rt(e,...t){console.warn(`[Vue warn] ${e}`,...t)}let Tt,je=0,ae;function ue(){je++}function le(){if(--je>0)return;let e;for(;ae;){let t=ae;for(ae=void 0;t;){const n=t.next;if(t.next=void 0,t.flags&=-9,t.flags&1)try{t.trigger()}catch(s){e||(e=s)}t=n}}if(e)throw e}let G=!0;const De=[];function fe(){De.push(G),G=!1}function de(){const e=De.pop();G=e===void 0?!0:e}class Fe{constructor(t){this.computed=t,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(t){}trigger(t){this.version++,this.notify(t)}notify(t){ue();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{le()}}}const he=new WeakMap,C=Symbol(""),pe=Symbol(""),H=Symbol("");function E(e,t,n){if(G&&Tt){let s=he.get(e);s||he.set(e,s=new Map);let r=s.get(n);r||(s.set(n,r=new Fe),r.map=s,r.key=n),r.track()}}function I(e,t,n,s,r,o){const i=he.get(e);if(!i)return;const c=a=>{a&&a.trigger()};if(ue(),t==="clear")i.forEach(c);else{const a=z(e),u=a&&ie(n);if(a&&n==="length"){const l=Number(s);i.forEach((f,d)=>{(d==="length"||d===H||!L(d)&&d>=l)&&c(f)})}else switch((n!==void 0||i.has(void 0))&&c(i.get(n)),u&&c(i.get(H)),t){case"add":a?u&&c(i.get("length")):(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"delete":a||(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"set":Y(e)&&c(i.get(C));break}}le()}function $(e){const t=p(e);return t===e?t:(E(t,"iterate",H),N(e)?t:t.map(v))}function ge(e){return E(e=p(e),"iterate",H),e}const zt={__proto__:null,[Symbol.iterator](){return _e(this,Symbol.iterator,v)},concat(...e){return $(this).concat(...e.map(t=>z(t)?$(t):t))},entries(){return _e(this,"entries",e=>(e[1]=v(e[1]),e))},every(e,t){return O(this,"every",e,t,void 0,arguments)},filter(e,t){return O(this,"filter",e,t,n=>n.map(v),arguments)},find(e,t){return O(this,"find",e,t,v,arguments)},findIndex(e,t){return O(this,"findIndex",e,t,void 0,arguments)},findLast(e,t){return O(this,"findLast",e,t,v,arguments)},findLastIndex(e,t){return O(this,"findLastIndex",e,t,void 0,arguments)},forEach(e,t){return O(this,"forEach",e,t,void 0,arguments)},includes(...e){return me(this,"includes",e)},indexOf(...e){return me(this,"indexOf",e)},join(e){return $(this).join(e)},lastIndexOf(...e){return me(this,"lastIndexOf",e)},map(e,t){return O(this,"map",e,t,void 0,arguments)},pop(){return K(this,"pop")},push(...e){return K(this,"push",e)},reduce(e,...t){return Pe(this,"reduce",e,t)},reduceRight(e,...t){return Pe(this,"reduceRight",e,t)},shift(){return K(this,"shift")},some(e,t){return O(this,"some",e,t,void 0,arguments)},splice(...e){return K(this,"splice",e)},toReversed(){return $(this).toReversed()},toSorted(e){return $(this).toSorted(e)},toSpliced(...e){return $(this).toSpliced(...e)},unshift(...e){return K(this,"unshift",e)},values(){return _e(this,"values",v)}};function _e(e,t,n){const s=ge(e),r=s[t]();return s!==e&&!N(e)&&(r._next=r.next,r.next=()=>{const o=r._next();return o.value&&(o.value=n(o.value)),o}),r}const Ct=Array.prototype;function O(e,t,n,s,r,o){const i=ge(e),c=i!==e&&!N(e),a=i[t];if(a!==Ct[t]){const f=a.apply(e,o);return c?v(f):f}let u=n;i!==e&&(c?u=function(f,d){return n.call(this,v(f),d,e)}:n.length>2&&(u=function(f,d){return n.call(this,f,d,e)}));const l=a.call(i,u,s);return c&&r?r(l):l}function Pe(e,t,n,s){const r=ge(e);let o=n;return r!==e&&(N(e)?n.length>3&&(o=function(i,c,a){return n.call(this,i,c,a,e)}):o=function(i,c,a){return n.call(this,i,v(c),a,e)}),r[t](o,...s)}function me(e,t,n){const s=p(e);E(s,"iterate",H);const r=s[t](...n);return(r===-1||r===!1)&&Jt(n[0])?(n[0]=p(n[0]),s[t](...n)):r}function K(e,t,n=[]){fe(),ue();const s=p(e)[t].apply(e,n);return le(),de(),s}const Vt=xt("__proto__,__v_isRef,__isVue"),Ae=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(L));function kt(e){L(e)||(e=String(e));const t=p(this);return E(t,"has",e),t.hasOwnProperty(e)}class Le{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,s){if(n==="__v_skip")return t.__v_skip;const r=this._isReadonly,o=this._isShallow;if(n==="__v_isReactive")return!r;if(n==="__v_isReadonly")return r;if(n==="__v_isShallow")return o;if(n==="__v_raw")return s===(r?o?Kt:Ke:o?Ht:He).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=z(t);if(!r){let a;if(i&&(a=zt[n]))return a;if(n==="hasOwnProperty")return kt}const c=Reflect.get(t,n,V(t)?t:s);return(L(n)?Ae.has(n):Vt(n))||(r||E(t,"get",n),o)?c:V(c)?i&&ie(n)?c:c.value:B(c)?r?Ue(c):qe(c):c}}class $t extends Le{constructor(t=!1){super(!1,t)}set(t,n,s,r){let o=t[n];if(!this._isShallow){const a=j(o);if(!N(s)&&!j(s)&&(o=p(o),s=p(s)),!z(t)&&V(o)&&!V(s))return a?!1:(o.value=s,!0)}const i=z(t)&&ie(n)?Number(n)<t.length:se(t,n),c=Reflect.set(t,n,s,V(t)?t:r);return t===p(r)&&(i?W(s,o)&&I(t,"set",n,s,o):I(t,"add",n,s)),c}deleteProperty(t,n){const s=se(t,n),r=t[n],o=Reflect.deleteProperty(t,n);return o&&s&&I(t,"delete",n,void 0,r),o}has(t,n){const s=Reflect.has(t,n);return(!L(n)||!Ae.has(n))&&E(t,"has",n),s}ownKeys(t){return E(t,"iterate",z(t)?"length":C),Reflect.ownKeys(t)}}class jt extends Le{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const Dt=new $t,Ft=new jt,ye=e=>e,Q=e=>Reflect.getPrototypeOf(e);function Pt(e,t,n){return function(...s){const r=this.__v_raw,o=p(r),i=Y(o),c=e==="entries"||e===Symbol.iterator&&i,a=e==="keys"&&i,u=r[e](...s),l=n?ye:t?we:v;return!t&&E(o,"iterate",a?pe:C),{next(){const{value:f,done:d}=u.next();return d?{value:f,done:d}:{value:c?[l(f[0]),l(f[1])]:l(f),done:d}},[Symbol.iterator](){return this}}}}function X(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function At(e,t){const n={get(r){const o=this.__v_raw,i=p(o),c=p(r);e||(W(r,c)&&E(i,"get",r),E(i,"get",c));const{has:a}=Q(i),u=t?ye:e?we:v;if(a.call(i,r))return u(o.get(r));if(a.call(i,c))return u(o.get(c));o!==i&&o.get(r)},get size(){const r=this.__v_raw;return!e&&E(p(r),"iterate",C),Reflect.get(r,"size",r)},has(r){const o=this.__v_raw,i=p(o),c=p(r);return e||(W(r,c)&&E(i,"has",r),E(i,"has",c)),r===c?o.has(r):o.has(r)||o.has(c)},forEach(r,o){const i=this,c=i.__v_raw,a=p(c),u=t?ye:e?we:v;return!e&&E(a,"iterate",C),c.forEach((l,f)=>r.call(o,u(l),u(f),i))}};return ze(n,e?{add:X("add"),set:X("set"),delete:X("delete"),clear:X("clear")}:{add(r){!t&&!N(r)&&!j(r)&&(r=p(r));const o=p(this);return Q(o).has.call(o,r)||(o.add(r),I(o,"add",r,r)),this},set(r,o){!t&&!N(o)&&!j(o)&&(o=p(o));const i=p(this),{has:c,get:a}=Q(i);let u=c.call(i,r);u||(r=p(r),u=c.call(i,r));const l=a.call(i,r);return i.set(r,o),u?W(o,l)&&I(i,"set",r,o,l):I(i,"add",r,o),this},delete(r){const o=p(this),{has:i,get:c}=Q(o);let a=i.call(o,r);a||(r=p(r),a=i.call(o,r));const u=c?c.call(o,r):void 0,l=o.delete(r);return a&&I(o,"delete",r,void 0,u),l},clear(){const r=p(this),o=r.size!==0,i=void 0,c=r.clear();return o&&I(r,"clear",void 0,void 0,i),c}}),["keys","values","entries",Symbol.iterator].forEach(r=>{n[r]=Pt(r,e,t)}),n}function We(e,t){const n=At(e,t);return(s,r,o)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?s:Reflect.get(se(n,r)&&r in s?n:s,r,o)}const Lt={get:We(!1,!1)},Wt={get:We(!0,!1)};function Wn(e,t,n){const s=p(n);if(s!==n&&t.call(e,s)){const r=ke(e);Rt(`Reactive ${r} contains both the raw and reactive versions of the same object${r==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}const He=new WeakMap,Ht=new WeakMap,Ke=new WeakMap,Kt=new WeakMap;function qt(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ut(e){return e.__v_skip||!Object.isExtensible(e)?0:qt(ke(e))}function qe(e){return j(e)?e:Je(e,!1,Dt,Lt,He)}function Ue(e){return Je(e,!0,Ft,Wt,Ke)}function Je(e,t,n,s,r){if(!B(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=Ut(e);if(o===0)return e;const i=r.get(e);if(i)return i;const c=new Proxy(e,o===2?s:n);return r.set(e,c),c}function j(e){return!!(e&&e.__v_isReadonly)}function N(e){return!!(e&&e.__v_isShallow)}function Jt(e){return e?!!e.__v_raw:!1}function p(e){const t=e&&e.__v_raw;return t?p(t):e}const v=e=>B(e)?qe(e):e,we=e=>B(e)?Ue(e):e;function V(e){return e?e.__v_isRef===!0:!1}function Yt(e){return Bt(e,!1)}function Bt(e,t){return V(e)?e:new Gt(e,t)}class Gt{constructor(t,n){this.dep=new Fe,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?t:p(t),this._value=n?t:v(t),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(t){const n=this._rawValue,s=this.__v_isShallow||N(t)||j(t);t=s?t:p(t),W(t,n)&&(this._rawValue=t,this._value=s?t:v(t),this.dep.trigger())}}/**
* @vue/runtime-core v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const k=[];function Hn(e){k.push(e)}function Kn(){k.pop()}let be=!1;function qn(e,...t){if(be)return;be=!0,fe();const n=k.length?k[k.length-1].component:null,s=n&&n.appContext.config.warnHandler,r=Qt();if(s)ve(s,n,11,[e+t.map(o=>{var i,c;return(c=(i=o.toString)==null?void 0:i.call(o))!=null?c:JSON.stringify(o)}).join(""),n&&n.proxy,r.map(({vnode:o})=>`at <${et(n,o.type)}>`).join(`
`),r]);else{const o=[`[Vue warn]: ${e}`,...t];r.length&&o.push(`
`,...Xt(r)),console.warn(...o)}de(),be=!1}function Qt(){let e=k[k.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const s=e.component&&e.component.parent;e=s&&s.vnode}return t}function Xt(e){const t=[];return e.forEach((n,s)=>{t.push(...s===0?[]:[`
`],...Zt(n))}),t}function Zt({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",s=e.component?e.component.parent==null:!1,r=` at <${et(e.component,e.type,s)}`,o=">"+n;return e.props?[r,...en(e.props),o]:[r+o]}function en(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(s=>{t.push(...Ye(s,e[s]))}),n.length>3&&t.push(" ..."),t}function Ye(e,t,n){return Ce(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:V(t)?(t=Ye(e,p(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):oe(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=p(t),n?t:[`${e}=`,t])}const Un={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function ve(e,t,n,s){try{return s?e(...s):e()}catch(r){Be(r,t,n)}}function Be(e,t,n,s=!0){const r=t?t.vnode:null,{errorHandler:o,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Ot;if(t){let c=t.parent;const a=t.proxy,u=`https://vuejs.org/error-reference/#runtime-${n}`;for(;c;){const l=c.ec;if(l){for(let f=0;f<l.length;f++)if(l[f](e,a,u)===!1)return}c=c.parent}if(o){fe(),ve(o,null,10,[e,a,u]),de();return}}tn(e,n,r,s,i)}function tn(e,t,n,s=!0,r=!1){if(r)throw e;console.error(e)}const x=[];let S=-1;const D=[];let M=null,F=0;const nn=Promise.resolve();let Ee=null;const rn=100;function sn(e){let t=S+1,n=x.length;for(;t<n;){const s=t+n>>>1,r=x[s],o=q(r);o<e||o===e&&r.flags&2?t=s+1:n=s}return t}function on(e){if(!(e.flags&1)){const t=q(e),n=x[x.length-1];!n||!(e.flags&2)&&t>=q(n)?x.push(e):x.splice(sn(t),0,e),e.flags|=1,Ge()}}function Ge(){Ee||(Ee=nn.then(Qe))}function cn(e){z(e)?D.push(...e):M&&e.id===-1?M.splice(F+1,0,e):e.flags&1||(D.push(e),e.flags|=1),Ge()}function an(e){if(D.length){const t=[...new Set(D)].sort((n,s)=>q(n)-q(s));if(D.length=0,M){M.push(...t);return}for(M=t,F=0;F<M.length;F++){const n=M[F];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}M=null,F=0}}const q=e=>e.id==null?e.flags&2?-1:1/0:e.id;function Qe(e){const t=St;try{for(S=0;S<x.length;S++){const n=x[S];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),ve(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;S<x.length;S++){const n=x[S];n&&(n.flags&=-2)}S=-1,x.length=0,an(e),Ee=null,(x.length||D.length)&&Qe(e)}}function Jn(e,t){const n=e.get(t)||0;if(n>rn){const s=t.i,r=s&&Ze(s.type);return Be(`Maximum recursive updates exceeded${r?` in component <${r}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,null,10),!0}return e.set(t,n+1),!1}const xe=new Map,Z=new Map;function Yn(e,t){return Z.has(e)?!1:(Z.set(e,{initialDef:ee(t),instances:new Set}),!0)}function ee(e){return fn(e)?e.__vccOpts:e}function Bn(e,t){const n=Z.get(e);n&&(n.initialDef.render=t,[...n.instances].forEach(s=>{t&&(s.render=t,ee(s.type).render=t),s.renderCache=[],s.update()}))}function Gn(e,t){const n=Z.get(e);if(!n)return;t=ee(t),Xe(n.initialDef,t);const s=[...n.instances];for(let r=0;r<s.length;r++){const o=s[r],i=ee(o.type);let c=xe.get(i);c||(i!==n.initialDef&&Xe(i,t),xe.set(i,c=new Set)),c.add(o),o.appContext.propsCache.delete(o.type),o.appContext.emitsCache.delete(o.type),o.appContext.optionsCache.delete(o.type),o.ceReload?(c.add(o),o.ceReload(t.styles),c.delete(o)):o.parent?on(()=>{o.parent.update(),c.delete(o)}):o.appContext.reload?o.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required."),o.root.ce&&o!==o.root&&o.root.ce._removeChildStyle(i)}cn(()=>{xe.clear()})}function Xe(e,t){ze(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function Qn(e){return(t,n)=>{try{return e(t,n)}catch(s){console.error(s),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}ce().requestIdleCallback,ce().cancelIdleCallback;const Xn={};{const e=ce(),t=(n,s)=>{let r;return(r=e[n])||(r=e[n]=[]),r.push(s),o=>{r.length>1?r.forEach(i=>i(o)):r[0](o)}};t("__VUE_INSTANCE_SETTERS__",n=>n),t("__VUE_SSR_SETTERS__",n=>n)}const un=/(?:^|[-_])(\w)/g,ln=e=>e.replace(un,t=>t.toUpperCase()).replace(/[-_]/g,"");function Ze(e,t=!0){return oe(e)?e.displayName||e.name:e.name||t&&e.__name}function et(e,t,n=!1){let s=Ze(t);if(!s&&t.__file){const r=t.__file.match(/([^/\\]+)\.\w+$/);r&&(s=r[1])}if(!s&&e&&e.parent){const r=o=>{for(const i in o)if(o[i]===t)return i};s=r(e.components||e.parent.type.components)||r(e.appContext.components)}return s?ln(s):n?"App":"Anonymous"}function fn(e){return oe(e)&&"__vccOpts"in e}const tt=()=>document.documentElement.getAttribute("data-theme")==="dark";[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:dn}=Object,{fromEntries:hn}=Object,nt=Yt(!1);typeof document<"u"&&(nt.value=tt(),new MutationObserver(()=>{nt.value=tt()}).observe(document.documentElement,{attributeFilter:["data-theme"],attributes:!0}));const pn="ENTRIES",rt="KEYS",st="VALUES",w="";class Oe{set;_type;_path;constructor(t,n){const s=t._tree,r=Array.from(s.keys());this.set=t,this._type=n,this._path=r.length>0?[{node:s,keys:r}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:n}=P(this._path);if(P(n)===w)return{done:!1,value:this.result()};const s=t.get(P(n));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=P(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>P(t)).filter(t=>t!==w).join("")}value(){return P(this._path).node.get(w)}result(){switch(this._type){case st:return this.value();case rt:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const P=e=>e[e.length-1],gn=(e,t,n)=>{const s=new Map;if(typeof t!="string")return s;const r=t.length+1,o=r+n,i=new Uint8Array(o*r).fill(n+1);for(let c=0;c<r;++c)i[c]=c;for(let c=1;c<o;++c)i[c*r]=c;return ot(e,t,n,s,i,1,r,""),s},ot=(e,t,n,s,r,o,i,c)=>{const a=o*i;e:for(const u of e.keys())if(u===w){const l=r[a-1];l<=n&&s.set(c,[e.get(u),l])}else{let l=o;for(let f=0;f<u.length;++f,++l){const d=u[f],m=i*l,b=m-i;let g=r[m];const h=Math.max(0,l-n-1),_=Math.min(i-1,l+n);for(let y=h;y<_;++y){const R=d!==t[y],re=r[b+y]+ +R,J=r[b+y+1]+1,T=r[m+y]+1,A=r[m+y+1]=Math.min(re,J,T);A<g&&(g=A)}if(g>n)continue e}ot(e.get(u),t,n,s,r,l,i,c+u)}};let it=class U{_tree;_prefix;_size=void 0;constructor(t=new Map,n=""){this._tree=t,this._prefix=n}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[n,s]=te(this._tree,t.slice(this._prefix.length));if(n===void 0){const[r,o]=Ne(s);for(const i of r.keys())if(i!==w&&i.startsWith(o)){const c=new Map;return c.set(i.slice(o.length),r.get(i)),new U(c,t)}}return new U(n,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,_n(this._tree,t)}entries(){return new Oe(this,pn)}forEach(t){for(const[n,s]of this)t(n,s,this)}fuzzyGet(t,n){return gn(this._tree,t,n)}get(t){const n=Se(this._tree,t);return n!==void 0?n.get(w):void 0}has(t){return Se(this._tree,t)?.has(w)??!1}keys(){return new Oe(this,rt)}set(t,n){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,Ie(this._tree,t).set(w,n),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ie(this._tree,t);return s.set(w,n(s.get(w))),this}fetch(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ie(this._tree,t);let r=s.get(w);return r===void 0&&s.set(w,r=n()),r}values(){return new Oe(this,st)}[Symbol.iterator](){return this.entries()}static from(t){const n=new U;for(const[s,r]of t)n.set(s,r);return n}static fromObject(t){return U.from(Object.entries(t))}};const te=(e,t,n=[])=>{if(t.length===0||e==null)return[e,n];for(const s of e.keys())if(s!==w&&t.startsWith(s))return n.push([e,s]),te(e.get(s),t.slice(s.length),n);return n.push([e,t]),te(void 0,"",n)},Se=(e,t)=>{if(t.length===0||!e)return e;for(const n of e.keys())if(n!==w&&t.startsWith(n))return Se(e.get(n),t.slice(n.length))},Ie=(e,t)=>{const n=t.length;e:for(let s=0;e&&s<n;){for(const o of e.keys())if(o!==w&&t[s]===o[0]){const i=Math.min(n-s,o.length);let c=1;for(;c<i&&t[s+c]===o[c];)++c;const a=e.get(o);if(c===o.length)e=a;else{const u=new Map;u.set(o.slice(c),a),e.set(t.slice(s,s+c),u),e.delete(o),e=u}s+=c;continue e}const r=new Map;return e.set(t.slice(s),r),r}return e},_n=(e,t)=>{const[n,s]=te(e,t);if(n!==void 0){if(n.delete(w),n.size===0)ct(s);else if(n.size===1){const[r,o]=n.entries().next().value;at(s,r,o)}}},ct=e=>{if(e.length===0)return;const[t,n]=Ne(e);if(t.delete(n),t.size===0)ct(e.slice(0,-1));else if(t.size===1){const[s,r]=t.entries().next().value;s!==w&&at(e.slice(0,-1),s,r)}},at=(e,t,n)=>{if(e.length===0)return;const[s,r]=Ne(e);s.set(r+t,n),s.delete(r)},Ne=e=>e[e.length-1],mn=(e,t)=>{const n=e._idToShortId.get(t);if(n!=null)return e._storedFields.get(n)},yn=/[\n\r\p{Z}\p{P}]+/u,Me="or",ut="and",wn="and_not",bn=(e,t)=>{e.includes(t)||e.push(t)},lt=(e,t)=>{for(const n of t)e.includes(n)||e.push(n)},ft=({score:e},{score:t})=>t-e,vn=()=>new Map,ne=e=>{const t=new Map;for(const n of Object.keys(e))t.set(parseInt(n,10),e[n]);return t},dt=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[Me]:(e,t)=>{for(const n of t.keys()){const s=e.get(n);if(s==null)e.set(n,t.get(n));else{const{score:r,terms:o,match:i}=t.get(n);s.score=s.score+r,s.match=Object.assign(s.match,i),lt(s.terms,o)}}return e},[ut]:(e,t)=>{const n=new Map;for(const s of t.keys()){const r=e.get(s);if(r==null)continue;const{score:o,terms:i,match:c}=t.get(s);lt(r.terms,i),n.set(s,{score:r.score+o,terms:r.terms,match:Object.assign(r.match,c)})}return n},[wn]:(e,t)=>{for(const n of t.keys())e.delete(n);return e}},En=(e,t,n,s,r,o)=>{const{k:i,b:c,d:a}=o;return Math.log(1+(n-t+.5)/(t+.5))*(a+e*(i+1)/(e+i*(1-c+c*s/r)))},xn=e=>(t,n,s)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,n,s):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,n,s):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,n,s):1}),pt=(e,t,n,s)=>{for(const r of Object.keys(e._fieldIds))if(e._fieldIds[r]===n){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${s}" was not present in field "${r}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},On=(e,t,n,s)=>{if(!e._index.has(s)){pt(e,n,t,s);return}const r=e._index.fetch(s,vn),o=r.get(t),i=o?.get(n);!o||typeof i>"u"?pt(e,n,t,s):i<=1?o.size<=1?r.delete(t):o.delete(n):o.set(n,i-1),e._index.get(s).size===0&&e._index.delete(s)},Sn={k:1.2,b:.7,d:.5},In={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(yn),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},gt={combineWith:Me,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Sn},Nn={combineWith:ut,prefix:(e,t,n)=>t===n.length-1},Mn={batchSize:1e3,batchWait:10},_t={minDirtFactor:.1,minDirtCount:20},Rn={...Mn,..._t},mt=Symbol("*"),Tn=(e,t)=>{const n=new Map,s={...e._options.searchOptions,...t};for(const[r,o]of e._documentIds){const i=s.boostDocument?s.boostDocument(o,"",e._storedFields.get(r)):1;n.set(r,{score:i,terms:[],match:{}})}return n},yt=(e,t=Me)=>{if(e.length===0)return new Map;const n=t.toLowerCase();if(!(n in ht))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(ht[n])},Re=(e,t,n,s,r,o,i,c,a,u=new Map)=>{if(o==null)return u;for(const l of Object.keys(i)){const f=i[l],d=e._fieldIds[l],m=o.get(d);if(m==null)continue;let b=m.size;const g=e._avgFieldLength[d];for(const h of m.keys()){if(!e._documentIds.has(h)){On(e,d,h,n),b-=1;continue}const _=c?c(e._documentIds.get(h),n,e._storedFields.get(h)):1;if(!_)continue;const y=m.get(h),R=e._fieldLength.get(h)[d],re=En(y,b,e._documentCount,R,g,a),J=s*r*f*_*re,T=u.get(h);if(T){T.score+=J,bn(T.terms,t);const A=dt(T.match,n);A?A.push(l):T.match[n]=[l]}else u.set(h,{score:J,terms:[t],match:{[n]:[l]}})}}return u},zn=(e,t,n)=>{const s={...e._options.searchOptions,...n},r=(s.fields??e._options.fields).reduce((g,h)=>({...g,[h]:dt(s.boost,h)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:c,bm25:a}=s,{fuzzy:u,prefix:l}={...gt.weights,...i},f=e._index.get(t.term),d=Re(e,t.term,t.term,1,t.termBoost,f,r,o,a);let m,b;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const g=t.fuzzy===!0?.2:t.fuzzy,h=g<1?Math.min(c,Math.round(t.term.length*g)):g;h&&(b=e._index.fuzzyGet(t.term,h))}if(m)for(const[g,h]of m){const _=g.length-t.term.length;if(!_)continue;b?.delete(g);const y=l*g.length/(g.length+.3*_);Re(e,t.term,g,y,t.termBoost,h,r,o,a,d)}if(b)for(const g of b.keys()){const[h,_]=b.get(g);if(!_)continue;const y=u*g.length/(g.length+_);Re(e,t.term,g,y,t.termBoost,h,r,o,a,d)}return d},wt=(e,t,n={})=>{if(t===mt)return Tn(e,n);if(typeof t!="string"){const l={...n,...t,queries:void 0},f=t.queries.map(d=>wt(e,d,l));return yt(f,l.combineWith)}const{tokenize:s,processTerm:r,searchOptions:o}=e._options,i={tokenize:s,processTerm:r,...o,...n},{tokenize:c,processTerm:a}=i,u=c(t).flatMap(l=>a(l)).filter(l=>!!l).map(xn(i)).map(l=>zn(e,l,i));return yt(u,i.combineWith)},bt=(e,t,n={})=>{const{searchOptions:s}=e._options,r={...s,...n},o=wt(e,t,n),i=[];for(const[c,{score:a,terms:u,match:l}]of o){const f=u.length||1,d={id:e._documentIds.get(c),score:a*f,terms:Object.keys(l),queryTerms:u,match:l};Object.assign(d,e._storedFields.get(c)),(r.filter==null||r.filter(d))&&i.push(d)}return t===mt&&r.boostDocument==null||i.sort(ft),i},Cn=(e,t,n={})=>{n={...e._options.autoSuggestOptions,...n};const s=new Map;for(const{score:o,terms:i}of bt(e,t,n)){const c=i.join(" "),a=s.get(c);a!=null?(a.score+=o,a.count+=1):s.set(c,{score:o,terms:i,count:1})}const r=[];for(const[o,{score:i,terms:c,count:a}]of s)r.push({suggestion:o,terms:c,score:i/a});return r.sort(ft),r};class Vn{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const n=t.autoVacuum==null||t.autoVacuum===!0?Rn:t.autoVacuum;this._options={...In,...t,autoVacuum:n,searchOptions:{...gt,...t.searchOptions},autoSuggestOptions:{...Nn,...t.autoSuggestOptions}},this._index=new it,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=_t,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[n,s]of this._index){const r={};for(const[o,i]of s)r[o]=Object.fromEntries(i);t.push([n,r])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let n=0;n<t.length;n++)this._fieldIds[t[n]]=n}}const kn=e=>new Vn(e),$n=({documentCount:e,nextId:t,fieldIds:n,averageFieldLength:s,dirtCount:r,version:o},i)=>{if(o!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kn(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=n,c._avgFieldLength=s,c._dirtCount=r??0,c._index=new it,c},jn=(e,t)=>{const{index:n,documentIds:s,fieldLength:r,storedFields:o}=e,i=$n(e,t);i._documentIds=ne(s),i._fieldLength=ne(r),i._storedFields=ne(o);for(const[c,a]of i._documentIds)i._idToShortId.set(a,c);for(const[c,a]of n){const u=new Map;for(const l of Object.keys(a))u.set(parseInt(l,10),ne(a[l]));i._index.set(c,u)}return i},Te=(e,t)=>{const n=e.toLowerCase(),s=t.toLowerCase(),r=[];let o=0,i=0;const c=(u,l=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&r.push(f),i+=f.length,l||(r.push(["mark",t]),i+=t.length,i>=100&&r.push(" …"))};let a=n.indexOf(s,o);if(a===-1)return null;for(;a>=0;){const u=a+s.length;if(c(e.slice(o,a)),o=u,i>100)break;a=n.indexOf(s,o)}return i<100&&c(e.slice(o),!0),r},{entries:Dn}=Object,Fn=(e,t)=>t.contents.reduce((n,[,s])=>n+s,0)-e.contents.reduce((n,[,s])=>n+s,0),Pn=(e,t)=>Math.max(...t.contents.map(([,n])=>n))-Math.max(...e.contents.map(([,n])=>n)),vt=(e,t,n={},s="max")=>{const r={};return bt(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...n}).forEach(o=>{const{id:i,terms:c,score:a}=o,u=i.includes("@"),l=i.includes("#"),[f,d]=i.split(/[#@]/),m=Number(f),b=c.sort((h,_)=>h.length-_.length).filter((h,_)=>c.slice(_+1).every(y=>!y.includes(h))),{contents:g}=r[m]??={title:"",contents:[]};if(u)g.push([{type:"customField",id:m,index:d,display:b.map(h=>o.c.map(_=>Te(_,h))).flat().filter(h=>h!==null)},a]);else{const h=b.map(_=>Te(o.h,_)).filter(_=>_!==null);if(h.length&&g.push([{type:l?"heading":"title",id:m,...l&&{anchor:d},display:h},a]),"t"in o&&o.t)for(const _ of o.t){const y=b.map(R=>Te(_,R)).filter(R=>R!==null);y.length&&g.push([{type:"text",id:m,...l&&{anchor:d},display:y},a])}}}),Dn(r).sort(([,o],[,i])=>(s?Fn:Pn)(o,i)).map(([o,{title:i,contents:c}])=>{if(!i){const a=mn(t,o);a&&(i=a.h)}return{title:i,contents:c.map(([a])=>a)}})},Et=(e,t,n={})=>{const s=Cn(t,e,{fuzzy:.2,maxFuzzy:3,...n}).map(({suggestion:r})=>r);return e.includes(" ")?s:s.filter(r=>!r.includes(" "))},An=hn(dn(JSON.parse("{\"/\":{\"documentCount\":151,\"nextId\":151,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1@0\",\"3\":\"2\",\"4\":\"2@0\",\"5\":\"3\",\"6\":\"3@0\",\"7\":\"4\",\"8\":\"4#qu-est-ce-qu-hyperion\",\"9\":\"4#qu-est-ce-qu-une-api-restful\",\"10\":\"4#prerequis-installation-de-git\",\"11\":\"4#cloner-le-depot-hyperion\",\"12\":\"4@0\",\"13\":\"5\",\"14\":\"5@0\",\"15\":\"6\",\"16\":\"6@0\",\"17\":\"7\",\"18\":\"7#auth\",\"19\":\"7#db\",\"20\":\"7#service-externe\",\"21\":\"7#fs\",\"22\":\"7#code-quality-ci-cd\",\"23\":\"7#autres\",\"24\":\"7@0\",\"25\":\"8\",\"26\":\"8@0\",\"27\":\"9\",\"28\":\"9@0\",\"29\":\"10\",\"30\":\"10@0\",\"31\":\"11\",\"32\":\"11#introduction-a-sqlalchemy\",\"33\":\"11#les-deux-approches-de-sqlalchemy\",\"34\":\"11#sqlalchemy-core\",\"35\":\"11#sqlalchemy-orm\",\"36\":\"11#concepts-fondamentaux\",\"37\":\"11#les-modeles\",\"38\":\"11#les-sessions\",\"39\":\"11#les-relations\",\"40\":\"11#sqlalchemy-asynchrone-dans-hyperion\",\"41\":\"11#session-asynchrone\",\"42\":\"11#operations-crud-asynchrones\",\"43\":\"11#avantages-de-sqlalchemy\",\"44\":\"11#productivite\",\"45\":\"11#robustesse\",\"46\":\"11#portabilite\",\"47\":\"11#exemple-pratique-pour-hyperion\",\"48\":\"11#pour-aller-plus-loin\",\"49\":\"11#imports-necessaires\",\"50\":\"11#operations-simples-crud\",\"51\":\"11#lecture-des-donnees-read\",\"52\":\"11#creation-de-donnees-create\",\"53\":\"11#mise-a-jour-de-donnees-update\",\"54\":\"11#suppression-de-donnees-delete\",\"55\":\"11#points-de-vigilance\",\"56\":\"11#gestion-des-transactions\",\"57\":\"11#performance-et-memoire\",\"58\":\"11#validation-des-donnees\",\"59\":\"11#jointures-et-requetes-avancees\",\"60\":\"11#jointures-simples\",\"61\":\"11#comprendre-joinedload-le-chargement-eager\",\"62\":\"11#probleme-du-n-1\",\"63\":\"11#solution-avec-joinedload\",\"64\":\"11#quand-utiliser-joinedload\",\"65\":\"11#alternatives-a-joinedload\",\"66\":\"11#jointures-imbriquees\",\"67\":\"11#jointures-avec-filtres\",\"68\":\"11#agregations\",\"69\":\"11#exemple-complet-d-un-service\",\"70\":\"11@0\",\"71\":\"12\",\"72\":\"12@0\",\"73\":\"13\",\"74\":\"13@0\",\"75\":\"14\",\"76\":\"14@0\",\"77\":\"15\",\"78\":\"15@0\",\"79\":\"16\",\"80\":\"16@0\",\"81\":\"17\",\"82\":\"17#architecture-a-l-echelle-du-repository\",\"83\":\"17#architecture-d-un-module\",\"84\":\"17@0\",\"85\":\"18\",\"86\":\"18#qu-est-ce-qu-hyperion\",\"87\":\"18#qu-est-ce-qu-une-api-restful\",\"88\":\"18#prerequis-installation-de-git\",\"89\":\"18#cloner-le-depot-hyperion\",\"90\":\"18#suivre-les-instructions-d-installation-du-readme\",\"91\":\"18@0\",\"92\":\"19\",\"93\":\"19#introduction\",\"94\":\"19#pourquoi-hyperion-existe-t-il-1\",\"95\":\"19#le-probleme-a-resoudre\",\"96\":\"19#la-solution-un-back-end-unifie\",\"97\":\"19#que-fait-concretement-hyperion\",\"98\":\"19#gestion-des-utilisateurs-et-groupes\",\"99\":\"19#services-aux-etudiants\",\"100\":\"19#services-administratifs\",\"101\":\"19#architecture-technique-pourquoi-ces-choix\",\"102\":\"19#fastapi-comme-framework-web\",\"103\":\"19#postgresql-comme-base-de-donnees\",\"104\":\"19#sqlalchemy-comme-orm\",\"105\":\"19#l-ecosysteme-myecl\",\"106\":\"19#applications-clientes\",\"107\":\"19#services-externes-integres\",\"108\":\"19#exemple-concret-la-vie-d-une-requete\",\"109\":\"19#concepts-cles-a-retenir\",\"110\":\"19#api-rest\",\"111\":\"19#authentification-et-autorisation\",\"112\":\"19#validation-des-donnees\",\"113\":\"19#le-schema-a-retenir\",\"114\":\"19#pourquoi-apprendre-hyperion\",\"115\":\"19#pour-votre-formation\",\"116\":\"19#pour-l-ecole\",\"117\":\"19#pour-votre-avenir-professionnel\",\"118\":\"19#prochaines-etapes\",\"119\":\"19#une-architecture-en-miroir\",\"120\":\"19#les-4-verbes-http\",\"121\":\"19#get-recuperer-des-donnees\",\"122\":\"19#post-creer-des-donnees\",\"123\":\"19#patch-modifier-des-donnees\",\"124\":\"19#delete-supprimer-des-donnees\",\"125\":\"19#les-4-operations-crud\",\"126\":\"19#create-creer\",\"127\":\"19#read-lire\",\"128\":\"19#update-mettre-a-jour\",\"129\":\"19#delete-supprimer\",\"130\":\"19#les-4-verbes-sql\",\"131\":\"19#insert-creer\",\"132\":\"19#select-lire\",\"133\":\"19#update-modifier\",\"134\":\"19#delete-supprimer-1\",\"135\":\"19#la-correspondance-parfaite\",\"136\":\"19#exemple-complet-gestion-d-un-evenement\",\"137\":\"19#_1-requete-http-du-client\",\"138\":\"19#_2-endpoint-fastapi-niveau-crud\",\"139\":\"19#_3-crud-vers-sql\",\"140\":\"19#codes-de-statut-http-essentiels\",\"141\":\"19#_2xx-succes\",\"142\":\"19#_4xx-erreurs-client\",\"143\":\"19#_5xx-erreurs-serveur\",\"144\":\"19#pourquoi-cette-coherence-est-importante\",\"145\":\"19#_1-facilite-d-apprentissage\",\"146\":\"19#_2-maintenabilite\",\"147\":\"19#_3-performance\",\"148\":\"19#prochaines-etapes-1\",\"149\":\"19@0\",\"150\":\"20\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,41],\"1\":[3],\"2\":[null,null,1],\"3\":[2,4],\"4\":[null,null,1],\"5\":[1],\"6\":[null,null,1],\"7\":[2,26],\"8\":[6,39],\"9\":[8,61],\"10\":[4,59],\"11\":[4,38],\"12\":[null,null,1],\"13\":[1],\"14\":[null,null,1],\"15\":[3],\"16\":[null,null,1],\"17\":[3,11],\"18\":[1,13],\"19\":[1,2],\"20\":[2,18],\"21\":[1,15],\"22\":[4,4],\"23\":[1,67],\"24\":[null,null,1],\"25\":[3,34],\"26\":[null,null,1],\"27\":[3],\"28\":[null,null,1],\"29\":[2],\"30\":[null,null,1],\"31\":[1,214],\"32\":[3,77],\"33\":[5,11],\"34\":[2,43],\"35\":[2,64],\"36\":[2],\"37\":[2,64],\"38\":[2,44],\"39\":[2,53],\"40\":[4,18],\"41\":[2,35],\"42\":[3,61],\"43\":[3],\"44\":[1,30],\"45\":[1,26],\"46\":[1,23],\"47\":[4,62],\"48\":[4,108],\"49\":[2,53],\"50\":[4],\"51\":[5,89],\"52\":[5,67],\"53\":[7,44],\"54\":[5,26],\"55\":[3],\"56\":[3,41],\"57\":[3,29],\"58\":[3,49],\"59\":[4,22],\"60\":[2,41],\"61\":[4,28],\"62\":[3,65],\"63\":[2,51],\"64\":[3,50],\"65\":[2,46],\"66\":[2,67],\"67\":[3,39],\"68\":[1,72],\"69\":[5,135],\"70\":[null,null,1],\"71\":[1,144],\"72\":[null,null,1],\"73\":[1,86],\"74\":[null,null,1],\"75\":[2,72],\"76\":[null,null,1],\"77\":[1,137],\"78\":[null,null,1],\"79\":[2],\"80\":[null,null,1],\"81\":[1,26],\"82\":[5,1],\"83\":[4,6],\"84\":[null,null,1],\"85\":[4,42],\"86\":[6,39],\"87\":[8,61],\"88\":[4,59],\"89\":[4,24],\"90\":[7,43],\"91\":[null,null,1],\"92\":[6,69],\"93\":[1,45],\"94\":[6],\"95\":[4,34],\"96\":[6,19],\"97\":[5],\"98\":[5,24],\"99\":[3,27],\"100\":[2,22],\"101\":[6],\"102\":[4,50],\"103\":[5,27],\"104\":[3,51],\"105\":[3,12],\"106\":[2,18],\"107\":[3,20],\"108\":[7,96],\"109\":[4],\"110\":[2,28],\"111\":[3,17],\"112\":[3,24],\"113\":[4],\"114\":[4],\"115\":[3,22],\"116\":[3,28],\"117\":[4,24],\"118\":[2,53],\"119\":[4,32],\"120\":[4],\"121\":[4,43],\"122\":[4,43],\"123\":[4,45],\"124\":[4,29],\"125\":[4,20],\"126\":[2,28],\"127\":[2,27],\"128\":[4,23],\"129\":[2,21],\"130\":[4,16],\"131\":[2,28],\"132\":[2,30],\"133\":[2,27],\"134\":[2,18],\"135\":[3,34],\"136\":[6,12],\"137\":[5,27],\"138\":[6,38],\"139\":[4,37],\"140\":[5],\"141\":[2,20],\"142\":[3,23],\"143\":[3,53],\"144\":[5],\"145\":[4,26],\"146\":[2,23],\"147\":[2,24],\"148\":[2,64],\"149\":[null,null,1],\"150\":[1,3]},\"averageFieldLength\":[3.1860257426074963,41.16703725877233,0.7129073021918665],\"storedFields\":{\"0\":{\"h\":\"Project home\",\"t\":[\"This is an example of a project homepage. You can place your main content here.\",\"To use this layout, you need to set home: true in the page front matter.\",\"For related descriptions of configuration items, please seeProject HomePage Layout Config.\"]},\"1\":{\"h\":\"Git, GitHub, Fork\"},\"2\":{\"c\":[\"Guide\"]},\"3\":{\"h\":\"Méta-documentation\",\"t\":[\"La documentation sur la documentation\"]},\"4\":{\"c\":[\"Guide\"]},\"5\":{\"h\":\"Hyperion\"},\"6\":{\"c\":[\"Guide\"]},\"7\":{\"h\":\"Premier pas\",\"t\":[\"Bienvenue dans la documentation de Hyperion, le back-end de MyECL. Ce guide vous aidera à faire vos premiers pas avec Hyperion et à comprendre ses fonctionnalités de base.\"]},\"8\":{\"h\":\"Qu'est-ce qu'Hyperion ?\",\"t\":[\"Hyperion est une application back-end conçue pour gérer les contenus et les utilisateurs de MyECL ainsi que des services annexes comme la chaine de rentrée et le système d'authentification SSO[1]. Il offre une interface API RESTful pour interagir avec les données et les services.\"]},\"9\":{\"h\":\"Qu'est-ce qu'une API RESTful ?\",\"t\":[\"Une API RESTful (Representational State Transfer) est un style d'architecture pour les services web qui utilise les protocoles HTTP pour effectuer des opérations sur les ressources. Les principales caractéristiques d'une API RESTful incluent :\",\"Utilisation des verbes HTTP (GET, POST, PUT, DELETE) pour effectuer des opérations sur les ressources.\",\"Identification des ressources via des URI (Uniform Resource Identifier).\",\"Représentation des ressources au format JSON.\",\"Statelessness : chaque requête du client au serveur doit contenir toutes les informations nécessaires pour comprendre et traiter la requête.\"]},\"10\":{\"h\":\"Prérequis : Installation de Git\",\"t\":[\"Vérification\",\"Avant de commencer, assurez-vous que Git est installé sur votre système. Vous pouvez vérifier cela en exécutant la commande suivante dans votre terminal :\",\"git --version\",\"Si Git est installé, vous devriez voir quelque chose comme git version 2.x.x.\",\"Configuration initiale\",\"Après l'installation de Git, il est recommandé de configurer votre nom d'utilisateur et votre adresse e-mail :\",\"git config --global user.name \\\"Votre Nom\\\" git config --global user.email \\\"votre.email@example.com\\\"\"]},\"11\":{\"h\":\"Cloner le dépôt Hyperion\",\"t\":[\"Une fois Git installé et configuré, vous pouvez cloner le dépôt Hyperion en utilisant la commande suivante :\",\"git clone https://github.com/aeecleclair/hyperion.git\",\"Pour plus d'informations sur l'authentification Single Sign-On (SSO), voir : /hyperion/authentification-sso/ ↩︎\"]},\"12\":{\"c\":[\"Guide\"]},\"13\":{\"h\":\"Titan\"},\"14\":{\"c\":[\"Guide\"]},\"15\":{\"h\":\"Plus loin...\"},\"16\":{\"c\":[\"Guide\"]},\"17\":{\"h\":\"Plus loin...\",\"t\":[\"A partir de là c du vrac sur la suite :\"]},\"18\":{\"h\":\"Auth\",\"t\":[\"CalypSSO\",\"le SSO OIDC avec nos auth clients\",\"cmt marche le flow d'authentification\"]},\"19\":{\"h\":\"db\",\"t\":[\"migrations\",\"CoreData\"]},\"20\":{\"h\":\"Service externe\",\"t\":[\"Un point sur chaque service externe utilisable\",\"PostgreSQL/SQLite\",\"ReDis\",\"HelloAsso, le S3\",\"TMDb\",\"Firebase\",\"mails\",\"Matrix/Synapse\"]},\"21\":{\"h\":\"FS\",\"t\":[\"assets\",\"cmt enregistrer et récup des fichiers (affiches du ciné, pdfs du ph, dossiers du RAID)\"]},\"22\":{\"h\":\"Code quality, CI/CD\",\"t\":[\"tests\",\"ruff et mypy\"]},\"23\":{\"h\":\"Autres\",\"t\":[\"un point sur MyECLPay\",\"le core que j'ai pas encore mentionné\",\"l'utilité de chaque info ds le config.yaml ou le .env\",\"l'utilité du __init__.py\",\"cmt utiliser les notifs ou l'envoi de mail en les retardant avec le scheduler\",\"les websockets\",\"loggers avec log levels\",\"initialisation de l'app (que se passe-t-il sous le capot qd on lance le projet)\",\"expliquer pk on a 2 Dockerfiles pour garder la mm base (juste les imports sans notre code)\"]},\"24\":{\"c\":[\"Guide\"]},\"25\":{\"h\":\"Contexte centralien : spécificités\",\"t\":[\"Après la ct la technique pure, mtn y a des concepts propres à MyECL car on est à Centrale : les notions de group, d'account type, de school (qui servent à rien pr l'instant), et de membership.\"]},\"26\":{\"c\":[\"Guide\"]},\"27\":{\"h\":\"Utilitaires, usage fréquents\"},\"28\":{\"c\":[\"Guide\"]},\"29\":{\"h\":\"Les modules\"},\"30\":{\"c\":[\"Guide\"]},\"31\":{\"h\":\"CRUDs\",\"t\":[\"Donc mtn les cruds, c le 4e pilier d'un module, ça prend en entrée des schemas (cf \\\"lingua franca\\\") et ça fait des requêtes SQL à la db (via l'ORM de SQLAlchemy qui parle les models et pas les schemas).\",\"Ça permet de cacher aux endpoints (donc à la logique) l'accès à la db en le masquant dans ces fonctions.\",\"A nouveau le SQL franchement c pas compliqué y a tjs 4 verbes (d'ailleurs faudrait mettre une page de grands principes où on explique que les 4 verbes HTTP (post, get, patch, delete), l'acronyme derrière CRUD (create read update delete) et les 4 verbes sql (insert select update delete) c la mm structure), ce verbe s'applique à une table, puis on peut faire des .where() dessus où on met des conditions pour filtrer, on peut faire des jointures avec d'autres tables qd elles se partagent une colonne, et du selectinload pour faire une requête sur le résultat d'une requête.\",\"Comme le SQL c N! fois + rapide faut éviter de faire les opérations en Python.\",\"Et à la fin oui faut convertir en Python donc .scalars() puis en général soit .all() pr tout avoir (ça fait une liste) soit .first_or_none() (ça renvoie 1 élément ou rien).\",\"Penser à rappeler que le crud en a aucune idée qu'il est derrière une API HTTP (le crud pourrait très bien être appelé par un script, un logiciel, ...) donc hors de question de raise une HTTPException ds les cruds ou quoi que ce soit qui suppose un contexte HTTP.\",\"Par contre on peut faire des try-except sur les cruds, si on peut s'attendre à une erreur d'intégrité (et expliquer ce que ça peut être, typiquement c lié à des truc unique en double ou des mapped qui ne se correspondent plus).\",\"En vrai je crois que là on tient bien l'essentiel des cruds.\",\"Bordel Skyrol là-dessus\",\"SQLAlchemy est une bibliothèque SQL pour Python qui facilite l'interaction avec les bases de données relationnelles. Elle offre une interface de haut niveau pour effectuer des opérationsCRUD (Create, Read, Update, Delete) et gérer les relations entre les tables.\"]},\"32\":{\"h\":\"Introduction à SQLAlchemy\",\"t\":[\"SQLAlchemy est l'une des bibliothèques les plus populaires de l'écosystème Python pour interagir avec les bases de données. Si vous avez déjà écrit du SQL à la main, vous comprendrez rapidement l'intérêt de cette bibliothèque : elle permet d'écrire du code Python plus lisible et maintenable tout en gardant la puissance du SQL.\",\"Au lieu d'écrire des requêtes SQL comme ceci :\",\"SELECT users.id, users.username, todos.title FROM users LEFT JOIN todos ON users.id = todos.user_id WHERE users.username = 'john_doe';\",\"Vous pouvez utiliser SQLAlchemy pour écrire :\",\"user_with_todos = session.query(User).options(joinedload(User.todos)).filter(User.username == 'john_doe').first()\"]},\"33\":{\"h\":\"Les deux approches de SQLAlchemy\",\"t\":[\"SQLAlchemy propose deux façons de travailler avec les bases de données :\"]},\"34\":{\"h\":\"SQLAlchemy Core\",\"t\":[\"L'approche \\\"Expression Language\\\" qui reste proche du SQL mais avec une syntaxe Python. Elle offre un contrôle fin sur les requêtes générées.\",\"from sqlalchemy import select, text # Avec Core result = connection.execute( select([users.c.username, users.c.email]).where(users.c.id == 42) )\"]},\"35\":{\"h\":\"SQLAlchemy ORM\",\"t\":[\"L'Object-Relational Mapping transforme vos tables en classes Python et vos lignes en objets. C'est cette approche que nous utilisons principalement dans Hyperion.\",\"# Avec ORM user = session.query(User).filter(User.id == 42).first() print(user.username, user.email)\",\"Choix dans Hyperion\",\"Dans Hyperion, nous privilégions l'ORM car il offre une meilleure lisibilité du code et facilite la maintenance pour une équipe de développeurs. L'approche objet est également plus intuitive pour la plupart des développeurs Python.\"]},\"36\":{\"h\":\"Concepts fondamentaux\"},\"37\":{\"h\":\"Les Modèles\",\"t\":[\"Les modèles sont des classes Python qui représentent vos tables de base de données. Chaque attribut de classe correspond à une colonne de la table.\",\"from sqlalchemy import Column, Integer, String, Boolean, ForeignKey from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.orm import relationship Base = declarative_base() class User(Base): __tablename__ = 'users' id = Column(Integer, primary_key=True) username = Column(String(50), unique=True, nullable=False) email = Column(String(100), nullable=False) # Relation vers les todos todos = relationship(\\\"TodoItem\\\", back_populates=\\\"user\\\") class TodoItem(Base): __tablename__ = 'todos' id = Column(Integer, primary_key=True) title = Column(String(200), nullable=False) done = Column(Boolean, default=False) user_id = Column(Integer, ForeignKey('users.id')) # Relation vers l'utilisateur user = relationship(\\\"User\\\", back_populates=\\\"todos\\\")\"]},\"38\":{\"h\":\"Les Sessions\",\"t\":[\"La session est votre interface principale pour interagir avec la base de données. Elle gère le cycle de vie de vos objets et les transactions.\",\"from sqlalchemy.orm import sessionmaker # Configuration de la session SessionLocal = sessionmaker(bind=engine) # Utilisation session = SessionLocal() try: # Vos opérations user = session.query(User).first() session.commit() finally: session.close()\"]},\"39\":{\"h\":\"Les Relations\",\"t\":[\"SQLAlchemy permet de définir facilement les relations entre vos modèles, automatisant ainsi les jointures SQL.\",\"# Récupérer un utilisateur avec tous ses todos user = session.query(User).options(joinedload(User.todos)).filter(User.id == 1).first() # Accéder aux todos de l'utilisateur (aucune requête supplémentaire grâce à joinedload) for todo in user.todos: print(f\\\"- {todo.title}: {'✓' if todo.done else '○'}\\\")\"]},\"40\":{\"h\":\"SQLAlchemy Asynchrone dans Hyperion\",\"t\":[\"Hyperion utilise la version asynchrone de SQLAlchemy pour améliorer les performances et la gestion de la concurrence. Voici les principales différences :\"]},\"41\":{\"h\":\"Session Asynchrone\",\"t\":[\"from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine from sqlalchemy import select # Au lieu de session.query(), on utilise session.execute() async def get_user_by_id(db: AsyncSession, user_id: int): result = await db.execute(select(User).where(User.id == user_id)) return result.scalars().first()\"]},\"42\":{\"h\":\"Opérations CRUD Asynchrones\",\"t\":[\"async def create_user(db: AsyncSession, username: str, email: str): user = User(username=username, email=email) db.add(user) await db.commit() return user async def update_user_email(db: AsyncSession, user_id: int, new_email: str): await db.execute( update(User).where(User.id == user_id).values(email=new_email) ) await db.commit()\",\"Points d'attention avec l'async\",\"N'oubliez jamais le mot-clé await devant les opérations de base de données\",\"Utilisez select() au lieu de session.query() avec la version async\",\"Assurez-vous que toutes vos fonctions qui interagissent avec la DB sont async\"]},\"43\":{\"h\":\"Avantages de SQLAlchemy\"},\"44\":{\"h\":\"Productivité\",\"t\":[\"Code plus lisible : Les requêtes complexes deviennent plus faciles à comprendre\",\"Autocomplétion : Votre IDE peut vous aider grâce au typage Python\",\"Migrations automatiques : Avec Alembic, la gestion du schéma devient simple\"]},\"45\":{\"h\":\"Robustesse\",\"t\":[\"Protection contre l'injection SQL : SQLAlchemy échappe automatiquement les données\",\"Gestion des transactions : Rollback automatique en cas d'erreur\",\"Validation des types : Détection précoce des erreurs de type\"]},\"46\":{\"h\":\"Portabilité\",\"t\":[\"Multi-base de données : Le même code fonctionne avec PostgreSQL, MySQL, SQLite...\",\"Abstraction : Vous n'avez pas besoin de connaître les spécificités de chaque SGBD\"]},\"47\":{\"h\":\"Exemple pratique pour Hyperion\",\"t\":[\"Voici un exemple typique d'utilisation dans Hyperion :\",\"from sqlalchemy.ext.asyncio import AsyncSession from sqlalchemy import select, update from sqlalchemy.orm import joinedload async def get_user_todos(db: AsyncSession, user_id: int): \\\"\\\"\\\"Récupère un utilisateur avec tous ses todos\\\"\\\"\\\" result = await db.execute( select(User) .options(joinedload(User.todos)) .where(User.id == user_id) ) return result.scalars().first() async def mark_todo_completed(db: AsyncSession, todo_id: int, user_id: int): \\\"\\\"\\\"Marque un todo comme terminé\\\"\\\"\\\" await db.execute( update(TodoItem) .where(TodoItem.id == todo_id, TodoItem.user_id == user_id) .values(done=True) ) await db.commit() async def create_todo(db: AsyncSession, user_id: int, title: str): \\\"\\\"\\\"Crée un nouveau todo pour un utilisateur\\\"\\\"\\\" todo = TodoItem(title=title, user_id=user_id, done=False) db.add(todo) await db.commit() return todo\"]},\"48\":{\"h\":\"Pour aller plus loin\",\"t\":[\"Maintenant que vous avez une vue d'ensemble de SQLAlchemy, vous pouvez approfondir avec :\",\"Comment utiliser SQLAlchemy - Guide pratique avec des exemples concrets\",\"Les migrations - Gestion de l'évolution du schéma de base de données\",\"SQLAlchemy peut sembler complexe au début, mais une fois que vous maîtrisez les concepts de base, il devient un outil très puissant pour développer des applications robustes et maintenables.\",\"page 2...\",\"Désormais nous allons voir comment utiliser SQLAlchemy dans un projet Python. Nous allons couvrir les bases de la configuration, de la définition des modèles, et de l'exécution des opérations CRUD (Create, Read, Update, Delete).\",\"Dans ce guide, nous utiliserons un exemple simple d'une application de gestion de tâches (To-Do List) pour illustrer les concepts. On peut imaginer que nous avons deux modèles principaux : User et TodosItem. Un utilisateur peut avoir plusieurs tâches (relation un-à-plusieurs). On peut créer, lire, mettre à jour et supprimer des tâches associées à un utilisateur.\"]},\"49\":{\"h\":\"Imports nécessaires\",\"t\":[\"Avant de commencer, voici les imports typiques dont vous aurez besoin pour travailler avec SQLAlchemy dans Hyperion :\",\"Conseil\",\"De manière plus générale, votre éditeur de code (comme VSCode ou PyCharm) peut vous aider à gérer les imports automatiquement.\",\"from typing import Sequence from sqlalchemy import select, update, delete from sqlalchemy.exc import IntegrityError from sqlalchemy.ext.asyncio import AsyncSession from app.models import models_todos # Remplacez par votre modèle\"]},\"50\":{\"h\":\"Opérations simples (CRUD)\"},\"51\":{\"h\":\"Lecture des données (Read)\",\"t\":[\"La lecture de données se fait principalement avec la fonction select(). Voici comment récupérer des enregistrements :\",\"async def get_items_by_user_id( db: AsyncSession, user_id: str, ) -> Sequence[models_todos.TodosItem]: \\\"\\\"\\\"Récupère tous les éléments TodosItem d'un utilisateur spécifique\\\"\\\"\\\" # On récupère tous les éléments TodosItem # dont le user_id correspond à celui que l'on recherche result = await db.execute( select(models_todos.TodosItem).where( models_todos.TodosItem.user_id == user_id, ) ) return result.scalars().all()\",\"Méthodes de récupération\",\"db.execute() : Exécute la requête SQL\",\".all() : Retourne tous les résultats sous forme de liste\",\".first() : Retourne le premier résultat ou None\",\".one() : Retourne exactement un résultat (lève une exception sinon)\",\".one_or_none() : Retourne un résultat ou None\",\".scalars() : Extrait les objets des résultats (utile pour éviter les tuples)\"]},\"52\":{\"h\":\"Création de données (Create)\",\"t\":[\"Pour créer de nouveaux enregistrements, utilisez db.add() :\",\"async def create_item( db: AsyncSession, item: models_todos.TodosItem, ) -> models_todos.TodosItem: \\\"\\\"\\\"Crée un nouvel élément TodosItem\\\"\\\"\\\" # Avec `db.add(item)` l'élément est placé tout seul dans la bonne table de la bdd. # item est en effet une instance du model : models_todos.TodosItem db.add(item) try: await db.commit() return item except IntegrityError as error: # En cas d'erreur d'ajout de l'objet, on revient en arrière (rollback de la db) # pour annuler les modifications de la db et on lève une erreur. await db.rollback() raise ValueError(error)\"]},\"53\":{\"h\":\"Mise à jour de données (Update)\",\"t\":[\"Pour mettre à jour des enregistrements existants, utilisez update() :\",\"async def edit_done_status( db: AsyncSession, id: str, done: bool, ) -> None: \\\"\\\"\\\"Met à jour le statut 'done' d'un élément TodosItem\\\"\\\"\\\" # On met à jour le champ `done` de l'élément TodosItem await db.execute( update(models_todos.TodosItem) .where(models_todos.TodosItem.id == id) .values(done=done) ) await db.commit()\"]},\"54\":{\"h\":\"Suppression de données (Delete)\",\"t\":[\"Pour supprimer des enregistrements :\",\"async def delete_item( db: AsyncSession, id: str, ) -> None: \\\"\\\"\\\"Supprime un élément TodosItem\\\"\\\"\\\" await db.execute( delete(models_todos.TodosItem) .where(models_todos.TodosItem.id == id) ) await db.commit()\"]},\"55\":{\"h\":\"Points de vigilance\"},\"56\":{\"h\":\"Gestion des transactions\",\"t\":[\"Gestion des erreurs\",\"Toujours encapsuler les opérations de modification dans des blocs try/catch pour gérer les erreurs d'intégrité et effectuer un rollback si nécessaire.\",\"async def safe_database_operation(db: AsyncSession, data): try: # Vos opérations de base de données db.add(data) await db.commit() except IntegrityError: await db.rollback() raise except Exception: await db.rollback() raise\"]},\"57\":{\"h\":\"Performance et mémoire\",\"t\":[\"Optimisation\",\"Utilisez .scalars() pour obtenir directement les objets plutôt que les tuples\",\"Préférez .first() à .all()[0] pour récupérer un seul élément\",\"Fermez toujours vos sessions avec un context manager ou explicitement\"]},\"58\":{\"h\":\"Validation des données\",\"t\":[\"async def create_validated_item( db: AsyncSession, item_data: dict, ) -> models_todos.TodosItem: \\\"\\\"\\\"Crée un élément avec validation\\\"\\\"\\\" # Validation des données avant création if not item_data.get('title'): raise ValueError(\\\"Le titre est requis\\\") item = models_todos.TodosItem(**item_data) db.add(item) try: await db.commit() return item except IntegrityError as error: await db.rollback() raise ValueError(f\\\"Erreur d'intégrité : {error}\\\")\"]},\"59\":{\"h\":\"Jointures et requêtes avancées\",\"t\":[\"Complexité avancée\",\"Les jointures peuvent rapidement devenir complexes et impacter les performances. Utilisez-les avec parcimonie et testez toujours les performances sur des données réelles.\"]},\"60\":{\"h\":\"Jointures simples\",\"t\":[\"from sqlalchemy.orm import joinedload async def get_items_with_user( db: AsyncSession, item_id: str, ) -> models_todos.TodosItem: \\\"\\\"\\\"Récupère un élément avec les informations de l'utilisateur\\\"\\\"\\\" result = await db.execute( select(models_todos.TodosItem) .options(joinedload(models_todos.TodosItem.user)) .where(models_todos.TodosItem.id == item_id) ) return result.scalars().first()\"]},\"61\":{\"h\":\"Comprendre - Le chargement eager\",\"t\":[\"Qu'est-ce que joinedload() ?\",\"joinedload() est une stratégie de chargement eager (avide) qui permet de récupérer les objets liés en une seule requête SQL au lieu de faire des requêtes séparées.\"]},\"62\":{\"h\":\"Problème du N+1\",\"t\":[\"Sans joinedload(), vous pourriez rencontrer le problème du N+1 :\",\"# ❌ PROBLEMATIQUE - Problème N+1 async def get_all_items_with_users_bad(db: AsyncSession): \\\"\\\"\\\"Version problématique qui génère plusieurs requêtes\\\"\\\"\\\" result = await db.execute(select(models_todos.TodosItem)) items = result.scalars().all() # Pour chaque item (N), une nouvelle requête sera faite pour récupérer l'utilisateur for item in items: print(f\\\"Tâche: {item.title}, Utilisateur: {item.user.username}\\\") # ↑ Chaque accès à item.user génère une nouvelle requête SQL !\"]},\"63\":{\"h\":\"Solution avec\",\"t\":[\"# ✅ SOLUTION - Une seule requête async def get_all_items_with_users_good(db: AsyncSession): \\\"\\\"\\\"Version optimisée avec joinedload\\\"\\\"\\\" result = await db.execute( select(models_todos.TodosItem) .options(joinedload(models_todos.TodosItem.user)) ) items = result.scalars().all() # Maintenant, toutes les données utilisateur sont déjà chargées for item in items: print(f\\\"Tâche: {item.title}, Utilisateur: {item.user.username}\\\") # ↑ Aucune requête supplémentaire !\"]},\"64\":{\"h\":\"Quand utiliser ?\",\"t\":[\"Cas d'usage recommandés\",\"Relations one-to-one : Toujours recommandé\",\"Relations many-to-one : Recommandé quand vous savez que vous accéderez aux données liées\",\"Petites collections : Acceptable pour de petites listes\",\"Cas à éviter\",\"Relations one-to-many volumineuses : Peut créer des résultats dupliqués énormes\",\"Relations many-to-many complexes : Préférez selectinload() ou des requêtes séparées\",\"Données rarement utilisées : N'utilisez que si vous êtes sûr d'accéder aux données\"]},\"65\":{\"h\":\"Alternatives à\",\"t\":[\"from sqlalchemy.orm import selectinload, subqueryload # selectinload() - Meilleur pour les collections async def get_users_with_many_tasks(db: AsyncSession): \\\"\\\"\\\"Utilise selectinload pour éviter la duplication de données\\\"\\\"\\\" result = await db.execute( select(models_todos.User) .options(selectinload(models_todos.User.todos_items)) ) return result.scalars().all() # subqueryload() - Alternative pour certains cas async def get_items_alternative(db: AsyncSession): \\\"\\\"\\\"Utilise subqueryload comme alternative\\\"\\\"\\\" result = await db.execute( select(models_todos.TodosItem) .options(subqueryload(models_todos.TodosItem.user)) ) return result.scalars().all()\"]},\"66\":{\"h\":\"Jointures imbriquées\",\"t\":[\"Vous pouvez chaîner joinedload() pour des relations imbriquées :\",\"async def get_items_with_user_and_profile(db: AsyncSession): \\\"\\\"\\\"Charge les items avec utilisateur et profil en une requête\\\"\\\"\\\" result = await db.execute( select(models_todos.TodosItem) .options( joinedload(models_todos.TodosItem.user) .joinedload(models_todos.User.profile) ) ) return result.scalars().all()\",\"Requête SQL générée\",\"Avec joinedload(), SQLAlchemy génère une requête avec LEFT OUTER JOIN :\",\"SELECT todos_item.id, todos_item.title, todos_item.done, todos_item.user_id, user_1.id AS id_1, user_1.username, user_1.email FROM todos_item LEFT OUTER JOIN user AS user_1 ON user_1.id = todos_item.user_id WHERE todos_item.id = ?\",\"Sans joinedload(), vous auriez :\",\"SELECT * FROM todos_item WHERE id = ?\",\"SELECT * FROM user WHERE id = ? (pour chaque item accédé)\"]},\"67\":{\"h\":\"Jointures avec filtres\",\"t\":[\"async def get_completed_items_by_username( db: AsyncSession, username: str, ) -> Sequence[models_todos.TodosItem]: \\\"\\\"\\\"Récupère les tâches terminées d'un utilisateur par nom d'utilisateur\\\"\\\"\\\" result = await db.execute( select(models_todos.TodosItem) .join(models_todos.User) .where( models_todos.User.username == username, models_todos.TodosItem.done == True ) ) return result.scalars().all()\"]},\"68\":{\"h\":\"Agrégations\",\"t\":[\"from sqlalchemy import func, desc async def get_user_task_count( db: AsyncSession, ) -> Sequence[tuple]: \\\"\\\"\\\"Compte le nombre de tâches par utilisateur\\\"\\\"\\\" result = await db.execute( select( models_todos.User.username, func.count(models_todos.TodosItem.id).label('task_count') ) .join(models_todos.TodosItem) .group_by(models_todos.User.id) .order_by(desc('task_count')) ) return result.all()\",\"Bonnes pratiques pour les jointures\",\"Utilisez joinedload() pour le chargement eager des relations\",\"Préférez les jointures explicites aux jointures implicites\",\"Testez les performances avec EXPLAIN sur vos requêtes complexes\",\"Considérez l'utilisation d'index sur les colonnes fréquemment jointes\"]},\"69\":{\"h\":\"Exemple complet d'un service\",\"t\":[\"Voici un exemple complet d'un service de CRUDS utilisant toutes ces fonctionnalités :\",\"from typing import Optional, Sequence from sqlalchemy import select, update, delete, func from sqlalchemy.exc import IntegrityError from sqlalchemy.ext.asyncio import AsyncSession from sqlalchemy.orm import joinedload from app.models import models_todos async def get_all_by_user( db: AsyncSession, user_id: str, include_completed: bool = True ) -> Sequence[models_todos.TodosItem]: \\\"\\\"\\\"Récupère toutes les tâches d'un utilisateur\\\"\\\"\\\" query = select(models_todos.TodosItem).where( models_todos.TodosItem.user_id == user_id ) if not include_completed: query = query.where(models_todos.TodosItem.done == False) result = await db.execute(query.order_by(models_todos.TodosItem.created_at)) return result.scalars().all() async def create( db: AsyncSession, user_id: str, title: str, description: Optional[str] = None ) -> models_todos.TodosItem: \\\"\\\"\\\"Crée une nouvelle tâche\\\"\\\"\\\" item = models_todos.TodosItem( user_id=user_id, title=title, description=description, done=False ) db.add(item) try: await db.commit() return item except IntegrityError as error: await db.rollback() raise ValueError(f\\\"Impossible de créer la tâche : {error}\\\") async def toggle_completion( db: AsyncSession, item_id: str, user_id: str ) -> bool: \\\"\\\"\\\"Bascule le statut d'une tâche et retourne le nouveau statut\\\"\\\"\\\" # Récupérer l'état actuel result = await db.execute( select(models_todos.TodosItem.done) .where( models_todos.TodosItem.id == item_id, models_todos.TodosItem.user_id == user_id ) ) current_status = result.scalar_one_or_none() if current_status is None: raise ValueError(\\\"Tâche non trouvée\\\") new_status = not current_status await db.execute( update(models_todos.TodosItem) .where( models_todos.TodosItem.id == item_id, models_todos.TodosItem.user_id == user_id ) .values(done=new_status) ) await db.commit() return new_status\",\"Cette approche modulaire et bien structurée vous permettra de maintenir un code propre et efficace lors de l'utilisation de SQLAlchemy dans Hyperion.\"]},\"70\":{\"c\":[\"Guide\"]},\"71\":{\"h\":\"Endpoints\",\"t\":[\"Mtn qu'on a les structures de données, on passe à tout ce qui est business logic donc endpoints et cruds. Honnêtement je sais pas ds quel ordre on les présente...\",\"Les endpoints c là où on utilise le router FastAPI, faut expliquer que le @ c un décorateur faut pas en avoir peur c de la composition de fonction, faut parler des codes d'erreurs (les classes 200 à 500, et certains spécifiques qu'on utilise souvent comme 403, 404, 422, etc), expliquer que c là que les données qui entrent et sortent d'Hyperion sont validées (d'où le 422 si on envoie de la merde).\",\"Peut-être le fait que le JSON correspond à une classe avec que des attributs c pas obvious.\",\"Faire un point sur les dependencies, c comme ça qu'on récupère l'user qui a émis la requête, et la (session à la) db.\",\"A propos de db, c là qu'on appelle les cruds (ça sera la page d'après) et qu'on utilise nos meilleurs db.flush().\",\"Ms faut appuyer sur le fait que les endpoints c là que se trouve quasiment toute la logique (la business logic, je crois que c \\\"logique métier\\\" en Fr ms ça sonne pas ouf), donc la plupart des lignes d'un endpoint c vérifier que telle et telle condition est bien remplie, que tel truc est ou n'est pas None, et pour gérer ces cas on sort nos meilleurs HTTPException : c des exceptions Python (donc qui font terminer la fonction) et ça renvoie à l'extérieur le code d'erreur qu'on a choisi.\"]},\"72\":{\"c\":[\"Guide\"]},\"73\":{\"h\":\"Models\",\"t\":[\"Contraster les models : c les mm \\\"types logiques\\\" que les schemas, mais avec une perspective différentes : le modèle c le schéma d'une table SQL, donc la perspective est un peu différente, avec la notion de ligne (enregistrement) qui fait qu'on ne peut pas stocker une liste telle quelle pour faire du one-to-many, mais le fait que c relationnel c comme ça qu'on fait du one-to-many.\",\"Expliquer donc des bases de SQLAlchemy, que le SQL c pas spécialement compliqué, parler du typage avec Mapped et des principales options de mapped_column (foreign key, index, unique, nullable, tout ce qui touche aux jointures, (relationship, lazy join, ...), ...).\",\"Ah aussi : se rappeler que BaseModel c la classe Pydantic de base pour les... schemas !\"]},\"74\":{\"c\":[\"Guide\"]},\"75\":{\"h\":\"Autres fichiers\",\"t\":[\"Ensuite ds un module y a parfois d'autres fichiers, souvent tout petits, comme les types, des utils, une factory, une dependency.\",\"Le type c juste déclarer des Enum, et je doute qu'y ait un meilleur endroit pr expliquer les Enum.\",\"Les utils c juste des fonctions utilitaires utilisées un peut partout (peut-être (ré)évoquer le grand principe de factorisation), la factory c quand ta db est vide si tu veux on te la remplit, et une dependency qu'on fait nous-mm c pr accéder rapidement à une info un peu globale.\"]},\"76\":{\"c\":[\"Guide\"]},\"77\":{\"h\":\"Schemas\",\"t\":[\"Comme l'a dit le grand Linus Torvalds[1] :\",\"Bad programmers worry about the code. Good programmers worry about data structures and their relationships.\",\"Donc faut traiter des schema, expliquer que c la lingua franca d'Hyperion (à partir de l'endpoint et dans toute la trace qui en découle (la vie de l'endpoint), toute la communication se fait avec des schemas (tu reçois un schema de FastAPI ds les endpoints, tu envoies un schema aux CRUDs, donc les CRUDs \\\"comprennent\\\" les schemas et ils gèrent intérieurement la conversion avec les modèles)).\",\"Expliquer des bases de Pydantic et de validation (c littéralement Zod en python hein).\",\"Et tjs donner des exemples c important. Et expliquer qu'il faut souvent un plusieurs modèles pour 1 \\\"type logique\\\", genre un TrucBase, un TrucEdit et un TrucComplete, et expliquer que l'héritage c important.\",\"Un petit point sur le principe de Liskov[2] peut éclaircir des doutes sur la validité d'un supertype.\",\"Expliquer pk le typage fort et statique c cool pour catch pleins d'erreurs, avoir de l'intellisense propre, et valider les données une seule fois à l'entrée[3].\",\"Mail original (sur LWN)↩︎\",\"Principe de substitution de Liskov↩︎\",\"Parse, don't validate, cité dans l'intro de Zod v3↩︎\"]},\"78\":{\"c\":[\"Guide\"]},\"79\":{\"h\":\"Premiers pas\"},\"80\":{\"c\":[\"Guide\"]},\"81\":{\"h\":\"Architecture\",\"t\":[\"A la fois\",\"l'archi à l'échelle du repo (des fichiers à la racine, des migrations, des tests, des assets, des modules, du core, des utils, etc)\",\"et un point spécifique sur l'archi d'un module\"]},\"82\":{\"h\":\"Architecture à l'échelle du\",\"t\":[\"...\"]},\"83\":{\"h\":\"Architecture d'un module\",\"t\":[\"cruds_nom.py\",\"endpoints_nom.py\",\"models_nom.py\",\"schemas_nom.py\"]},\"84\":{\"c\":[\"Guide\"]},\"85\":{\"h\":\"Installation et configuration initiale\",\"t\":[\"install et config : comment lancer Hyperion, et une fois Hyperion lancé, expliquer à quoi servent les principaux champs du config.yaml et du .env\",\"Bienvenue dans la documentation de Hyperion, le back-end de MyECL. Ce guide vous aidera à faire vos premiers pas avec Hyperion et à comprendre ses fonctionnalités de base.\"]},\"86\":{\"h\":\"Qu'est-ce qu'Hyperion ?\",\"t\":[\"Hyperion est une application back-end conçue pour gérer les contenus et les utilisateurs de MyECL ainsi que des services annexes comme la chaine de rentrée et le système d'authentification SSO[1]. Il offre une interface API RESTful pour interagir avec les données et les services.\"]},\"87\":{\"h\":\"Qu'est-ce qu'une API RESTful ?\",\"t\":[\"Une API RESTful (Representational State Transfer) est un style d'architecture pour les services web qui utilise les protocoles HTTP pour effectuer des opérations sur les ressources. Les principales caractéristiques d'une API RESTful incluent :\",\"Utilisation des verbes HTTP (GET, POST, PUT, DELETE) pour effectuer des opérations sur les ressources.\",\"Identification des ressources via des URI (Uniform Resource Identifier).\",\"Représentation des ressources au format JSON.\",\"Statelessness : chaque requête du client au serveur doit contenir toutes les informations nécessaires pour comprendre et traiter la requête.\"]},\"88\":{\"h\":\"Prérequis : Installation de Git\",\"t\":[\"Vérification\",\"Avant de commencer, assurez-vous que Git est installé sur votre système. Vous pouvez vérifier cela en exécutant la commande suivante dans votre terminal :\",\"git --version\",\"Si Git est installé, vous devriez voir quelque chose comme git version 2.x.x.\",\"Configuration initiale\",\"Après l'installation de Git, il est recommandé de configurer votre nom d'utilisateur et votre adresse e-mail :\",\"git config --global user.name \\\"Votre Nom\\\" git config --global user.email \\\"votre.email@example.com\\\"\"]},\"89\":{\"h\":\"Cloner le dépôt Hyperion\",\"t\":[\"Une fois Git installé et configuré, vous pouvez cloner le dépôt Hyperion en utilisant la commande suivante :\",\"git clone https://github.com/aeecleclair/hyperion.git\"]},\"90\":{\"h\":\"Suivre les instructions d'installation du README\",\"t\":[\"Après avoir cloné le dépôt, naviguez dans le répertoire du projet et suivez les instructions d'installation fournies dans le fichier README.md. Cela vous guidera à travers le processus de configuration et d'installation d'Hyperion.\",\"Pour plus d'informations sur l'authentification Single Sign-On (SSO), voir : /hyperion/authentification-sso/ ↩︎\"]},\"91\":{\"c\":[\"Guide\"]},\"92\":{\"h\":\"Introduction: pourquoi et quoi ? Concepts fondamentaux\",\"t\":[\"Une page qui explique pourquoi on a besoin d'Hyperion en premier lieu et ce que c'est. \",\"Expliquer la notion de front-end / back-end pour une application mobile\",\"Flux de données entre l'utilisateur final et la base de données\",\"Hyperion est le back-end de MyECL, l'application étudiante de l'École Centrale de Lyon. Si vous êtes nouveau dans le développement web, pensez au back-end comme au \\\"cerveau\\\" caché derrière une application : c'est lui qui gère les données, la logique métier, et fournit les informations au front-end (l'interface que voient les utilisateurs).\",\"Bordel de Skyrol là-dessous\"]},\"93\":{\"h\":\"Introduction\",\"t\":[\"Hyperion est le back-end de MyECL, l'application étudiante de l'École Centrale de Lyon. Si vous êtes nouveau dans le développement web, pensez au back-end comme au \\\"cerveau\\\" caché derrière une application : c'est lui qui gère les données, la logique métier, et fournit les informations au front-end (l'interface que voient les utilisateurs).\"]},\"94\":{\"h\":\"Pourquoi Hyperion existe-t-il ?\"},\"95\":{\"h\":\"Le problème à résoudre\",\"t\":[\"Avant Hyperion, les services numériques d'ECLAIR étaient éparpillés :\",\"Des sites web séparés pour différents services\",\"Des bases de données qui ne communiquaient pas entre elles\",\"Des systèmes d'authentification différents\",\"Une maintenance complexe\",\"Un MyECL d'aujourd'hui inexistant\"]},\"96\":{\"h\":\"La solution : un back-end unifié\",\"t\":[\"Hyperion centralise la plupart des services d'ECLAIR dès qu'il est question de gérer des les données d'étudiants :\"]},\"97\":{\"h\":\"Que fait concrètement Hyperion ?\"},\"98\":{\"h\":\"Gestion des utilisateurs et groupes\",\"t\":[\"Comptes étudiants : Compte utilisateur unique pour tous les services\",\"Groupes et associations : Gestion des BDE, clubs, associations\",\"Permissions : Qui peut faire quoi selon son statut\"]},\"99\":{\"h\":\"Services aux étudiants\",\"t\":[\"Actualités et événements : Diffusion d'informations\",\"Réservations : Salles, matériel, créneaux\",\"Paiements : Via MyECLPay pour les cotisations, événements\",\"Cinéma : Programmation et réservations\",\"Et beaucoup plus à venir grâce à vous !\"]},\"100\":{\"h\":\"Services administratifs\",\"t\":[\"Authentification unique (SSO) : Un seul login pour tous les services\",\"Gestion documentaire : Stockage et partage de fichiers\",\"Notifications : Push mobile, emails, Matrix\"]},\"101\":{\"h\":\"Architecture technique : pourquoi ces choix ?\"},\"102\":{\"h\":\"FastAPI comme framework web\",\"t\":[\"from fastapi import FastAPI app = FastAPI() @app.get(\\\"/users/me\\\") async def get_current_user(): return {\\\"username\\\": \\\"john_doe\\\", \\\"email\\\": \\\"john@ecl.ec-lyon.fr\\\"}\",\"Pourquoi FastAPI ?\",\"Performance : L'un des frameworks Python les plus rapides\",\"Type safety : Validation automatique des données\",\"Documentation auto : Génération de la doc API automatiquement\",\"Async natif : Gestion optimale de la concurrence\"]},\"103\":{\"h\":\"PostgreSQL comme base de données\",\"t\":[\"Pourquoi PostgreSQL ?\",\"Robustesse : Base de données enterprise-grade\",\"Relations complexes : Parfait pour modéliser les groupes, permissions, etc.\",\"Performance : Optimisé pour les applications web\",\"JSON natif : Flexibilité pour des données semi-structurées\"]},\"104\":{\"h\":\"SQLAlchemy comme ORM\",\"t\":[\"class User(Base): __tablename__ = \\\"users\\\" id = Column(Integer, primary_key=True) username = Column(String(50), unique=True) email = Column(String(100)) # Relations automatiques groups = relationship(\\\"Group\\\", back_populates=\\\"members\\\")\",\"Pourquoi SQLAlchemy ?\",\"Type safety : Les erreurs sont détectées avant la production\",\"Relations automatiques : Plus besoin d'écrire les jointures à la main\",\"Migrations : Évolution du schéma de base simplifiée\"]},\"105\":{\"h\":\"L'écosystème MyECL\",\"t\":[\"Hyperion ne vit pas seul, il fait partie d'un écosystème :\"]},\"106\":{\"h\":\"Applications clientes\",\"t\":[\"MyECL Mobile App - Titan (Flutter) : Application mobile et web officielle\",\"Applications tierces : Autres services qui utilisent l'API\"]},\"107\":{\"h\":\"Services externes intégrés\",\"t\":[\"HelloAsso : Billetterie pour les événements\",\"Matrix : Système de messagerie intégré\",\"Firebase : Notifications push mobile\",\"S3 : Stockage de fichiers (photos, documents)\"]},\"108\":{\"h\":\"Exemple concret : la vie d'une requête\",\"t\":[\"Imaginons qu'un étudiant veuille voir ses réservations de salle :\",\"Frontend : L'app mobile fait une requête GET /bookings/me\",\"Authentification : Hyperion vérifie que l'utilisateur est bien connecté\",\"Endpoint : La fonction Python correspondante à la requête de l'utilisateur est appelée\",\"CRUD : Requête SQL pour récupérer les réservations\",\"Validation : Les données sont formatées selon le schéma Pydantic\",\"Réponse : JSON envoyé au frontend\",\"@router.get(\\\"/bookings/me\\\", response_model=List[BookingSchema]) async def get_my_bookings( current_user: User = Depends(get_current_user), db: AsyncSession = Depends(get_db) ): # La logique métier ici bookings = await crud_booking.get_user_bookings(db, current_user.id) return bookings\",\"Exemple de réponse\",\"[ { \\\"id\\\": 1, \\\"room\\\": \\\"Salle A101\\\", \\\"date\\\": \\\"2024-09-10T14:00:00\\\", \\\"duration\\\": 2 }, { \\\"id\\\": 2, \\\"room\\\": \\\"Salle B202\\\", \\\"date\\\": \\\"2024-09-12T10:00:00\\\", \\\"duration\\\": 1 } ]\"]},\"109\":{\"h\":\"Concepts clés à retenir\"},\"110\":{\"h\":\"API REST\",\"t\":[\"Hyperion expose une API REST : un ensemble d'endpoints HTTP qui permettent aux applications clientes de :\",\"Créer des données (POST)\",\"Lire des données (GET)\",\"Modifier des données (PUT/PATCH)\",\"Supprimer des données (DELETE)\"]},\"111\":{\"h\":\"Authentification et autorisation\",\"t\":[\"Authentification : \\\"Qui êtes-vous ?\\\" (login/password, token)\",\"Autorisation : \\\"Qu'avez-vous le droit de faire ?\\\" (permissions, rôles)\"]},\"112\":{\"h\":\"Validation des données\",\"t\":[\"Toutes les données qui entrent et sortent d'Hyperion sont validées :\",\"Côté entrée : Vérification que les données reçues sont correctes\",\"Côté sortie : Garantie que les données envoyées respectent le format attendu\"]},\"113\":{\"h\":\"Le schéma à retenir\"},\"114\":{\"h\":\"Pourquoi apprendre Hyperion ?\"},\"115\":{\"h\":\"Pour votre formation\",\"t\":[\"Architecture moderne : Découverte des patterns actuels du web\",\"Technologies populaires : FastAPI, SQLAlchemy, PostgreSQL sont très demandés\",\"Bonnes pratiques : Code propre, tests, documentation\"]},\"116\":{\"h\":\"Pour l'école\",\"t\":[\"Impact réel : Votre code sera utilisé par tous les étudiants de Centrale\",\"Collaboration : Travail en équipe sur un vrai projet\",\"Responsabilité : Maintien d'un service critique pour l'école\"]},\"117\":{\"h\":\"Pour votre avenir professionnel\",\"t\":[\"Expérience concrète : Un vrai projet en production sur votre CV\",\"Stack moderne : Technologies utilisées dans l'industrie\",\"Architecture scalable : Patterns réutilisables dans d'autres projets\"]},\"118\":{\"h\":\"Prochaines étapes\",\"t\":[\"Maintenant que vous comprenez pourquoi Hyperion existe et ce qu'il fait, nous allons voircomment il fonctionne :\",\"Les 4 verbes fondamentaux - La base de toute API\",\"Configuration - Comment configurer Hyperion\",\"Premier lancement - Mise en route pratique\",\"Conseil\",\"N'hésitez pas à poser des questions ! Les anciens de l'association sont là pour vous accompagner dans votre apprentissage.\"]},\"119\":{\"h\":\"Une architecture en miroir\",\"t\":[\"L'une des beautés d'Hyperion, c'est que tout repose sur la même structure logique à trois niveaux. Ces 4 verbes se retrouvent partout et facilitent énormément la compréhension du système.\"]},\"120\":{\"h\":\"Les 4 verbes HTTP\"},\"121\":{\"h\":\"GET - Récupérer des données\",\"t\":[\"Le verbe le plus simple : on demande des informations au serveur.\",\"GET /users/123 GET /events GET /groups/bde/members\",\"Caractéristiques :\",\"Idempotent : Peut être appelé plusieurs fois sans effet de bord\",\"Sans corps : Pas de données dans la requête\",\"Cacheable : Le navigateur peut mettre en cache la réponse\"]},\"122\":{\"h\":\"POST - Créer des données\",\"t\":[\"Pour créer de nouvelles ressources.\",\"POST /users Content-Type: application/json { \\\"username\\\": \\\"nouveau_etudiant\\\", \\\"email\\\": \\\"nouveau@ecl.ec-lyon.fr\\\" }\",\"Caractéristiques :\",\"Non-idempotent : Chaque appel crée une nouvelle ressource\",\"Avec corps : Les données à créer sont dans le body\",\"Code 201 : \\\"Created\\\" en cas de succès\"]},\"123\":{\"h\":\"PATCH - Modifier des données\",\"t\":[\"Pour mettre à jour partiellement une ressource existante.\",\"PATCH /users/123 Content-Type: application/json { \\\"email\\\": \\\"nouvelle_adresse@ecl.ec-lyon.fr\\\" }\",\"Caractéristiques :\",\"Modification partielle : On envoie seulement les champs à modifier\",\"Idempotent : Même résultat si appelé plusieurs fois\",\"Code 200 : \\\"OK\\\" en cas de succès\"]},\"124\":{\"h\":\"DELETE - Supprimer des données\",\"t\":[\"Pour supprimer une ressource.\",\"DELETE /users/123\",\"Caractéristiques :\",\"Destructif : La ressource n'existe plus après\",\"Idempotent : Supprimer une ressource déjà supprimée ne change rien\",\"Code 204 : \\\"No Content\\\" en cas de succès\"]},\"125\":{\"h\":\"Les 4 opérations CRUD\",\"t\":[\"CRUD signifie Create, Read, Update, Delete. C'est la même logique que HTTP, mais du point de vue applicatif.\"]},\"126\":{\"h\":\"Create - Créer\",\"t\":[\"# Dans un endpoint Hyperion @router.post(\\\"/users\\\", response_model=UserSchema) async def create_user( user_data: UserCreateSchema, db: AsyncSession = Depends(get_db) ): # Appel du CRUD new_user = await crud_user.create(db, user_data) return new_user\"]},\"127\":{\"h\":\"Read - Lire\",\"t\":[\"@router.get(\\\"/users/{user_id}\\\", response_model=UserSchema) async def get_user( user_id: int, db: AsyncSession = Depends(get_db) ): user = await crud_user.get(db, user_id) if not user: raise HTTPException(status_code=404, detail=\\\"User not found\\\") return user\"]},\"128\":{\"h\":\"Update - Mettre à jour\",\"t\":[\"@router.patch(\\\"/users/{user_id}\\\", response_model=UserSchema) async def update_user( user_id: int, user_updates: UserUpdateSchema, db: AsyncSession = Depends(get_db) ): updated_user = await crud_user.update(db, user_id, user_updates) return updated_user\"]},\"129\":{\"h\":\"Delete - Supprimer\",\"t\":[\"@router.delete(\\\"/users/{user_id}\\\") async def delete_user( user_id: int, db: AsyncSession = Depends(get_db) ): await crud_user.delete(db, user_id) return {\\\"message\\\": \\\"User deleted successfully\\\"}\"]},\"130\":{\"h\":\"Les 4 verbes SQL\",\"t\":[\"Au final, toutes ces opérations se traduisent en requêtes SQL dans la base de données.\"]},\"131\":{\"h\":\"INSERT - Créer\",\"t\":[\"INSERT INTO users (username, email, created_at) VALUES ('nouveau_etudiant', 'nouveau@ecl.ec-lyon.fr', NOW());\",\"# Équivalent SQLAlchemy new_user = User( username=\\\"nouveau_etudiant\\\", email=\\\"nouveau@ecl.ec-lyon.fr\\\" ) db.add(new_user) await db.commit()\"]},\"132\":{\"h\":\"SELECT - Lire\",\"t\":[\"SELECT id, username, email FROM users WHERE id = 123; SELECT * FROM events WHERE date >= '2024-01-01';\",\"# Équivalent SQLAlchemy user = await db.execute(select(User).where(User.id == 123)) user = user.scalars().first() events = await db.execute(select(Event).where(Event.date >= date(2024, 1, 1))) events = events.scalars().all()\"]},\"133\":{\"h\":\"UPDATE - Modifier\",\"t\":[\"UPDATE users SET email = 'nouvelle_adresse@ecl.ec-lyon.fr' WHERE id = 123;\",\"# Équivalent SQLAlchemy await db.execute( update(User) .where(User.id == 123) .values(email=\\\"nouvelle_adresse@ecl.ec-lyon.fr\\\") ) await db.commit()\"]},\"134\":{\"h\":\"DELETE - Supprimer\",\"t\":[\"DELETE FROM users WHERE id = 123;\",\"# Équivalent SQLAlchemy await db.execute(delete(User).where(User.id == 123)) await db.commit()\"]},\"135\":{\"h\":\"La correspondance parfaite\",\"t\":[\"Voici comment ces trois niveaux se correspondent dans Hyperion :\",\"HTTP\",\"CRUD\",\"SQL\",\"Objectif\",\"POST\",\"Create\",\"INSERT\",\"Créer une nouvelle ressource\",\"GET\",\"Read\",\"SELECT\",\"Récupérer des données\",\"PATCH\",\"Update\",\"UPDATE\",\"Modifier une ressource existante\",\"DELETE\",\"Delete\",\"DELETE\",\"Supprimer une ressource\"]},\"136\":{\"h\":\"Exemple complet : gestion d'un événement\",\"t\":[\"Suivons la création d'un événement à travers les trois couches :\"]},\"137\":{\"h\":\"1. Requête HTTP du client\",\"t\":[\"POST /events Authorization: Bearer jwt_token_here Content-Type: application/json { \\\"title\\\": \\\"Soirée BDE\\\", \\\"description\\\": \\\"Grande soirée de rentrée\\\", \\\"date\\\": \\\"2024-09-15T20:00:00\\\", \\\"location\\\": \\\"Foyer\\\" }\"]},\"138\":{\"h\":\"2. Endpoint FastAPI (niveau CRUD)\",\"t\":[\"@router.post(\\\"/events\\\", response_model=EventSchema) async def create_event( event_data: EventCreateSchema, current_user: User = Depends(get_current_user), db: AsyncSession = Depends(get_db) ): # Vérifications métier if not current_user.can_create_events(): raise HTTPException(status_code=403, detail=\\\"Insufficient permissions\\\") # CRUD Create new_event = await crud_event.create(db, event_data) return new_event\"]},\"139\":{\"h\":\"3. CRUD vers SQL\",\"t\":[\"async def create(db: AsyncSession, event_data: EventCreateSchema) -> Event: # Conversion schema → model event = Event( title=event_data.title, description=event_data.description, date=event_data.date, location=event_data.location ) # SQL INSERT via SQLAlchemy db.add(event) await db.commit() await db.refresh(event) # Pour récupérer l'ID généré return event\"]},\"140\":{\"h\":\"Codes de statut HTTP essentiels\"},\"141\":{\"h\":\"2xx - Succès\",\"t\":[\"200 OK : Requête réussie (GET, PATCH)\",\"201 Created : Ressource créée avec succès (POST)\",\"204 No Content : Requête réussie sans contenu (DELETE)\"]},\"142\":{\"h\":\"4xx - Erreurs client\",\"t\":[\"400 Bad Request : Données malformées\",\"401 Unauthorized : Authentification requise\",\"403 Forbidden : Permissions insuffisantes\",\"404 Not Found : Ressource introuvable\",\"422 Unprocessable Entity : Validation échouée\"]},\"143\":{\"h\":\"5xx - Erreurs serveur\",\"t\":[\"500 Internal Server Error : Erreur interne du serveur\",\"# Dans Hyperion, on utilise HTTPException from fastapi import HTTPException # Ressource non trouvée if not user: raise HTTPException(status_code=404, detail=\\\"User not found\\\") # Permissions insuffisantes if not user.is_admin: raise HTTPException(status_code=403, detail=\\\"Admin access required\\\") # Données invalides (géré automatiquement par Pydantic) # → Code 422 automatique si le schema n'est pas respecté\"]},\"144\":{\"h\":\"Pourquoi cette cohérence est importante\"},\"145\":{\"h\":\"1. Facilité d'apprentissage\",\"t\":[\"Une fois que vous maîtrisez la logique des 4 verbes, vous pouvez :\",\"Comprendre n'importe quel endpoint d'Hyperion\",\"Créer de nouveaux endpoints facilement\",\"Déboguer plus efficacement\"]},\"146\":{\"h\":\"2. Maintenabilité\",\"t\":[\"Structure prévisible : Chaque développeur sait où chercher\",\"Patterns réutilisables : Moins de code à écrire\",\"Tests simplifiés : Même structure de test pour tous les endpoints\"]},\"147\":{\"h\":\"3. Performance\",\"t\":[\"Correspondance directe : Moins de transformations entre les couches\",\"Optimisations SQL : SQLAlchemy peut optimiser les requêtes\",\"Cache efficace : Les opérations GET peuvent être mises en cache\"]},\"148\":{\"h\":\"Prochaines étapes\",\"t\":[\"Maintenant que vous comprenez cette logique fondamentale, nous pouvons passer à :\",\"Configuration - Comment configurer Hyperion\",\"Premier lancement - Mise en pratique\",\"Astuce de développeur\",\"Quand vous travaillez sur Hyperion, pensez toujours en termes de ces 4 verbes. Ça vous aidera à structurer votre code et à comprendre celui des autres !\",\"Pour aller plus loin\",\"Cette logique REST est un standard de l'industrie. Les compétences que vous développez avec Hyperion sont directement transférables à d'autres projets et frameworks.\"]},\"149\":{\"c\":[\"Guide\"]},\"150\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"5xx\",{\"0\":{\"143\":1}}],[\"500\",{\"1\":{\"71\":1,\"143\":1}}],[\"50\",{\"1\":{\"37\":1,\"104\":1}}],[\"→\",{\"1\":{\"139\":1,\"143\":1}}],[\"3\",{\"0\":{\"139\":1,\"147\":1},\"1\":{\"77\":1}}],[\"zod\",{\"1\":{\"77\":2}}],[\"key\",{\"1\":{\"73\":1}}],[\"key=true\",{\"1\":{\"37\":2,\"104\":1}}],[\"êtes\",{\"1\":{\"64\":1,\"92\":1,\"93\":1,\"111\":1}}],[\"être\",{\"1\":{\"31\":2,\"71\":1,\"75\":1,\"121\":1,\"147\":1}}],[\"✅\",{\"1\":{\"63\":1}}],[\"↑\",{\"1\":{\"62\":1,\"63\":1}}],[\"❌\",{\"1\":{\"62\":1}}],[\"01\",{\"1\":{\"132\":2}}],[\"00\",{\"1\":{\"108\":4,\"137\":2}}],[\"09\",{\"1\":{\"108\":2,\"137\":1}}],[\"0\",{\"1\":{\"57\":1}}],[\"`done`\",{\"1\":{\"53\":1}}],[\"`db\",{\"1\":{\"52\":1}}],[\"`\",{\"1\":{\"52\":1}}],[\">=\",{\"1\":{\"132\":2}}],[\">\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"58\":1,\"60\":1,\"67\":1,\"68\":1,\"69\":3,\"139\":1}}],[\"○\",{\"1\":{\"39\":1}}],[\"✓\",{\"1\":{\"39\":1}}],[\"==\",{\"1\":{\"32\":1,\"34\":1,\"35\":1,\"39\":1,\"41\":1,\"42\":1,\"47\":3,\"51\":1,\"53\":1,\"54\":1,\"60\":1,\"67\":2,\"69\":6,\"132\":1,\"133\":1,\"134\":1}}],[\"=\",{\"1\":{\"32\":3,\"34\":1,\"35\":1,\"37\":12,\"38\":3,\"39\":1,\"41\":1,\"42\":1,\"47\":2,\"51\":1,\"58\":1,\"60\":1,\"62\":2,\"63\":2,\"65\":2,\"66\":5,\"67\":1,\"68\":1,\"69\":9,\"102\":1,\"104\":5,\"108\":3,\"126\":2,\"127\":2,\"128\":2,\"129\":1,\"131\":1,\"132\":5,\"133\":2,\"134\":1,\"138\":3,\"139\":1}}],[\"équivalent\",{\"1\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1}}],[\"équipe\",{\"1\":{\"35\":1,\"116\":1}}],[\"énormément\",{\"1\":{\"119\":1}}],[\"énormes\",{\"1\":{\"64\":1}}],[\"éparpillés\",{\"1\":{\"95\":1}}],[\"étudiant\",{\"1\":{\"108\":1}}],[\"étudiants\",{\"0\":{\"99\":1},\"1\":{\"96\":1,\"98\":1,\"116\":1}}],[\"étudiante\",{\"1\":{\"92\":1,\"93\":1}}],[\"étapes\",{\"0\":{\"118\":1,\"148\":1}}],[\"étaient\",{\"1\":{\"95\":1}}],[\"état\",{\"1\":{\"69\":1}}],[\"émis\",{\"1\":{\"71\":1}}],[\"éditeur\",{\"1\":{\"49\":1}}],[\"événement\",{\"0\":{\"136\":1},\"1\":{\"136\":1}}],[\"événements\",{\"1\":{\"99\":2,\"107\":1}}],[\"évoquer\",{\"1\":{\"75\":1}}],[\"évolution\",{\"1\":{\"48\":1,\"104\":1}}],[\"éviter\",{\"1\":{\"31\":1,\"51\":1,\"64\":1,\"65\":1}}],[\"également\",{\"1\":{\"35\":1}}],[\"école\",{\"0\":{\"116\":1},\"1\":{\"92\":1,\"93\":1,\"116\":1}}],[\"écosystème\",{\"0\":{\"105\":1},\"1\":{\"32\":1,\"105\":1}}],[\"échouée\",{\"1\":{\"142\":1}}],[\"échelle\",{\"0\":{\"82\":1},\"1\":{\"81\":1}}],[\"échappe\",{\"1\":{\"45\":1}}],[\"éclaircir\",{\"1\":{\"77\":1}}],[\"écrire\",{\"1\":{\"32\":3,\"104\":1,\"146\":1}}],[\"écrit\",{\"1\":{\"32\":1}}],[\"éléments\",{\"1\":{\"51\":2}}],[\"élément\",{\"1\":{\"31\":1,\"52\":2,\"53\":2,\"54\":1,\"57\":1,\"58\":1,\"60\":1}}],[\"+\",{\"1\":{\"31\":1}}],[\"worry\",{\"1\":{\"77\":2}}],[\"with\",{\"1\":{\"32\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":1,\"66\":1}}],[\"where\",{\"1\":{\"31\":1,\"32\":1,\"34\":1,\"41\":1,\"42\":1,\"47\":2,\"51\":1,\"53\":1,\"54\":1,\"60\":1,\"66\":3,\"67\":1,\"69\":4,\"132\":4,\"133\":2,\"134\":2}}],[\"websockets\",{\"1\":{\"23\":1}}],[\"web\",{\"0\":{\"102\":1},\"1\":{\"9\":1,\"87\":1,\"92\":1,\"93\":1,\"95\":1,\"103\":1,\"106\":1,\"115\":1}}],[\"4xx\",{\"0\":{\"142\":1}}],[\"401\",{\"1\":{\"142\":1}}],[\"400\",{\"1\":{\"142\":1}}],[\"404\",{\"1\":{\"71\":1,\"142\":1,\"150\":1}}],[\"403\",{\"1\":{\"71\":1,\"142\":1}}],[\"422\",{\"1\":{\"71\":2,\"142\":1,\"143\":1}}],[\"42\",{\"1\":{\"34\":1,\"35\":1}}],[\"4\",{\"0\":{\"120\":1,\"125\":1,\"130\":1},\"1\":{\"31\":3,\"118\":1,\"119\":1,\"145\":1,\"148\":1}}],[\"4e\",{\"1\":{\"31\":1}}],[\"ça\",{\"1\":{\"31\":6,\"71\":4,\"73\":1,\"148\":1}}],[\"qd\",{\"1\":{\"23\":1,\"31\":1}}],[\"quasiment\",{\"1\":{\"71\":1}}],[\"quand\",{\"0\":{\"64\":1},\"1\":{\"64\":1,\"75\":1,\"148\":1}}],[\"quality\",{\"0\":{\"22\":1}}],[\"quoi\",{\"0\":{\"92\":1},\"1\":{\"31\":1,\"85\":1,\"98\":1}}],[\"qui\",{\"1\":{\"9\":1,\"25\":1,\"31\":4,\"34\":1,\"37\":1,\"42\":1,\"61\":1,\"62\":1,\"71\":4,\"73\":2,\"77\":1,\"87\":1,\"92\":2,\"93\":1,\"95\":1,\"98\":1,\"106\":1,\"110\":1,\"111\":1,\"112\":1}}],[\"quelle\",{\"1\":{\"73\":1}}],[\"quel\",{\"1\":{\"71\":1,\"145\":1}}],[\"quelque\",{\"1\":{\"10\":1,\"88\":1}}],[\"query\",{\"1\":{\"32\":1,\"35\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"69\":4}}],[\"questions\",{\"1\":{\"118\":1}}],[\"question\",{\"1\":{\"31\":1,\"96\":1}}],[\"que\",{\"0\":{\"97\":1},\"1\":{\"8\":1,\"10\":1,\"23\":2,\"31\":5,\"35\":1,\"42\":1,\"48\":3,\"51\":1,\"57\":1,\"61\":1,\"64\":2,\"71\":10,\"73\":4,\"77\":2,\"86\":1,\"88\":1,\"92\":2,\"93\":1,\"108\":1,\"112\":2,\"118\":1,\"119\":1,\"125\":1,\"145\":1,\"148\":2}}],[\"qu\",{\"0\":{\"8\":2,\"9\":2,\"86\":2,\"87\":2},\"1\":{\"31\":1,\"61\":1,\"71\":6,\"73\":2,\"75\":2,\"77\":1,\"96\":1,\"108\":1,\"111\":1,\"118\":1}}],[\"y\",{\"1\":{\"25\":1,\"31\":1,\"75\":2}}],[\"yaml\",{\"1\":{\"23\":1,\"85\":1}}],[\"your\",{\"1\":{\"0\":1}}],[\"you\",{\"1\":{\"0\":2}}],[\"jwt\",{\"1\":{\"137\":1}}],[\"jamais\",{\"1\":{\"42\":1}}],[\"jour\",{\"0\":{\"53\":1,\"128\":1},\"1\":{\"48\":1,\"53\":3,\"123\":1}}],[\"john\",{\"1\":{\"32\":2,\"102\":2}}],[\"jointes\",{\"1\":{\"68\":1}}],[\"jointures\",{\"0\":{\"59\":1,\"60\":1,\"66\":1,\"67\":1},\"1\":{\"31\":1,\"39\":1,\"59\":1,\"68\":3,\"73\":1,\"104\":1}}],[\"joinedload\",{\"1\":{\"32\":1,\"39\":2,\"47\":2,\"60\":2,\"61\":2,\"62\":1,\"63\":2,\"66\":5,\"68\":1,\"69\":1}}],[\"join\",{\"1\":{\"32\":1,\"66\":2,\"67\":1,\"68\":1,\"73\":1}}],[\"je\",{\"1\":{\"31\":1,\"71\":2,\"75\":1}}],[\"juste\",{\"1\":{\"23\":1,\"75\":2}}],[\"j\",{\"1\":{\"23\":1}}],[\"json\",{\"1\":{\"9\":1,\"71\":1,\"87\":1,\"103\":1,\"108\":1,\"122\":1,\"123\":1,\"137\":1}}],[\"rôles\",{\"1\":{\"111\":1}}],[\"route\",{\"1\":{\"118\":1}}],[\"router\",{\"1\":{\"71\":1,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":1}}],[\"room\",{\"1\":{\"108\":2}}],[\"robustes\",{\"1\":{\"48\":1}}],[\"robustesse\",{\"0\":{\"45\":1},\"1\":{\"103\":1}}],[\"rollback\",{\"1\":{\"45\":1,\"52\":2,\"56\":3,\"58\":1,\"69\":1}}],[\"racine\",{\"1\":{\"81\":1}}],[\"rarement\",{\"1\":{\"64\":1}}],[\"raise\",{\"1\":{\"31\":1,\"52\":1,\"56\":2,\"58\":2,\"69\":2,\"127\":1,\"138\":1,\"143\":2}}],[\"raid\",{\"1\":{\"21\":1}}],[\"rappeler\",{\"1\":{\"31\":1,\"73\":1}}],[\"rapides\",{\"1\":{\"102\":1}}],[\"rapidement\",{\"1\":{\"32\":1,\"59\":1,\"75\":1}}],[\"rapide\",{\"1\":{\"31\":1}}],[\"réussie\",{\"1\":{\"141\":2}}],[\"réutilisables\",{\"1\":{\"117\":1,\"146\":1}}],[\"réel\",{\"1\":{\"116\":1}}],[\"réelles\",{\"1\":{\"59\":1}}],[\"réponse\",{\"1\":{\"108\":2,\"121\":1}}],[\"répertoire\",{\"1\":{\"90\":1}}],[\"réservations\",{\"1\":{\"99\":2,\"108\":2}}],[\"résoudre\",{\"0\":{\"95\":1}}],[\"résultats\",{\"1\":{\"51\":2,\"64\":1}}],[\"résultat\",{\"1\":{\"31\":1,\"51\":3,\"123\":1}}],[\"ré\",{\"1\":{\"75\":1}}],[\"récupération\",{\"1\":{\"51\":1}}],[\"récupérer\",{\"0\":{\"121\":1},\"1\":{\"39\":1,\"51\":1,\"57\":1,\"61\":1,\"62\":1,\"69\":1,\"108\":1,\"135\":1,\"139\":1}}],[\"récupère\",{\"1\":{\"47\":1,\"51\":2,\"60\":1,\"67\":1,\"69\":1,\"71\":1}}],[\"récup\",{\"1\":{\"21\":1}}],[\"rien\",{\"1\":{\"25\":1,\"31\":1,\"124\":1}}],[\"ruff\",{\"1\":{\"22\":1}}],[\"refresh\",{\"1\":{\"139\":1}}],[\"reçues\",{\"1\":{\"112\":1}}],[\"reçois\",{\"1\":{\"77\":1}}],[\"repose\",{\"1\":{\"119\":1}}],[\"repo\",{\"1\":{\"81\":1}}],[\"représentent\",{\"1\":{\"37\":1}}],[\"représentation\",{\"1\":{\"9\":1,\"87\":1}}],[\"representational\",{\"1\":{\"9\":1,\"87\":1}}],[\"remplit\",{\"1\":{\"75\":1}}],[\"remplie\",{\"1\":{\"71\":1}}],[\"remplacez\",{\"1\":{\"49\":1}}],[\"required\",{\"1\":{\"143\":1}}],[\"requise\",{\"1\":{\"142\":1}}],[\"requis\",{\"1\":{\"58\":1}}],[\"request\",{\"1\":{\"142\":1}}],[\"requêtes\",{\"0\":{\"59\":1},\"1\":{\"31\":1,\"32\":1,\"34\":1,\"44\":1,\"61\":1,\"62\":1,\"64\":1,\"68\":1,\"130\":1,\"147\":1}}],[\"requête\",{\"0\":{\"108\":1,\"137\":1},\"1\":{\"9\":2,\"31\":2,\"39\":1,\"51\":1,\"61\":1,\"62\":2,\"63\":2,\"66\":3,\"71\":1,\"87\":2,\"108\":3,\"121\":1,\"141\":2}}],[\"revient\",{\"1\":{\"52\":1}}],[\"recherche\",{\"1\":{\"51\":1}}],[\"recommandés\",{\"1\":{\"64\":1}}],[\"recommandé\",{\"1\":{\"10\":1,\"64\":2,\"88\":1}}],[\"retrouvent\",{\"1\":{\"119\":1}}],[\"retenir\",{\"0\":{\"109\":1,\"113\":1}}],[\"retourne\",{\"1\":{\"51\":4,\"69\":1}}],[\"return\",{\"1\":{\"41\":1,\"42\":1,\"47\":2,\"51\":1,\"52\":1,\"58\":1,\"60\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":3,\"102\":1,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":1,\"139\":1}}],[\"retardant\",{\"1\":{\"23\":1}}],[\"relationnel\",{\"1\":{\"73\":1}}],[\"relationnelles\",{\"1\":{\"31\":1}}],[\"relation\",{\"1\":{\"37\":2,\"48\":1}}],[\"relational\",{\"1\":{\"35\":1}}],[\"relationships\",{\"1\":{\"77\":1}}],[\"relationship\",{\"1\":{\"37\":3,\"73\":1,\"104\":1}}],[\"relations\",{\"0\":{\"39\":1},\"1\":{\"31\":1,\"39\":1,\"64\":4,\"66\":1,\"68\":1,\"103\":1,\"104\":2}}],[\"related\",{\"1\":{\"0\":1}}],[\"rencontrer\",{\"1\":{\"62\":1}}],[\"renvoie\",{\"1\":{\"31\":1,\"71\":1}}],[\"rentrée\",{\"1\":{\"8\":1,\"86\":1,\"137\":1}}],[\"readme\",{\"0\":{\"90\":1},\"1\":{\"90\":1}}],[\"read\",{\"0\":{\"51\":1,\"127\":1},\"1\":{\"31\":2,\"48\":1,\"125\":1,\"135\":1}}],[\"redis\",{\"1\":{\"20\":1}}],[\"ressource\",{\"1\":{\"122\":1,\"123\":1,\"124\":3,\"135\":3,\"141\":1,\"142\":1,\"143\":1}}],[\"ressources\",{\"1\":{\"9\":4,\"87\":4,\"122\":1}}],[\"respecté\",{\"1\":{\"143\":1}}],[\"respectent\",{\"1\":{\"112\":1}}],[\"responsabilité\",{\"1\":{\"116\":1}}],[\"response\",{\"1\":{\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"138\":1}}],[\"result\",{\"1\":{\"34\":1,\"41\":2,\"47\":2,\"51\":2,\"60\":2,\"62\":2,\"63\":2,\"65\":4,\"66\":2,\"67\":2,\"68\":2,\"69\":4}}],[\"rest\",{\"0\":{\"110\":1},\"1\":{\"110\":1,\"148\":1}}],[\"reste\",{\"1\":{\"34\":1}}],[\"restful\",{\"0\":{\"9\":1,\"87\":1},\"1\":{\"8\":1,\"9\":2,\"86\":1,\"87\":2}}],[\"resource\",{\"1\":{\"9\":1,\"87\":1}}],[\"↩︎\",{\"1\":{\"11\":1,\"77\":1,\"90\":1}}],[\"x\",{\"1\":{\"10\":2,\"88\":2}}],[\"2xx\",{\"0\":{\"141\":1}}],[\"204\",{\"1\":{\"124\":1,\"141\":1}}],[\"201\",{\"1\":{\"122\":1,\"141\":1}}],[\"2024\",{\"1\":{\"108\":2,\"132\":2,\"137\":1}}],[\"200\",{\"1\":{\"37\":1,\"71\":1,\"123\":1,\"141\":1}}],[\"2\",{\"0\":{\"138\":1,\"146\":1},\"1\":{\"10\":1,\"23\":1,\"48\":1,\"77\":1,\"88\":1,\"108\":2}}],[\"numériques\",{\"1\":{\"95\":1}}],[\"nullable\",{\"1\":{\"73\":1}}],[\"nullable=false\",{\"1\":{\"37\":3}}],[\"navigateur\",{\"1\":{\"121\":1}}],[\"naviguez\",{\"1\":{\"90\":1}}],[\"natif\",{\"1\":{\"102\":1,\"103\":1}}],[\"name\",{\"1\":{\"10\":1,\"88\":1}}],[\"n+1\",{\"0\":{\"62\":1},\"1\":{\"62\":2}}],[\"nécessaire\",{\"1\":{\"56\":1}}],[\"nécessaires\",{\"0\":{\"49\":1},\"1\":{\"9\":1,\"87\":1}}],[\"niveaux\",{\"1\":{\"119\":1,\"135\":1}}],[\"niveau\",{\"0\":{\"138\":1},\"1\":{\"31\":1}}],[\"new\",{\"1\":{\"42\":1,\"69\":2,\"126\":2,\"131\":2,\"138\":2}}],[\"ne\",{\"1\":{\"31\":1,\"73\":1,\"95\":1,\"105\":1,\"124\":1}}],[\"need\",{\"1\":{\"0\":1}}],[\"n\",{\"1\":{\"31\":1,\"42\":1,\"46\":1,\"62\":1,\"64\":1,\"71\":1,\"118\":1,\"124\":1,\"143\":1,\"145\":1}}],[\"now\",{\"1\":{\"131\":1}}],[\"no\",{\"1\":{\"124\":1,\"141\":1}}],[\"non\",{\"1\":{\"69\":1,\"122\":1,\"143\":1}}],[\"none\",{\"1\":{\"31\":1,\"51\":3,\"53\":1,\"54\":1,\"69\":3,\"71\":1}}],[\"nouvelles\",{\"1\":{\"122\":1}}],[\"nouvelle\",{\"1\":{\"62\":2,\"69\":1,\"122\":1,\"123\":1,\"133\":2,\"135\":1}}],[\"nouvel\",{\"1\":{\"52\":1}}],[\"nouveaux\",{\"1\":{\"52\":1,\"145\":1}}],[\"nouveau\",{\"1\":{\"31\":1,\"47\":1,\"69\":1,\"92\":1,\"93\":1,\"122\":2,\"131\":4}}],[\"nous\",{\"1\":{\"35\":2,\"48\":4,\"75\":1,\"118\":1,\"148\":1}}],[\"not\",{\"1\":{\"58\":1,\"69\":2,\"127\":2,\"138\":1,\"142\":1,\"143\":3,\"150\":1}}],[\"notifications\",{\"1\":{\"100\":1,\"107\":1}}],[\"notifs\",{\"1\":{\"23\":1}}],[\"notion\",{\"1\":{\"73\":1,\"92\":1}}],[\"notions\",{\"1\":{\"25\":1}}],[\"notre\",{\"1\":{\"23\":1}}],[\"nos\",{\"1\":{\"18\":1,\"71\":2}}],[\"nombre\",{\"1\":{\"68\":1}}],[\"nom\",{\"1\":{\"10\":2,\"67\":1,\"83\":4,\"88\":2}}],[\"v3↩︎\",{\"1\":{\"77\":1}}],[\"veuille\",{\"1\":{\"108\":1}}],[\"veux\",{\"1\":{\"75\":1}}],[\"venir\",{\"1\":{\"99\":1}}],[\"vers\",{\"0\":{\"139\":1},\"1\":{\"37\":2}}],[\"version\",{\"1\":{\"10\":2,\"40\":1,\"42\":1,\"62\":1,\"63\":1,\"88\":2}}],[\"verbe\",{\"1\":{\"31\":1,\"121\":1}}],[\"verbes\",{\"0\":{\"120\":1,\"130\":1},\"1\":{\"9\":1,\"31\":3,\"87\":1,\"118\":1,\"119\":1,\"145\":1,\"148\":1}}],[\"vscode\",{\"1\":{\"49\":1}}],[\"vue\",{\"1\":{\"48\":1,\"125\":1}}],[\"valider\",{\"1\":{\"77\":1}}],[\"validité\",{\"1\":{\"77\":1}}],[\"validées\",{\"1\":{\"71\":1,\"112\":1}}],[\"validate\",{\"1\":{\"77\":1}}],[\"validated\",{\"1\":{\"58\":1}}],[\"validation\",{\"0\":{\"58\":1,\"112\":1},\"1\":{\"45\":1,\"58\":2,\"77\":1,\"102\":1,\"108\":1,\"142\":1}}],[\"valueerror\",{\"1\":{\"52\":1,\"58\":2,\"69\":2}}],[\"values\",{\"1\":{\"42\":1,\"47\":1,\"53\":1,\"69\":1,\"131\":1,\"133\":1}}],[\"vit\",{\"1\":{\"105\":1}}],[\"vide\",{\"1\":{\"75\":1}}],[\"vigilance\",{\"0\":{\"55\":1}}],[\"vie\",{\"0\":{\"108\":1},\"1\":{\"38\":1,\"77\":1}}],[\"via\",{\"1\":{\"9\":1,\"31\":1,\"87\":1,\"99\":1,\"139\":1}}],[\"vrai\",{\"1\":{\"31\":1,\"116\":1,\"117\":1}}],[\"vrac\",{\"1\":{\"17\":1}}],[\"vérifie\",{\"1\":{\"108\":1}}],[\"vérifier\",{\"1\":{\"10\":1,\"71\":1,\"88\":1}}],[\"vérifications\",{\"1\":{\"138\":1}}],[\"vérification\",{\"1\":{\"10\":1,\"88\":1,\"112\":1}}],[\"volumineuses\",{\"1\":{\"64\":1}}],[\"voient\",{\"1\":{\"92\":1,\"93\":1}}],[\"voici\",{\"1\":{\"40\":1,\"47\":1,\"49\":1,\"51\":1,\"69\":1,\"135\":1}}],[\"voircomment\",{\"1\":{\"118\":1}}],[\"voir\",{\"1\":{\"10\":1,\"11\":1,\"48\":1,\"88\":1,\"90\":1,\"108\":1}}],[\"votre\",{\"0\":{\"115\":1,\"117\":1},\"1\":{\"10\":6,\"38\":1,\"44\":1,\"49\":2,\"88\":6,\"116\":1,\"117\":1,\"118\":1,\"148\":1}}],[\"vos\",{\"1\":{\"7\":1,\"35\":2,\"37\":1,\"38\":2,\"39\":1,\"42\":1,\"56\":1,\"57\":1,\"68\":1,\"85\":1}}],[\"vous\",{\"1\":{\"7\":1,\"10\":3,\"11\":1,\"32\":3,\"42\":1,\"44\":1,\"46\":1,\"48\":3,\"49\":2,\"62\":1,\"64\":3,\"66\":2,\"69\":1,\"85\":1,\"88\":3,\"89\":1,\"90\":1,\"92\":1,\"93\":1,\"99\":1,\"111\":2,\"118\":2,\"145\":2,\"148\":4}}],[\"ok\",{\"1\":{\"123\":1,\"141\":1}}],[\"obvious\",{\"1\":{\"71\":1}}],[\"obtenir\",{\"1\":{\"57\":1}}],[\"objet\",{\"1\":{\"35\":1,\"52\":1}}],[\"objets\",{\"1\":{\"35\":1,\"38\":1,\"51\":1,\"57\":1,\"61\":1}}],[\"objectif\",{\"1\":{\"135\":1}}],[\"object\",{\"1\":{\"35\":1}}],[\"optimale\",{\"1\":{\"102\":1}}],[\"optimiser\",{\"1\":{\"147\":1}}],[\"optimisé\",{\"1\":{\"103\":1}}],[\"optimisée\",{\"1\":{\"63\":1}}],[\"optimisations\",{\"1\":{\"147\":1}}],[\"optimisation\",{\"1\":{\"57\":1}}],[\"optional\",{\"1\":{\"69\":2}}],[\"options\",{\"1\":{\"32\":1,\"39\":1,\"47\":1,\"60\":1,\"63\":1,\"65\":2,\"66\":1,\"73\":1}}],[\"operation\",{\"1\":{\"56\":1}}],[\"opérationscrud\",{\"1\":{\"31\":1}}],[\"opérations\",{\"0\":{\"42\":1,\"50\":1,\"125\":1},\"1\":{\"9\":2,\"31\":1,\"38\":1,\"42\":1,\"48\":1,\"56\":2,\"87\":2,\"130\":1,\"147\":1}}],[\"original\",{\"1\":{\"77\":1}}],[\"ordre\",{\"1\":{\"71\":1}}],[\"order\",{\"1\":{\"68\":1,\"69\":1}}],[\"or\",{\"1\":{\"31\":1,\"51\":1,\"69\":1}}],[\"orm\",{\"0\":{\"35\":1,\"104\":1},\"1\":{\"31\":1,\"35\":2,\"37\":1,\"38\":1,\"47\":1,\"60\":1,\"65\":1,\"69\":1}}],[\"où\",{\"1\":{\"31\":2,\"71\":2,\"146\":1}}],[\"ouf\",{\"1\":{\"71\":1}}],[\"outer\",{\"1\":{\"66\":2}}],[\"outil\",{\"1\":{\"48\":1}}],[\"oubliez\",{\"1\":{\"42\":1}}],[\"oui\",{\"1\":{\"31\":1}}],[\"ou\",{\"1\":{\"23\":2,\"31\":3,\"49\":1,\"51\":2,\"57\":1,\"64\":1,\"71\":1}}],[\"oidc\",{\"1\":{\"18\":1}}],[\"one\",{\"1\":{\"51\":2,\"64\":4,\"69\":1,\"73\":2}}],[\"on\",{\"1\":{\"11\":1,\"23\":2,\"25\":1,\"31\":7,\"32\":1,\"41\":1,\"48\":2,\"51\":2,\"52\":2,\"53\":1,\"66\":1,\"71\":11,\"73\":2,\"75\":2,\"90\":1,\"92\":1,\"121\":1,\"123\":1,\"143\":1}}],[\"officielle\",{\"1\":{\"106\":1}}],[\"offre\",{\"1\":{\"8\":1,\"31\":1,\"34\":1,\"35\":1,\"86\":1}}],[\"of\",{\"1\":{\"0\":2}}],[\"15t20\",{\"1\":{\"137\":1}}],[\"123\",{\"1\":{\"121\":1,\"123\":1,\"124\":1,\"132\":2,\"133\":2,\"134\":2}}],[\"12t10\",{\"1\":{\"108\":1}}],[\"10t14\",{\"1\":{\"108\":1}}],[\"100\",{\"1\":{\"37\":1,\"104\":1}}],[\"1\",{\"0\":{\"137\":1,\"145\":1},\"1\":{\"8\":1,\"31\":1,\"39\":1,\"66\":6,\"77\":2,\"86\":1,\"108\":2,\"132\":2}}],[\"utils\",{\"1\":{\"75\":2,\"81\":1}}],[\"utile\",{\"1\":{\"51\":1}}],[\"utilitaires\",{\"0\":{\"27\":1},\"1\":{\"75\":1}}],[\"utilité\",{\"1\":{\"23\":2}}],[\"utilisé\",{\"1\":{\"116\":1}}],[\"utilisées\",{\"1\":{\"64\":1,\"75\":1,\"117\":1}}],[\"utilisons\",{\"1\":{\"35\":1}}],[\"utilisable\",{\"1\":{\"20\":1}}],[\"utilisant\",{\"1\":{\"11\":1,\"69\":1,\"89\":1}}],[\"utilisateur\",{\"1\":{\"10\":1,\"37\":1,\"39\":2,\"47\":2,\"48\":2,\"51\":1,\"60\":1,\"62\":2,\"63\":2,\"66\":1,\"67\":2,\"68\":1,\"69\":1,\"88\":1,\"92\":1,\"98\":1,\"108\":2}}],[\"utilisateurs\",{\"0\":{\"98\":1},\"1\":{\"8\":1,\"86\":1,\"92\":1,\"93\":1}}],[\"utilisation\",{\"1\":{\"9\":1,\"38\":1,\"47\":1,\"68\":1,\"69\":1,\"87\":1}}],[\"utilisent\",{\"1\":{\"106\":1}}],[\"utilisez\",{\"1\":{\"42\":1,\"52\":1,\"53\":1,\"57\":1,\"59\":1,\"64\":1,\"68\":1}}],[\"utiliserons\",{\"1\":{\"48\":1}}],[\"utiliser\",{\"0\":{\"64\":1},\"1\":{\"23\":1,\"32\":1,\"48\":2}}],[\"utilise\",{\"1\":{\"9\":1,\"40\":1,\"41\":1,\"65\":2,\"71\":3,\"87\":1,\"143\":1}}],[\"updated\",{\"1\":{\"128\":2}}],[\"updates\",{\"1\":{\"128\":2}}],[\"update\",{\"0\":{\"53\":1,\"128\":1,\"133\":1},\"1\":{\"31\":3,\"42\":2,\"47\":2,\"48\":1,\"49\":1,\"53\":2,\"69\":2,\"125\":1,\"128\":2,\"133\":2,\"135\":2}}],[\"usage\",{\"0\":{\"27\":1},\"1\":{\"64\":1}}],[\"userupdateschema\",{\"1\":{\"128\":1}}],[\"usercreateschema\",{\"1\":{\"126\":1}}],[\"username=\",{\"1\":{\"131\":1}}],[\"username=username\",{\"1\":{\"42\":1}}],[\"username\",{\"1\":{\"32\":3,\"34\":1,\"35\":1,\"37\":1,\"42\":1,\"62\":1,\"63\":1,\"66\":1,\"67\":4,\"68\":1,\"102\":1,\"104\":1,\"122\":1,\"131\":1,\"132\":1}}],[\"users\",{\"1\":{\"32\":5,\"34\":3,\"37\":2,\"62\":1,\"63\":1,\"65\":1,\"102\":1,\"104\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1}}],[\"user\",{\"1\":{\"10\":2,\"32\":5,\"35\":5,\"37\":5,\"38\":2,\"39\":5,\"41\":5,\"42\":10,\"47\":11,\"48\":1,\"51\":5,\"60\":2,\"62\":2,\"63\":2,\"65\":3,\"66\":12,\"67\":2,\"68\":3,\"69\":11,\"71\":1,\"88\":2,\"102\":1,\"104\":1,\"108\":5,\"126\":6,\"127\":9,\"128\":9,\"129\":6,\"131\":3,\"132\":5,\"133\":2,\"134\":2,\"138\":4,\"143\":3}}],[\"use\",{\"1\":{\"0\":1}}],[\"uri\",{\"1\":{\"9\":1,\"87\":1}}],[\"unprocessable\",{\"1\":{\"142\":1}}],[\"unauthorized\",{\"1\":{\"142\":1}}],[\"unifié\",{\"0\":{\"96\":1}}],[\"uniform\",{\"1\":{\"9\":1,\"87\":1}}],[\"unique=true\",{\"1\":{\"37\":1,\"104\":1}}],[\"unique\",{\"1\":{\"31\":1,\"73\":1,\"98\":1,\"100\":1}}],[\"un\",{\"0\":{\"69\":1,\"83\":1,\"96\":1,\"136\":1},\"1\":{\"9\":1,\"20\":1,\"23\":1,\"31\":4,\"34\":1,\"39\":1,\"47\":5,\"48\":6,\"51\":3,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"67\":1,\"69\":4,\"71\":3,\"73\":1,\"75\":4,\"77\":8,\"81\":2,\"87\":1,\"95\":1,\"100\":1,\"102\":1,\"105\":1,\"108\":1,\"110\":1,\"116\":2,\"117\":1,\"126\":1,\"136\":1,\"148\":1}}],[\"une\",{\"0\":{\"9\":1,\"87\":1,\"108\":1,\"119\":1},\"1\":{\"8\":2,\"9\":2,\"11\":1,\"31\":11,\"32\":1,\"34\":1,\"35\":2,\"37\":1,\"48\":3,\"51\":1,\"52\":2,\"61\":2,\"62\":2,\"63\":1,\"66\":2,\"69\":2,\"71\":1,\"73\":3,\"75\":4,\"77\":1,\"85\":1,\"86\":2,\"87\":2,\"89\":1,\"92\":3,\"93\":1,\"95\":1,\"108\":1,\"110\":1,\"119\":1,\"122\":1,\"123\":1,\"124\":2,\"135\":3,\"145\":1}}],[\"à\",{\"0\":{\"32\":1,\"53\":1,\"65\":1,\"82\":1,\"95\":1,\"109\":1,\"113\":1,\"128\":1},\"1\":{\"7\":2,\"25\":3,\"31\":8,\"32\":1,\"37\":1,\"39\":1,\"44\":1,\"48\":3,\"49\":1,\"51\":1,\"53\":3,\"57\":1,\"62\":1,\"64\":1,\"71\":5,\"75\":1,\"77\":2,\"81\":2,\"85\":3,\"90\":1,\"99\":2,\"104\":1,\"108\":1,\"118\":1,\"119\":1,\"122\":1,\"123\":2,\"136\":1,\"146\":1,\"148\":4}}],[\"eventcreateschema\",{\"1\":{\"138\":1,\"139\":1}}],[\"event\",{\"1\":{\"132\":2,\"138\":6,\"139\":7}}],[\"events\",{\"1\":{\"121\":1,\"132\":4,\"137\":1,\"138\":2}}],[\"ec\",{\"1\":{\"102\":1,\"122\":1,\"123\":1,\"131\":2,\"133\":2}}],[\"ecl\",{\"1\":{\"102\":1,\"122\":1,\"123\":1,\"131\":2,\"133\":2}}],[\"eclair\",{\"1\":{\"95\":1,\"96\":1}}],[\"efficacement\",{\"1\":{\"145\":1}}],[\"efficace\",{\"1\":{\"69\":1,\"147\":1}}],[\"effet\",{\"1\":{\"52\":1,\"121\":1}}],[\"effectuer\",{\"1\":{\"9\":2,\"31\":1,\"56\":1,\"87\":2}}],[\"eager\",{\"0\":{\"61\":1},\"1\":{\"61\":1,\"68\":1}}],[\"edit\",{\"1\":{\"53\":1}}],[\"error\",{\"1\":{\"52\":2,\"58\":2,\"69\":2,\"143\":1}}],[\"erreurs\",{\"0\":{\"142\":1,\"143\":1},\"1\":{\"45\":1,\"56\":2,\"71\":1,\"77\":1,\"104\":1}}],[\"erreur\",{\"1\":{\"31\":1,\"45\":1,\"52\":2,\"58\":1,\"71\":1,\"143\":1}}],[\"else\",{\"1\":{\"39\":1}}],[\"elle\",{\"1\":{\"31\":1,\"32\":1,\"34\":1,\"38\":1}}],[\"elles\",{\"1\":{\"31\":1,\"95\":1}}],[\"essentiels\",{\"0\":{\"140\":1}}],[\"essentiel\",{\"1\":{\"31\":1}}],[\"est\",{\"0\":{\"8\":1,\"9\":1,\"86\":1,\"87\":1,\"144\":1},\"1\":{\"8\":1,\"9\":1,\"10\":3,\"25\":1,\"31\":2,\"32\":1,\"35\":2,\"38\":1,\"52\":2,\"58\":1,\"61\":2,\"71\":4,\"73\":1,\"75\":1,\"86\":1,\"87\":1,\"88\":3,\"92\":3,\"93\":2,\"96\":1,\"108\":2,\"119\":1,\"125\":1,\"143\":1,\"148\":1}}],[\"emails\",{\"1\":{\"100\":1}}],[\"email=\",{\"1\":{\"131\":1,\"133\":1}}],[\"email=new\",{\"1\":{\"42\":1}}],[\"email=email\",{\"1\":{\"42\":1}}],[\"email\",{\"1\":{\"10\":2,\"34\":1,\"35\":1,\"37\":1,\"42\":4,\"66\":1,\"88\":2,\"102\":1,\"104\":1,\"122\":1,\"123\":1,\"131\":1,\"132\":1,\"133\":1}}],[\"e\",{\"1\":{\"10\":1,\"88\":1}}],[\"existante\",{\"1\":{\"123\":1,\"135\":1}}],[\"existants\",{\"1\":{\"53\":1}}],[\"existe\",{\"0\":{\"94\":1},\"1\":{\"118\":1,\"124\":1}}],[\"exactement\",{\"1\":{\"51\":1}}],[\"example\",{\"1\":{\"0\":1,\"10\":1,\"88\":1}}],[\"exc\",{\"1\":{\"49\":1,\"69\":1}}],[\"exceptions\",{\"1\":{\"71\":1}}],[\"exception\",{\"1\":{\"51\":1,\"56\":1}}],[\"except\",{\"1\":{\"31\":1,\"52\":1,\"56\":2,\"58\":1,\"69\":1}}],[\"exécute\",{\"1\":{\"51\":1}}],[\"exécution\",{\"1\":{\"48\":1}}],[\"exécutant\",{\"1\":{\"10\":1,\"88\":1}}],[\"exemples\",{\"1\":{\"48\":1,\"77\":1}}],[\"exemple\",{\"0\":{\"47\":1,\"69\":1,\"108\":1,\"136\":1},\"1\":{\"47\":1,\"48\":1,\"69\":1,\"108\":1}}],[\"execute\",{\"1\":{\"34\":1,\"41\":2,\"42\":1,\"47\":2,\"51\":2,\"53\":1,\"54\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":3,\"132\":2,\"133\":1,\"134\":1}}],[\"extérieur\",{\"1\":{\"71\":1}}],[\"extrait\",{\"1\":{\"51\":1}}],[\"ext\",{\"1\":{\"37\":1,\"41\":1,\"47\":1,\"49\":1,\"69\":1}}],[\"externes\",{\"0\":{\"107\":1}}],[\"externe\",{\"0\":{\"20\":1},\"1\":{\"20\":1}}],[\"expérience\",{\"1\":{\"117\":1}}],[\"expose\",{\"1\":{\"110\":1}}],[\"explain\",{\"1\":{\"68\":1}}],[\"explicites\",{\"1\":{\"68\":1}}],[\"explicitement\",{\"1\":{\"57\":1}}],[\"explique\",{\"1\":{\"31\":1,\"92\":1}}],[\"expliquer\",{\"1\":{\"23\":1,\"31\":1,\"71\":2,\"73\":1,\"75\":1,\"77\":5,\"85\":1,\"92\":1}}],[\"expression\",{\"1\":{\"34\":1}}],[\"entity\",{\"1\":{\"142\":1}}],[\"enterprise\",{\"1\":{\"103\":1}}],[\"entrent\",{\"1\":{\"71\":1,\"112\":1}}],[\"entre\",{\"1\":{\"31\":1,\"39\":1,\"92\":1,\"95\":1,\"147\":1}}],[\"entrée\",{\"1\":{\"31\":1,\"77\":1,\"112\":1}}],[\"enum\",{\"1\":{\"75\":2}}],[\"ensuite\",{\"1\":{\"75\":1}}],[\"ensemble\",{\"1\":{\"48\":1,\"110\":1}}],[\"encapsuler\",{\"1\":{\"56\":1}}],[\"encore\",{\"1\":{\"23\":1}}],[\"enregistrement\",{\"1\":{\"73\":1}}],[\"enregistrements\",{\"1\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1}}],[\"enregistrer\",{\"1\":{\"21\":1}}],[\"engine\",{\"1\":{\"41\":1}}],[\"envoyées\",{\"1\":{\"112\":1}}],[\"envoyé\",{\"1\":{\"108\":1}}],[\"envoies\",{\"1\":{\"77\":1}}],[\"envoie\",{\"1\":{\"71\":1,\"123\":1}}],[\"envoi\",{\"1\":{\"23\":1}}],[\"env\",{\"1\":{\"23\":1,\"85\":1}}],[\"en\",{\"0\":{\"119\":1},\"1\":{\"10\":1,\"11\":1,\"23\":1,\"31\":8,\"32\":1,\"35\":2,\"45\":1,\"52\":3,\"61\":1,\"66\":1,\"71\":2,\"77\":2,\"88\":1,\"89\":1,\"92\":1,\"116\":1,\"117\":1,\"118\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"130\":1,\"147\":1,\"148\":2}}],[\"endroit\",{\"1\":{\"75\":1}}],[\"endpoint\",{\"0\":{\"138\":1},\"1\":{\"71\":1,\"77\":2,\"108\":1,\"126\":1,\"145\":1}}],[\"endpoints\",{\"0\":{\"71\":1},\"1\":{\"31\":1,\"71\":3,\"77\":1,\"83\":1,\"110\":1,\"145\":1,\"146\":1}}],[\"end\",{\"0\":{\"96\":1},\"1\":{\"7\":1,\"8\":1,\"85\":1,\"86\":1,\"92\":5,\"93\":3}}],[\"etudiant\",{\"1\":{\"122\":1,\"131\":2}}],[\"etc\",{\"1\":{\"71\":1,\"81\":1,\"103\":1}}],[\"et\",{\"0\":{\"57\":1,\"59\":1,\"85\":1,\"92\":1,\"98\":1,\"111\":1},\"1\":{\"7\":1,\"8\":3,\"9\":1,\"10\":1,\"11\":1,\"21\":1,\"22\":1,\"25\":1,\"31\":7,\"32\":1,\"35\":2,\"38\":1,\"40\":1,\"48\":4,\"52\":1,\"56\":1,\"59\":2,\"66\":1,\"69\":3,\"71\":8,\"73\":1,\"75\":2,\"77\":9,\"81\":1,\"85\":4,\"86\":3,\"87\":1,\"88\":1,\"89\":1,\"90\":2,\"92\":3,\"93\":1,\"98\":1,\"99\":3,\"100\":1,\"106\":1,\"112\":1,\"118\":1,\"119\":1,\"148\":2}}],[\"b202\",{\"1\":{\"108\":1}}],[\"bearer\",{\"1\":{\"137\":1}}],[\"beautés\",{\"1\":{\"119\":1}}],[\"beaucoup\",{\"1\":{\"99\":1}}],[\"besoin\",{\"1\":{\"46\":1,\"49\":1,\"92\":1,\"104\":1}}],[\"bde\",{\"1\":{\"98\":1,\"121\":1,\"137\":1}}],[\"bdd\",{\"1\":{\"52\":1}}],[\"business\",{\"1\":{\"71\":2}}],[\"blocs\",{\"1\":{\"56\":1}}],[\"by\",{\"1\":{\"41\":1,\"51\":1,\"67\":1,\"68\":2,\"69\":2}}],[\"body\",{\"1\":{\"122\":1}}],[\"bord\",{\"1\":{\"121\":1}}],[\"bordel\",{\"1\":{\"31\":1,\"92\":1}}],[\"booking\",{\"1\":{\"108\":1}}],[\"bookingschema\",{\"1\":{\"108\":1}}],[\"bookings\",{\"1\":{\"108\":6}}],[\"bool\",{\"1\":{\"53\":1,\"69\":2}}],[\"boolean\",{\"1\":{\"37\":2}}],[\"bonnes\",{\"1\":{\"68\":1,\"115\":1}}],[\"bonne\",{\"1\":{\"52\":1}}],[\"billetterie\",{\"1\":{\"107\":1}}],[\"bind=engine\",{\"1\":{\"38\":1}}],[\"bibliothèques\",{\"1\":{\"32\":1}}],[\"bibliothèque\",{\"1\":{\"31\":1,\"32\":1}}],[\"bien\",{\"1\":{\"31\":2,\"69\":1,\"71\":1,\"108\":1}}],[\"bienvenue\",{\"1\":{\"7\":1,\"85\":1}}],[\"bascule\",{\"1\":{\"69\":1}}],[\"basemodel\",{\"1\":{\"73\":1}}],[\"bases\",{\"1\":{\"31\":1,\"32\":1,\"33\":1,\"48\":1,\"73\":1,\"77\":1,\"95\":1}}],[\"base\",{\"0\":{\"103\":1},\"1\":{\"7\":1,\"23\":1,\"37\":6,\"38\":1,\"42\":1,\"46\":1,\"48\":2,\"56\":1,\"73\":1,\"85\":1,\"92\":1,\"103\":1,\"104\":2,\"118\":1,\"130\":1}}],[\"bad\",{\"1\":{\"62\":1,\"77\":1,\"142\":1}}],[\"back\",{\"0\":{\"96\":1},\"1\":{\"7\":1,\"8\":1,\"37\":2,\"85\":1,\"86\":1,\"92\":3,\"93\":2,\"104\":1}}],[\"lui\",{\"1\":{\"92\":1,\"93\":1}}],[\"lyon\",{\"1\":{\"92\":1,\"93\":1,\"102\":1,\"122\":1,\"123\":1,\"131\":2,\"133\":2}}],[\"lwn\",{\"1\":{\"77\":1}}],[\"lève\",{\"1\":{\"51\":1,\"52\":1}}],[\"littéralement\",{\"1\":{\"77\":1}}],[\"linus\",{\"1\":{\"77\":1}}],[\"lingua\",{\"1\":{\"31\":1,\"77\":1}}],[\"ligne\",{\"1\":{\"73\":1}}],[\"lignes\",{\"1\":{\"35\":1,\"71\":1}}],[\"lire\",{\"0\":{\"127\":1,\"132\":1},\"1\":{\"48\":1,\"110\":1}}],[\"lieu\",{\"1\":{\"32\":1,\"41\":1,\"42\":1,\"61\":1,\"92\":1}}],[\"liskov↩︎\",{\"1\":{\"77\":1}}],[\"liskov\",{\"1\":{\"77\":1}}],[\"list\",{\"1\":{\"48\":1}}],[\"listes\",{\"1\":{\"64\":1}}],[\"liste\",{\"1\":{\"31\":1,\"51\":1,\"73\":1}}],[\"lisibilité\",{\"1\":{\"35\":1}}],[\"lisible\",{\"1\":{\"32\":1,\"44\":1}}],[\"liées\",{\"1\":{\"64\":1}}],[\"liés\",{\"1\":{\"61\":1}}],[\"lié\",{\"1\":{\"31\":1}}],[\"location=event\",{\"1\":{\"139\":1}}],[\"location\",{\"1\":{\"137\":1,\"139\":1}}],[\"lors\",{\"1\":{\"69\":1}}],[\"login\",{\"1\":{\"100\":1,\"111\":1}}],[\"logic\",{\"1\":{\"71\":2}}],[\"logiciel\",{\"1\":{\"31\":1}}],[\"logiques\",{\"1\":{\"73\":1}}],[\"logique\",{\"1\":{\"31\":1,\"71\":2,\"77\":1,\"92\":1,\"93\":1,\"108\":1,\"119\":1,\"125\":1,\"145\":1,\"148\":2}}],[\"log\",{\"1\":{\"23\":1}}],[\"loggers\",{\"1\":{\"23\":1}}],[\"loin\",{\"0\":{\"15\":1,\"17\":1,\"48\":1},\"1\":{\"148\":1}}],[\"là\",{\"1\":{\"17\":1,\"31\":2,\"71\":4,\"92\":1,\"118\":1}}],[\"l\",{\"0\":{\"82\":1,\"105\":1,\"116\":1},\"1\":{\"10\":1,\"11\":1,\"23\":4,\"25\":1,\"31\":5,\"32\":3,\"34\":1,\"35\":3,\"37\":1,\"39\":1,\"42\":1,\"45\":1,\"48\":2,\"51\":1,\"52\":2,\"53\":1,\"60\":1,\"62\":1,\"68\":1,\"69\":2,\"71\":2,\"77\":7,\"81\":3,\"88\":1,\"90\":1,\"92\":4,\"93\":3,\"102\":1,\"106\":1,\"108\":3,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"139\":1,\"148\":1}}],[\"lecture\",{\"0\":{\"51\":1},\"1\":{\"51\":1}}],[\"left\",{\"1\":{\"32\":1,\"66\":2}}],[\"levels\",{\"1\":{\"23\":1}}],[\"les\",{\"0\":{\"29\":1,\"33\":1,\"37\":1,\"38\":1,\"39\":1,\"90\":1,\"120\":1,\"125\":1,\"130\":1},\"1\":{\"8\":4,\"9\":6,\"23\":4,\"25\":1,\"31\":11,\"32\":2,\"33\":1,\"34\":1,\"37\":2,\"38\":1,\"39\":2,\"40\":2,\"42\":1,\"44\":1,\"45\":1,\"46\":1,\"48\":4,\"49\":2,\"51\":5,\"52\":1,\"56\":2,\"57\":2,\"59\":4,\"60\":1,\"61\":1,\"63\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":4,\"69\":1,\"71\":8,\"73\":4,\"75\":3,\"77\":5,\"85\":1,\"86\":4,\"87\":6,\"90\":1,\"92\":3,\"93\":3,\"95\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"102\":1,\"103\":2,\"104\":2,\"107\":1,\"108\":2,\"112\":3,\"116\":1,\"118\":2,\"122\":1,\"123\":1,\"136\":1,\"146\":1,\"147\":3,\"148\":1}}],[\"le\",{\"0\":{\"11\":1,\"61\":1,\"89\":1,\"95\":1,\"113\":1},\"1\":{\"7\":1,\"8\":1,\"11\":1,\"18\":2,\"20\":1,\"23\":6,\"31\":7,\"38\":1,\"42\":1,\"46\":1,\"51\":2,\"53\":2,\"58\":1,\"62\":1,\"68\":2,\"69\":2,\"71\":7,\"73\":4,\"75\":2,\"77\":3,\"85\":1,\"86\":1,\"89\":1,\"90\":4,\"92\":2,\"93\":2,\"108\":1,\"111\":1,\"112\":1,\"121\":3,\"122\":1,\"143\":1}}],[\"lazy\",{\"1\":{\"73\":1}}],[\"label\",{\"1\":{\"68\":1}}],[\"lancé\",{\"1\":{\"85\":1}}],[\"lancement\",{\"1\":{\"118\":1,\"148\":1}}],[\"lancer\",{\"1\":{\"85\":1}}],[\"lance\",{\"1\":{\"23\":1}}],[\"language\",{\"1\":{\"34\":1}}],[\"la\",{\"0\":{\"96\":1,\"108\":1,\"135\":1},\"1\":{\"3\":2,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"17\":1,\"23\":1,\"25\":2,\"31\":5,\"32\":2,\"35\":2,\"37\":1,\"38\":3,\"40\":3,\"42\":2,\"44\":1,\"48\":2,\"51\":3,\"52\":4,\"65\":1,\"69\":1,\"71\":10,\"73\":3,\"75\":2,\"77\":6,\"81\":2,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"92\":3,\"93\":1,\"96\":1,\"102\":2,\"104\":2,\"108\":3,\"118\":1,\"119\":2,\"121\":2,\"124\":1,\"125\":1,\"130\":1,\"136\":1,\"145\":1}}],[\"layout\",{\"1\":{\"0\":2}}],[\"séparés\",{\"1\":{\"95\":1}}],[\"séparées\",{\"1\":{\"61\":1,\"64\":1}}],[\"spécialement\",{\"1\":{\"73\":1}}],[\"spécifiques\",{\"1\":{\"71\":1}}],[\"spécifique\",{\"1\":{\"51\":1,\"81\":1}}],[\"spécificités\",{\"0\":{\"25\":1},\"1\":{\"46\":1}}],[\"sûr\",{\"1\":{\"64\":1}}],[\"sait\",{\"1\":{\"146\":1}}],[\"sais\",{\"1\":{\"71\":1}}],[\"salle\",{\"1\":{\"108\":3}}],[\"salles\",{\"1\":{\"99\":1}}],[\"savez\",{\"1\":{\"64\":1}}],[\"safety\",{\"1\":{\"102\":1,\"104\":1}}],[\"safe\",{\"1\":{\"56\":1}}],[\"sans\",{\"1\":{\"23\":1,\"62\":1,\"66\":1,\"121\":2,\"141\":1}}],[\"sgbd\",{\"1\":{\"46\":1}}],[\"skyrol\",{\"1\":{\"31\":1,\"92\":1}}],[\"soirée\",{\"1\":{\"137\":2}}],[\"soit\",{\"1\":{\"31\":3}}],[\"sortie\",{\"1\":{\"112\":1}}],[\"sort\",{\"1\":{\"71\":1}}],[\"sortent\",{\"1\":{\"71\":1,\"112\":1}}],[\"son\",{\"1\":{\"98\":1}}],[\"sonne\",{\"1\":{\"71\":1}}],[\"sont\",{\"1\":{\"37\":1,\"42\":1,\"63\":1,\"71\":1,\"104\":1,\"108\":1,\"112\":2,\"115\":1,\"118\":1,\"122\":1,\"148\":1}}],[\"souvent\",{\"1\":{\"71\":1,\"75\":1,\"77\":1}}],[\"sous\",{\"1\":{\"23\":1,\"51\":1}}],[\"solution\",{\"0\":{\"63\":1,\"96\":1},\"1\":{\"63\":1}}],[\"scalable\",{\"1\":{\"117\":1}}],[\"scalar\",{\"1\":{\"69\":1}}],[\"scalars\",{\"1\":{\"31\":1,\"41\":1,\"47\":1,\"51\":2,\"57\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"69\":1,\"132\":2}}],[\"script\",{\"1\":{\"31\":1}}],[\"schéma\",{\"0\":{\"113\":1},\"1\":{\"44\":1,\"48\":1,\"73\":1,\"104\":1,\"108\":1}}],[\"schema\",{\"1\":{\"77\":3,\"139\":1,\"143\":1}}],[\"schemas\",{\"0\":{\"77\":1},\"1\":{\"31\":2,\"73\":2,\"77\":2,\"83\":1}}],[\"scheduler\",{\"1\":{\"23\":1}}],[\"school\",{\"1\":{\"25\":1}}],[\"s\",{\"1\":{\"31\":2}}],[\"sqlalchemy\",{\"0\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"40\":1,\"43\":1,\"104\":1},\"1\":{\"31\":2,\"32\":2,\"33\":1,\"34\":1,\"37\":3,\"38\":1,\"39\":1,\"40\":1,\"41\":2,\"45\":1,\"47\":3,\"48\":4,\"49\":4,\"60\":1,\"65\":1,\"66\":1,\"68\":1,\"69\":5,\"73\":1,\"104\":1,\"115\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"139\":1,\"147\":1}}],[\"sql\",{\"0\":{\"130\":1,\"139\":1},\"1\":{\"31\":5,\"32\":3,\"34\":1,\"39\":1,\"45\":1,\"51\":1,\"61\":1,\"62\":1,\"66\":1,\"73\":2,\"108\":1,\"130\":1,\"135\":1,\"139\":1,\"147\":1}}],[\"sqlite\",{\"1\":{\"20\":1,\"46\":1}}],[\"syntaxe\",{\"1\":{\"34\":1}}],[\"synapse\",{\"1\":{\"20\":1}}],[\"systèmes\",{\"1\":{\"95\":1}}],[\"système\",{\"1\":{\"8\":1,\"10\":1,\"86\":1,\"88\":1,\"107\":1,\"119\":1}}],[\"s3\",{\"1\":{\"20\":1,\"107\":1}}],[\"simplifiés\",{\"1\":{\"146\":1}}],[\"simplifiée\",{\"1\":{\"104\":1}}],[\"simples\",{\"0\":{\"50\":1,\"60\":1}}],[\"simple\",{\"1\":{\"44\":1,\"48\":1,\"121\":1}}],[\"sites\",{\"1\":{\"95\":1}}],[\"sinon\",{\"1\":{\"51\":1}}],[\"single\",{\"1\":{\"11\":1,\"90\":1}}],[\"signifie\",{\"1\":{\"125\":1}}],[\"sign\",{\"1\":{\"11\":1,\"90\":1}}],[\"si\",{\"1\":{\"10\":1,\"31\":1,\"32\":1,\"56\":1,\"64\":1,\"71\":1,\"75\":1,\"88\":1,\"92\":1,\"93\":1,\"123\":1,\"143\":1}}],[\"successfully\",{\"1\":{\"129\":1}}],[\"succès\",{\"0\":{\"141\":1},\"1\":{\"122\":1,\"123\":1,\"124\":1,\"141\":1}}],[\"substitution\",{\"1\":{\"77\":1}}],[\"subqueryload\",{\"1\":{\"65\":4}}],[\"supertype\",{\"1\":{\"77\":1}}],[\"supprimée\",{\"1\":{\"124\":1}}],[\"supprime\",{\"1\":{\"54\":1}}],[\"supprimer\",{\"0\":{\"124\":1,\"129\":1,\"134\":1},\"1\":{\"48\":1,\"54\":1,\"110\":1,\"124\":2,\"135\":1}}],[\"suppression\",{\"0\":{\"54\":1}}],[\"supplémentaire\",{\"1\":{\"39\":1,\"63\":1}}],[\"suppose\",{\"1\":{\"31\":1}}],[\"suivons\",{\"1\":{\"136\":1}}],[\"suivez\",{\"1\":{\"90\":1}}],[\"suivre\",{\"0\":{\"90\":1}}],[\"suivante\",{\"1\":{\"10\":1,\"11\":1,\"88\":1,\"89\":1}}],[\"suite\",{\"1\":{\"17\":1}}],[\"sur\",{\"1\":{\"3\":1,\"9\":2,\"10\":1,\"11\":1,\"17\":1,\"20\":1,\"23\":1,\"31\":2,\"34\":1,\"59\":1,\"68\":2,\"71\":2,\"77\":3,\"81\":1,\"87\":2,\"88\":1,\"90\":1,\"116\":1,\"117\":1,\"119\":1,\"148\":1}}],[\"standard\",{\"1\":{\"148\":1}}],[\"stack\",{\"1\":{\"117\":1}}],[\"statique\",{\"1\":{\"77\":1}}],[\"statut\",{\"0\":{\"140\":1},\"1\":{\"53\":1,\"69\":2,\"98\":1}}],[\"status\",{\"1\":{\"53\":1,\"69\":6,\"127\":1,\"138\":1,\"143\":2}}],[\"statelessness\",{\"1\":{\"9\":1,\"87\":1}}],[\"state\",{\"1\":{\"9\":1,\"87\":1}}],[\"stockage\",{\"1\":{\"100\":1,\"107\":1}}],[\"stocker\",{\"1\":{\"73\":1}}],[\"structurées\",{\"1\":{\"103\":1}}],[\"structurée\",{\"1\":{\"69\":1}}],[\"structurer\",{\"1\":{\"148\":1}}],[\"structures\",{\"1\":{\"71\":1,\"77\":1}}],[\"structure\",{\"1\":{\"31\":1,\"119\":1,\"146\":2}}],[\"stratégie\",{\"1\":{\"61\":1}}],[\"str\",{\"1\":{\"42\":3,\"47\":1,\"51\":1,\"53\":1,\"54\":1,\"60\":1,\"67\":1,\"69\":6}}],[\"string\",{\"1\":{\"37\":4,\"104\":2}}],[\"style\",{\"1\":{\"9\":1,\"87\":1}}],[\"sso\",{\"1\":{\"8\":1,\"11\":2,\"18\":1,\"86\":1,\"90\":2,\"100\":1}}],[\"semi\",{\"1\":{\"103\":1}}],[\"sembler\",{\"1\":{\"48\":1}}],[\"selon\",{\"1\":{\"98\":1,\"108\":1}}],[\"selectinload\",{\"1\":{\"31\":1,\"64\":1,\"65\":4}}],[\"select\",{\"0\":{\"132\":1},\"1\":{\"31\":1,\"32\":1,\"34\":2,\"41\":2,\"42\":1,\"47\":2,\"49\":1,\"51\":2,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":4,\"67\":1,\"68\":1,\"69\":3,\"132\":4,\"135\":1}}],[\"sera\",{\"1\":{\"62\":1,\"71\":1,\"116\":1}}],[\"server\",{\"1\":{\"143\":1}}],[\"servent\",{\"1\":{\"25\":1,\"85\":1}}],[\"serveur\",{\"0\":{\"143\":1},\"1\":{\"9\":1,\"87\":1,\"121\":1,\"143\":1}}],[\"service\",{\"0\":{\"20\":1,\"69\":1},\"1\":{\"20\":1,\"69\":1,\"116\":1}}],[\"services\",{\"0\":{\"99\":1,\"100\":1,\"107\":1},\"1\":{\"8\":2,\"9\":1,\"86\":2,\"87\":1,\"95\":2,\"96\":1,\"98\":1,\"100\":1,\"106\":1}}],[\"seulement\",{\"1\":{\"123\":1}}],[\"seule\",{\"1\":{\"61\":1,\"63\":1,\"77\":1}}],[\"seul\",{\"1\":{\"52\":1,\"57\":1,\"100\":1,\"105\":1}}],[\"sequence\",{\"1\":{\"49\":1,\"51\":1,\"67\":1,\"68\":1,\"69\":2}}],[\"se\",{\"1\":{\"23\":1,\"31\":2,\"51\":1,\"71\":1,\"73\":1,\"77\":1,\"119\":1,\"130\":1,\"135\":1}}],[\"sessionlocal\",{\"1\":{\"38\":2}}],[\"sessionmaker\",{\"1\":{\"38\":2}}],[\"sessions\",{\"0\":{\"38\":1},\"1\":{\"57\":1}}],[\"session\",{\"0\":{\"41\":1},\"1\":{\"32\":1,\"35\":1,\"38\":6,\"39\":1,\"41\":2,\"42\":1,\"71\":1}}],[\"ses\",{\"1\":{\"7\":1,\"39\":1,\"47\":1,\"85\":1,\"108\":1}}],[\"seeproject\",{\"1\":{\"0\":1}}],[\"set\",{\"1\":{\"0\":1,\"133\":1}}],[\"droit\",{\"1\":{\"111\":1}}],[\"dès\",{\"1\":{\"96\":1}}],[\"directe\",{\"1\":{\"147\":1}}],[\"directement\",{\"1\":{\"57\":1,\"148\":1}}],[\"diffusion\",{\"1\":{\"99\":1}}],[\"différents\",{\"1\":{\"95\":2}}],[\"différente\",{\"1\":{\"73\":1}}],[\"différentes\",{\"1\":{\"73\":1}}],[\"différences\",{\"1\":{\"40\":1}}],[\"dit\",{\"1\":{\"77\":1}}],[\"dict\",{\"1\":{\"58\":1}}],[\"date=event\",{\"1\":{\"139\":1}}],[\"date\",{\"1\":{\"108\":2,\"132\":3,\"137\":1,\"139\":1}}],[\"data\",{\"1\":{\"56\":2,\"58\":3,\"77\":1,\"126\":2,\"138\":2,\"139\":5}}],[\"database\",{\"1\":{\"56\":1}}],[\"dans\",{\"0\":{\"40\":1},\"1\":{\"7\":1,\"10\":1,\"31\":1,\"35\":3,\"47\":1,\"48\":2,\"49\":1,\"52\":1,\"56\":1,\"69\":1,\"77\":2,\"85\":1,\"88\":1,\"90\":2,\"92\":1,\"93\":1,\"117\":2,\"118\":1,\"121\":1,\"122\":1,\"126\":1,\"130\":1,\"135\":1,\"143\":1}}],[\"déboguer\",{\"1\":{\"145\":1}}],[\"début\",{\"1\":{\"48\":1}}],[\"détectées\",{\"1\":{\"104\":1}}],[\"détection\",{\"1\":{\"45\":1}}],[\"découverte\",{\"1\":{\"115\":1}}],[\"découle\",{\"1\":{\"77\":1}}],[\"décorateur\",{\"1\":{\"71\":1}}],[\"déclarer\",{\"1\":{\"75\":1}}],[\"définition\",{\"1\":{\"48\":1}}],[\"définir\",{\"1\":{\"39\":1}}],[\"désormais\",{\"1\":{\"48\":1}}],[\"développez\",{\"1\":{\"148\":1}}],[\"développeur\",{\"1\":{\"146\":1,\"148\":1}}],[\"développeurs\",{\"1\":{\"35\":2}}],[\"développement\",{\"1\":{\"92\":1,\"93\":1}}],[\"développer\",{\"1\":{\"48\":1}}],[\"déjà\",{\"1\":{\"32\":1,\"63\":1,\"124\":1}}],[\"dépôt\",{\"0\":{\"11\":1,\"89\":1},\"1\":{\"11\":1,\"89\":1,\"90\":1}}],[\"ds\",{\"1\":{\"23\":1,\"31\":1,\"71\":1,\"75\":1,\"77\":1}}],[\"db\",{\"0\":{\"19\":1},\"1\":{\"31\":2,\"41\":2,\"42\":7,\"47\":8,\"51\":3,\"52\":7,\"53\":3,\"54\":3,\"56\":5,\"58\":4,\"60\":2,\"62\":2,\"63\":2,\"65\":4,\"66\":2,\"67\":2,\"68\":2,\"69\":10,\"71\":3,\"75\":1,\"108\":3,\"126\":3,\"127\":3,\"128\":3,\"129\":3,\"131\":2,\"132\":2,\"133\":2,\"134\":2,\"138\":3,\"139\":4}}],[\"duration\",{\"1\":{\"108\":2}}],[\"duplication\",{\"1\":{\"65\":1}}],[\"dupliqués\",{\"1\":{\"64\":1}}],[\"du\",{\"0\":{\"62\":1,\"82\":1,\"90\":1,\"137\":1},\"1\":{\"9\":1,\"17\":1,\"21\":3,\"23\":1,\"31\":1,\"32\":3,\"34\":1,\"35\":1,\"44\":1,\"48\":1,\"52\":1,\"62\":1,\"73\":3,\"81\":2,\"85\":2,\"87\":1,\"90\":1,\"104\":1,\"115\":1,\"119\":1,\"125\":1,\"126\":1,\"143\":1}}],[\"doutes\",{\"1\":{\"77\":1}}],[\"doute\",{\"1\":{\"75\":1}}],[\"double\",{\"1\":{\"31\":1}}],[\"do\",{\"1\":{\"48\":1}}],[\"doe\",{\"1\":{\"32\":2,\"102\":1}}],[\"don\",{\"1\":{\"77\":1}}],[\"donner\",{\"1\":{\"77\":1}}],[\"données\",{\"0\":{\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"58\":1,\"103\":1,\"112\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1},\"1\":{\"8\":1,\"31\":1,\"32\":1,\"33\":1,\"37\":1,\"38\":1,\"42\":1,\"45\":1,\"46\":1,\"48\":1,\"51\":1,\"56\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":3,\"65\":1,\"71\":2,\"77\":1,\"86\":1,\"92\":3,\"93\":1,\"95\":1,\"96\":1,\"102\":1,\"103\":2,\"108\":1,\"110\":4,\"112\":3,\"121\":1,\"122\":1,\"130\":1,\"135\":1,\"142\":1,\"143\":1}}],[\"dont\",{\"1\":{\"49\":1,\"51\":1}}],[\"done=new\",{\"1\":{\"69\":1}}],[\"done=done\",{\"1\":{\"53\":1}}],[\"done=false\",{\"1\":{\"47\":1,\"69\":1}}],[\"done=true\",{\"1\":{\"47\":1}}],[\"done\",{\"1\":{\"37\":1,\"39\":1,\"53\":3,\"66\":1,\"67\":1,\"69\":2}}],[\"donc\",{\"1\":{\"31\":4,\"71\":3,\"73\":2,\"77\":2}}],[\"documents\",{\"1\":{\"107\":1}}],[\"documentaire\",{\"1\":{\"100\":1}}],[\"documentation\",{\"0\":{\"3\":1},\"1\":{\"3\":2,\"7\":1,\"85\":1,\"102\":1,\"115\":1}}],[\"doc\",{\"1\":{\"102\":1}}],[\"dockerfiles\",{\"1\":{\"23\":1}}],[\"dossiers\",{\"1\":{\"21\":1}}],[\"doit\",{\"1\":{\"9\":1,\"87\":1}}],[\"d\",{\"0\":{\"69\":1,\"83\":1,\"90\":1,\"108\":1,\"136\":1,\"145\":1},\"1\":{\"8\":1,\"9\":2,\"10\":1,\"11\":1,\"18\":1,\"25\":1,\"31\":5,\"32\":2,\"42\":1,\"45\":1,\"47\":1,\"48\":2,\"51\":1,\"52\":2,\"53\":1,\"56\":1,\"58\":1,\"64\":2,\"67\":2,\"68\":1,\"69\":3,\"71\":6,\"73\":1,\"75\":1,\"77\":3,\"81\":1,\"86\":1,\"87\":2,\"88\":1,\"90\":4,\"92\":1,\"95\":3,\"96\":2,\"99\":1,\"104\":1,\"105\":1,\"110\":1,\"112\":1,\"116\":1,\"117\":1,\"119\":1,\"136\":1,\"145\":1,\"148\":1}}],[\"detail=\",{\"1\":{\"127\":1,\"138\":1,\"143\":2}}],[\"demande\",{\"1\":{\"121\":1}}],[\"demandés\",{\"1\":{\"115\":1}}],[\"depends\",{\"1\":{\"108\":2,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":2}}],[\"dependency\",{\"1\":{\"75\":2}}],[\"dependencies\",{\"1\":{\"71\":1}}],[\"devenir\",{\"1\":{\"59\":1}}],[\"devient\",{\"1\":{\"44\":1,\"48\":1}}],[\"deviennent\",{\"1\":{\"44\":1}}],[\"devant\",{\"1\":{\"42\":1}}],[\"devriez\",{\"1\":{\"10\":1,\"88\":1}}],[\"def\",{\"1\":{\"41\":1,\"42\":2,\"47\":3,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"58\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":3,\"102\":1,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":1,\"139\":1}}],[\"default=false\",{\"1\":{\"37\":1}}],[\"declarative\",{\"1\":{\"37\":3}}],[\"deux\",{\"0\":{\"33\":1},\"1\":{\"33\":1,\"48\":1}}],[\"derrière\",{\"1\":{\"31\":2,\"92\":1,\"93\":1}}],[\"deleted\",{\"1\":{\"129\":1}}],[\"delete\",{\"0\":{\"54\":1,\"124\":1,\"129\":1,\"134\":1},\"1\":{\"9\":1,\"31\":4,\"48\":1,\"49\":1,\"54\":2,\"69\":1,\"87\":1,\"110\":1,\"124\":1,\"125\":1,\"129\":3,\"134\":2,\"135\":3,\"141\":1}}],[\"destructif\",{\"1\":{\"124\":1}}],[\"dessous\",{\"1\":{\"92\":1}}],[\"dessus\",{\"1\":{\"31\":2}}],[\"description=event\",{\"1\":{\"139\":1}}],[\"description=description\",{\"1\":{\"69\":1}}],[\"description\",{\"1\":{\"69\":1,\"137\":1,\"139\":1}}],[\"descriptions\",{\"1\":{\"0\":1}}],[\"desc\",{\"1\":{\"68\":2}}],[\"des\",{\"0\":{\"51\":1,\"56\":1,\"58\":1,\"98\":1,\"112\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1},\"1\":{\"8\":1,\"9\":6,\"21\":1,\"25\":1,\"31\":10,\"32\":2,\"35\":1,\"37\":1,\"45\":3,\"48\":5,\"51\":2,\"53\":1,\"54\":1,\"56\":2,\"58\":1,\"59\":1,\"61\":1,\"64\":2,\"66\":1,\"68\":1,\"71\":4,\"73\":2,\"75\":3,\"77\":5,\"81\":6,\"86\":1,\"87\":6,\"95\":3,\"96\":2,\"98\":1,\"102\":2,\"103\":1,\"110\":4,\"115\":1,\"118\":1,\"119\":1,\"121\":1,\"135\":1,\"145\":1,\"148\":1}}],[\"de\",{\"0\":{\"10\":1,\"33\":1,\"43\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"88\":1,\"103\":1,\"140\":1},\"1\":{\"7\":3,\"8\":2,\"10\":3,\"17\":1,\"23\":3,\"25\":3,\"31\":8,\"32\":3,\"33\":2,\"35\":1,\"37\":4,\"38\":4,\"39\":2,\"40\":2,\"41\":1,\"42\":3,\"45\":1,\"46\":3,\"48\":10,\"49\":3,\"51\":3,\"52\":5,\"53\":1,\"56\":3,\"60\":1,\"61\":3,\"64\":1,\"65\":1,\"68\":1,\"69\":5,\"71\":5,\"73\":4,\"75\":1,\"77\":10,\"85\":3,\"86\":2,\"88\":3,\"90\":1,\"92\":7,\"93\":3,\"95\":1,\"96\":1,\"100\":1,\"102\":2,\"103\":1,\"104\":1,\"107\":2,\"108\":3,\"110\":1,\"111\":1,\"116\":1,\"118\":2,\"121\":2,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"130\":1,\"137\":1,\"145\":1,\"146\":2,\"147\":1,\"148\":3}}],[\"md\",{\"1\":{\"90\":1}}],[\"ms\",{\"1\":{\"71\":2}}],[\"mémoire\",{\"0\":{\"57\":1}}],[\"métier\",{\"1\":{\"71\":1,\"92\":1,\"93\":1,\"108\":1,\"138\":1}}],[\"méthodes\",{\"1\":{\"51\":1}}],[\"méta\",{\"0\":{\"3\":1}}],[\"miroir\",{\"0\":{\"119\":1}}],[\"mises\",{\"1\":{\"147\":1}}],[\"mise\",{\"0\":{\"53\":1},\"1\":{\"118\":1,\"148\":1}}],[\"migrations\",{\"1\":{\"19\":1,\"44\":1,\"48\":1,\"81\":1,\"104\":1}}],[\"même\",{\"1\":{\"46\":1,\"119\":1,\"123\":1,\"125\":1,\"146\":1}}],[\"multi\",{\"1\":{\"46\":1}}],[\"moins\",{\"1\":{\"146\":1,\"147\":1}}],[\"mobile\",{\"1\":{\"92\":1,\"100\":1,\"106\":2,\"107\":1,\"108\":1}}],[\"mot\",{\"1\":{\"42\":1}}],[\"moderne\",{\"1\":{\"115\":1,\"117\":1}}],[\"model=eventschema\",{\"1\":{\"138\":1}}],[\"model=userschema\",{\"1\":{\"126\":1,\"127\":1,\"128\":1}}],[\"model=list\",{\"1\":{\"108\":1}}],[\"model\",{\"1\":{\"52\":1,\"139\":1}}],[\"models\",{\"0\":{\"73\":1},\"1\":{\"31\":1,\"49\":2,\"51\":3,\"52\":3,\"53\":2,\"54\":2,\"58\":2,\"60\":4,\"62\":1,\"63\":2,\"65\":4,\"66\":3,\"67\":5,\"68\":4,\"69\":15,\"73\":1,\"83\":1}}],[\"modifier\",{\"0\":{\"123\":1,\"133\":1},\"1\":{\"110\":1,\"123\":1,\"135\":1}}],[\"modification\",{\"1\":{\"56\":1,\"123\":1}}],[\"modifications\",{\"1\":{\"52\":1}}],[\"modéliser\",{\"1\":{\"103\":1}}],[\"modulaire\",{\"1\":{\"69\":1}}],[\"module\",{\"0\":{\"83\":1},\"1\":{\"31\":1,\"75\":1,\"81\":1}}],[\"modules\",{\"0\":{\"29\":1},\"1\":{\"81\":1}}],[\"modèle\",{\"1\":{\"49\":1,\"73\":1}}],[\"modèles\",{\"0\":{\"37\":1},\"1\":{\"37\":1,\"39\":1,\"48\":2,\"77\":2}}],[\"message\",{\"1\":{\"129\":1}}],[\"messagerie\",{\"1\":{\"107\":1}}],[\"members\",{\"1\":{\"104\":1,\"121\":1}}],[\"membership\",{\"1\":{\"25\":1}}],[\"me\",{\"1\":{\"102\":1,\"108\":2}}],[\"merde\",{\"1\":{\"71\":1}}],[\"meilleurs\",{\"1\":{\"71\":2}}],[\"meilleur\",{\"1\":{\"65\":1,\"75\":1}}],[\"meilleure\",{\"1\":{\"35\":1}}],[\"met\",{\"1\":{\"31\":1,\"53\":2}}],[\"mettre\",{\"0\":{\"128\":1},\"1\":{\"31\":1,\"48\":1,\"53\":1,\"121\":1,\"123\":1}}],[\"mentionné\",{\"1\":{\"23\":1}}],[\"mtn\",{\"1\":{\"25\":1,\"31\":1,\"71\":1}}],[\"mm\",{\"1\":{\"23\":1,\"31\":1,\"73\":1,\"75\":1}}],[\"my\",{\"1\":{\"108\":1}}],[\"mysql\",{\"1\":{\"46\":1}}],[\"mypy\",{\"1\":{\"22\":1}}],[\"myeclpay\",{\"1\":{\"23\":1,\"99\":1}}],[\"myecl\",{\"0\":{\"105\":1},\"1\":{\"7\":1,\"8\":1,\"25\":1,\"85\":1,\"86\":1,\"92\":1,\"93\":1,\"95\":1,\"106\":1}}],[\"malformées\",{\"1\":{\"142\":1}}],[\"many\",{\"1\":{\"64\":4,\"65\":1,\"73\":2}}],[\"manager\",{\"1\":{\"57\":1}}],[\"manière\",{\"1\":{\"49\":1}}],[\"maîtrisez\",{\"1\":{\"48\":1,\"145\":1}}],[\"marque\",{\"1\":{\"47\":1}}],[\"mark\",{\"1\":{\"47\":1}}],[\"marche\",{\"1\":{\"18\":1}}],[\"mapping\",{\"1\":{\"35\":1}}],[\"mapped\",{\"1\":{\"31\":1,\"73\":2}}],[\"masquant\",{\"1\":{\"31\":1}}],[\"matériel\",{\"1\":{\"99\":1}}],[\"matrix\",{\"1\":{\"20\":1,\"100\":1,\"107\":1}}],[\"matter\",{\"1\":{\"0\":1}}],[\"mais\",{\"1\":{\"34\":1,\"48\":1,\"73\":2,\"125\":1}}],[\"mails\",{\"1\":{\"20\":1}}],[\"mail\",{\"1\":{\"10\":1,\"23\":1,\"77\":1,\"88\":1}}],[\"maintien\",{\"1\":{\"116\":1}}],[\"maintenir\",{\"1\":{\"69\":1}}],[\"maintenabilité\",{\"0\":{\"146\":1}}],[\"maintenables\",{\"1\":{\"48\":1}}],[\"maintenable\",{\"1\":{\"32\":1}}],[\"maintenant\",{\"1\":{\"48\":1,\"63\":1,\"118\":1,\"148\":1}}],[\"maintenance\",{\"1\":{\"35\":1,\"95\":1}}],[\"main\",{\"1\":{\"0\":1,\"32\":1,\"104\":1}}],[\"garantie\",{\"1\":{\"112\":1}}],[\"gardant\",{\"1\":{\"32\":1}}],[\"garder\",{\"1\":{\"23\":1}}],[\"good\",{\"1\":{\"63\":1,\"77\":1}}],[\"genre\",{\"1\":{\"77\":1}}],[\"gestion\",{\"0\":{\"56\":1,\"98\":1,\"136\":1},\"1\":{\"40\":1,\"44\":1,\"45\":1,\"48\":2,\"56\":1,\"98\":1,\"100\":1,\"102\":1}}],[\"get\",{\"0\":{\"121\":1},\"1\":{\"9\":1,\"31\":1,\"41\":1,\"47\":1,\"51\":1,\"58\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"87\":1,\"102\":2,\"108\":6,\"110\":1,\"121\":3,\"126\":1,\"127\":4,\"128\":1,\"129\":1,\"135\":1,\"138\":2,\"141\":1,\"147\":1}}],[\"gèrent\",{\"1\":{\"77\":1}}],[\"gère\",{\"1\":{\"38\":1,\"92\":1,\"93\":1}}],[\"géré\",{\"1\":{\"143\":1}}],[\"gérer\",{\"1\":{\"8\":1,\"31\":1,\"49\":1,\"56\":1,\"71\":1,\"86\":1,\"96\":1}}],[\"génère\",{\"1\":{\"62\":2,\"66\":1}}],[\"généré\",{\"1\":{\"139\":1}}],[\"générée\",{\"1\":{\"66\":1}}],[\"générées\",{\"1\":{\"34\":1}}],[\"génération\",{\"1\":{\"102\":1}}],[\"générale\",{\"1\":{\"49\":1}}],[\"général\",{\"1\":{\"31\":1}}],[\"grade\",{\"1\":{\"103\":1}}],[\"grande\",{\"1\":{\"137\":1}}],[\"grand\",{\"1\":{\"75\":1,\"77\":1}}],[\"grands\",{\"1\":{\"31\":1}}],[\"grâce\",{\"1\":{\"39\":1,\"44\":1,\"99\":1}}],[\"groups\",{\"1\":{\"104\":1,\"121\":1}}],[\"groupes\",{\"0\":{\"98\":1},\"1\":{\"98\":1,\"103\":1}}],[\"group\",{\"1\":{\"25\":1,\"68\":1,\"104\":1}}],[\"globale\",{\"1\":{\"75\":1}}],[\"global\",{\"1\":{\"10\":2,\"88\":2}}],[\"guidera\",{\"1\":{\"90\":1}}],[\"guide\",{\"1\":{\"7\":1,\"48\":2,\"85\":1},\"2\":{\"2\":1,\"4\":1,\"6\":1,\"12\":1,\"14\":1,\"16\":1,\"24\":1,\"26\":1,\"28\":1,\"30\":1,\"70\":1,\"72\":1,\"74\":1,\"76\":1,\"78\":1,\"80\":1,\"84\":1,\"91\":1,\"149\":1}}],[\"github\",{\"0\":{\"1\":1},\"1\":{\"11\":1,\"89\":1}}],[\"git\",{\"0\":{\"1\":1,\"10\":1,\"88\":1},\"1\":{\"10\":7,\"11\":3,\"88\":7,\"89\":3}}],[\"flexibilité\",{\"1\":{\"103\":1}}],[\"flutter\",{\"1\":{\"106\":1}}],[\"flux\",{\"1\":{\"92\":1}}],[\"flush\",{\"1\":{\"71\":1}}],[\"flow\",{\"1\":{\"18\":1}}],[\"func\",{\"1\":{\"68\":2,\"69\":1}}],[\"fermez\",{\"1\":{\"57\":1}}],[\"f\",{\"1\":{\"39\":1,\"58\":1,\"62\":1,\"63\":1,\"69\":1}}],[\"factorisation\",{\"1\":{\"75\":1}}],[\"factory\",{\"1\":{\"75\":2}}],[\"facilité\",{\"0\":{\"145\":1}}],[\"facilitent\",{\"1\":{\"119\":1}}],[\"facilite\",{\"1\":{\"31\":1,\"35\":1}}],[\"faciles\",{\"1\":{\"44\":1}}],[\"facilement\",{\"1\":{\"39\":1,\"145\":1}}],[\"fastapi\",{\"0\":{\"102\":1,\"138\":1},\"1\":{\"71\":1,\"77\":1,\"102\":4,\"115\":1,\"143\":1}}],[\"false\",{\"1\":{\"69\":1}}],[\"façons\",{\"1\":{\"33\":1}}],[\"faut\",{\"1\":{\"31\":2,\"71\":4,\"77\":2}}],[\"faudrait\",{\"1\":{\"31\":1}}],[\"faite\",{\"1\":{\"62\":1}}],[\"fait\",{\"0\":{\"97\":1},\"1\":{\"31\":2,\"51\":1,\"71\":2,\"73\":3,\"75\":1,\"77\":1,\"105\":1,\"108\":1,\"118\":1}}],[\"faire\",{\"1\":{\"7\":1,\"31\":5,\"61\":1,\"71\":1,\"73\":1,\"85\":1,\"98\":1,\"111\":1}}],[\"frameworks\",{\"1\":{\"102\":1,\"148\":1}}],[\"framework\",{\"0\":{\"102\":1}}],[\"franchement\",{\"1\":{\"31\":1}}],[\"franca\",{\"1\":{\"31\":1,\"77\":1}}],[\"fr\",{\"1\":{\"71\":1,\"102\":1,\"122\":1,\"123\":1,\"131\":2,\"133\":2}}],[\"fréquemment\",{\"1\":{\"68\":1}}],[\"fréquents\",{\"0\":{\"27\":1}}],[\"from\",{\"1\":{\"32\":1,\"34\":1,\"37\":3,\"38\":1,\"41\":2,\"47\":3,\"49\":5,\"60\":1,\"65\":1,\"66\":3,\"68\":1,\"69\":6,\"102\":1,\"132\":2,\"134\":1,\"143\":1}}],[\"frontend\",{\"1\":{\"108\":2}}],[\"front\",{\"1\":{\"0\":1,\"92\":2,\"93\":1}}],[\"fichier\",{\"1\":{\"90\":1}}],[\"fichiers\",{\"0\":{\"75\":1},\"1\":{\"21\":1,\"75\":1,\"81\":1,\"100\":1,\"107\":1}}],[\"filtres\",{\"0\":{\"67\":1}}],[\"filtrer\",{\"1\":{\"31\":1}}],[\"filter\",{\"1\":{\"32\":1,\"35\":1,\"39\":1}}],[\"first\",{\"1\":{\"31\":1,\"32\":1,\"35\":1,\"38\":1,\"39\":1,\"41\":1,\"47\":1,\"51\":1,\"57\":1,\"60\":1,\"132\":1}}],[\"firebase\",{\"1\":{\"20\":1,\"107\":1}}],[\"final\",{\"1\":{\"92\":1,\"130\":1}}],[\"finally\",{\"1\":{\"38\":1}}],[\"fin\",{\"1\":{\"31\":1,\"34\":1}}],[\"fs\",{\"0\":{\"21\":1}}],[\"foyer\",{\"1\":{\"137\":1}}],[\"found\",{\"1\":{\"127\":1,\"142\":1,\"143\":1,\"150\":1}}],[\"fournit\",{\"1\":{\"92\":1,\"93\":1}}],[\"fournies\",{\"1\":{\"90\":1}}],[\"fondamentale\",{\"1\":{\"148\":1}}],[\"fondamentaux\",{\"0\":{\"36\":1,\"92\":1},\"1\":{\"118\":1}}],[\"font\",{\"1\":{\"71\":1}}],[\"fonction\",{\"1\":{\"51\":1,\"71\":2,\"108\":1}}],[\"fonctionne\",{\"1\":{\"46\":1,\"118\":1}}],[\"fonctionnalités\",{\"1\":{\"7\":1,\"69\":1,\"85\":1}}],[\"fonctions\",{\"1\":{\"31\":1,\"42\":1,\"75\":1}}],[\"fois\",{\"1\":{\"11\":1,\"31\":1,\"48\":1,\"77\":1,\"81\":1,\"85\":1,\"89\":1,\"121\":1,\"123\":1,\"145\":1}}],[\"forbidden\",{\"1\":{\"142\":1}}],[\"fort\",{\"1\":{\"77\":1}}],[\"foreign\",{\"1\":{\"73\":1}}],[\"foreignkey\",{\"1\":{\"37\":2}}],[\"forme\",{\"1\":{\"51\":1}}],[\"formation\",{\"0\":{\"115\":1}}],[\"formatées\",{\"1\":{\"108\":1}}],[\"format\",{\"1\":{\"9\":1,\"87\":1,\"112\":1}}],[\"fork\",{\"0\":{\"1\":1}}],[\"for\",{\"1\":{\"0\":1,\"39\":1,\"62\":1,\"63\":1}}],[\"ici\",{\"1\":{\"108\":1}}],[\"item\",{\"1\":{\"52\":6,\"54\":1,\"58\":7,\"60\":2,\"62\":5,\"63\":3,\"66\":9,\"69\":6}}],[\"items\",{\"1\":{\"0\":1,\"51\":1,\"60\":1,\"62\":3,\"63\":3,\"65\":2,\"66\":2,\"67\":1}}],[\"imaginons\",{\"1\":{\"108\":1}}],[\"imaginer\",{\"1\":{\"48\":1}}],[\"imbriquées\",{\"0\":{\"66\":1},\"1\":{\"66\":1}}],[\"impact\",{\"1\":{\"116\":1}}],[\"impacter\",{\"1\":{\"59\":1}}],[\"impossible\",{\"1\":{\"69\":1}}],[\"importe\",{\"1\":{\"145\":1}}],[\"importante\",{\"0\":{\"144\":1}}],[\"important\",{\"1\":{\"77\":2}}],[\"import\",{\"1\":{\"34\":1,\"37\":3,\"38\":1,\"41\":2,\"47\":3,\"49\":5,\"60\":1,\"65\":1,\"68\":1,\"69\":6,\"102\":1,\"143\":1}}],[\"imports\",{\"0\":{\"49\":1},\"1\":{\"23\":1,\"49\":2}}],[\"implicites\",{\"1\":{\"68\":1}}],[\"if\",{\"1\":{\"39\":1,\"58\":1,\"69\":2,\"127\":1,\"138\":1,\"143\":2}}],[\"id=user\",{\"1\":{\"47\":1,\"69\":1}}],[\"idempotent\",{\"1\":{\"121\":1,\"122\":1,\"123\":1,\"124\":1}}],[\"ide\",{\"1\":{\"44\":1}}],[\"identifier\",{\"1\":{\"9\":1,\"87\":1}}],[\"identification\",{\"1\":{\"9\":1,\"87\":1}}],[\"id\",{\"1\":{\"32\":3,\"34\":1,\"35\":1,\"37\":4,\"39\":1,\"41\":4,\"42\":3,\"47\":11,\"51\":5,\"53\":3,\"54\":3,\"60\":3,\"66\":9,\"68\":2,\"69\":15,\"104\":1,\"108\":3,\"127\":3,\"128\":3,\"129\":3,\"132\":3,\"133\":2,\"134\":2,\"139\":1}}],[\"idée\",{\"1\":{\"31\":1}}],[\"ils\",{\"1\":{\"77\":1}}],[\"illustrer\",{\"1\":{\"48\":1}}],[\"il\",{\"0\":{\"94\":1},\"1\":{\"8\":1,\"10\":1,\"23\":1,\"31\":1,\"35\":1,\"48\":1,\"77\":1,\"86\":1,\"88\":1,\"96\":1,\"105\":1,\"118\":2}}],[\"invalides\",{\"1\":{\"143\":1}}],[\"industrie\",{\"1\":{\"117\":1,\"148\":1}}],[\"index\",{\"1\":{\"68\":1,\"73\":1}}],[\"inexistant\",{\"1\":{\"95\":1}}],[\"include\",{\"1\":{\"69\":2}}],[\"incluent\",{\"1\":{\"9\":1,\"87\":1}}],[\"injection\",{\"1\":{\"45\":1}}],[\"into\",{\"1\":{\"131\":1}}],[\"introuvable\",{\"1\":{\"142\":1}}],[\"intro\",{\"1\":{\"77\":1}}],[\"introduction\",{\"0\":{\"32\":1,\"92\":1,\"93\":1}}],[\"int\",{\"1\":{\"41\":1,\"42\":1,\"47\":4,\"127\":1,\"128\":1,\"129\":1}}],[\"intellisense\",{\"1\":{\"77\":1}}],[\"integrityerror\",{\"1\":{\"49\":1,\"52\":1,\"56\":1,\"58\":1,\"69\":2}}],[\"integer\",{\"1\":{\"37\":4,\"104\":1}}],[\"interne\",{\"1\":{\"143\":1}}],[\"internal\",{\"1\":{\"143\":1}}],[\"interagissent\",{\"1\":{\"42\":1}}],[\"interagir\",{\"1\":{\"8\":1,\"32\":1,\"38\":1,\"86\":1}}],[\"interaction\",{\"1\":{\"31\":1}}],[\"interface\",{\"1\":{\"8\":1,\"31\":1,\"38\":1,\"86\":1,\"92\":1,\"93\":1}}],[\"intuitive\",{\"1\":{\"35\":1}}],[\"intégré\",{\"1\":{\"107\":1}}],[\"intégrés\",{\"0\":{\"107\":1}}],[\"intégrité\",{\"1\":{\"31\":1,\"56\":1,\"58\":1}}],[\"intérieurement\",{\"1\":{\"77\":1}}],[\"intérêt\",{\"1\":{\"32\":1}}],[\"insuffisantes\",{\"1\":{\"142\":1,\"143\":1}}],[\"insufficient\",{\"1\":{\"138\":1}}],[\"instructions\",{\"0\":{\"90\":1},\"1\":{\"90\":1}}],[\"instance\",{\"1\":{\"52\":1}}],[\"instant\",{\"1\":{\"25\":1}}],[\"install\",{\"1\":{\"85\":1}}],[\"installé\",{\"1\":{\"10\":2,\"11\":1,\"88\":2,\"89\":1}}],[\"installation\",{\"0\":{\"10\":1,\"85\":1,\"88\":1,\"90\":1},\"1\":{\"10\":1,\"88\":1,\"90\":2}}],[\"insert\",{\"0\":{\"131\":1},\"1\":{\"31\":1,\"131\":1,\"135\":1,\"139\":1}}],[\"initialisation\",{\"1\":{\"23\":1}}],[\"initiale\",{\"0\":{\"85\":1},\"1\":{\"10\":1,\"88\":1}}],[\"init\",{\"1\":{\"23\":1}}],[\"info\",{\"1\":{\"23\":1,\"75\":1}}],[\"informations\",{\"1\":{\"9\":1,\"11\":1,\"60\":1,\"87\":1,\"90\":1,\"92\":1,\"93\":1,\"99\":1,\"121\":1}}],[\"in\",{\"1\":{\"0\":1,\"39\":1,\"62\":1,\"63\":1}}],[\"is\",{\"1\":{\"0\":1,\"69\":1,\"143\":1}}],[\"tu\",{\"1\":{\"75\":1,\"77\":2}}],[\"tuple\",{\"1\":{\"68\":1}}],[\"tuples\",{\"1\":{\"51\":1,\"57\":1}}],[\"ta\",{\"1\":{\"75\":1}}],[\"task\",{\"1\":{\"68\":3}}],[\"tasks\",{\"1\":{\"65\":1}}],[\"tablename\",{\"1\":{\"37\":2,\"104\":1}}],[\"tables\",{\"1\":{\"31\":2,\"35\":1,\"37\":1}}],[\"table\",{\"1\":{\"31\":1,\"37\":1,\"52\":1,\"73\":1}}],[\"tâche\",{\"1\":{\"62\":1,\"63\":1,\"69\":4}}],[\"tâches\",{\"1\":{\"48\":3,\"67\":1,\"68\":1,\"69\":1}}],[\"tierces\",{\"1\":{\"106\":1}}],[\"tient\",{\"1\":{\"31\":1}}],[\"titre\",{\"1\":{\"58\":1}}],[\"title=event\",{\"1\":{\"139\":1}}],[\"title=title\",{\"1\":{\"47\":1,\"69\":1}}],[\"title\",{\"1\":{\"32\":1,\"37\":1,\"39\":1,\"47\":1,\"58\":1,\"62\":1,\"63\":1,\"66\":1,\"69\":1,\"137\":1,\"139\":1}}],[\"titan\",{\"0\":{\"13\":1},\"1\":{\"106\":1}}],[\"typing\",{\"1\":{\"49\":1,\"69\":1}}],[\"typiques\",{\"1\":{\"49\":1}}],[\"typique\",{\"1\":{\"47\":1}}],[\"typiquement\",{\"1\":{\"31\":1}}],[\"typage\",{\"1\":{\"44\":1,\"73\":1,\"77\":1}}],[\"types\",{\"1\":{\"45\":1,\"73\":1,\"75\":1}}],[\"type\",{\"1\":{\"25\":1,\"45\":1,\"75\":1,\"77\":1,\"102\":1,\"104\":1,\"122\":1,\"123\":1,\"137\":1}}],[\"tjs\",{\"1\":{\"31\":1,\"77\":1}}],[\"t\",{\"0\":{\"94\":1},\"1\":{\"23\":1,\"77\":1}}],[\"termes\",{\"1\":{\"148\":1}}],[\"terminer\",{\"1\":{\"71\":1}}],[\"terminées\",{\"1\":{\"67\":1}}],[\"terminé\",{\"1\":{\"47\":1}}],[\"terminal\",{\"1\":{\"10\":1,\"88\":1}}],[\"technologies\",{\"1\":{\"115\":1,\"117\":1}}],[\"technique\",{\"0\":{\"101\":1},\"1\":{\"25\":1}}],[\"te\",{\"1\":{\"75\":1}}],[\"tel\",{\"1\":{\"71\":1}}],[\"telle\",{\"1\":{\"71\":2,\"73\":1}}],[\"test\",{\"1\":{\"146\":1}}],[\"testez\",{\"1\":{\"59\":1,\"68\":1}}],[\"tests\",{\"1\":{\"22\":1,\"81\":1,\"115\":1,\"146\":1}}],[\"text\",{\"1\":{\"34\":1}}],[\"tmdb\",{\"1\":{\"20\":1}}],[\"trois\",{\"1\":{\"119\":1,\"135\":1,\"136\":1}}],[\"trouve\",{\"1\":{\"71\":1}}],[\"trouvée\",{\"1\":{\"69\":1,\"143\":1}}],[\"truccomplete\",{\"1\":{\"77\":1}}],[\"trucedit\",{\"1\":{\"77\":1}}],[\"trucbase\",{\"1\":{\"77\":1}}],[\"truc\",{\"1\":{\"31\":1,\"71\":1}}],[\"true\",{\"1\":{\"0\":1,\"67\":1,\"69\":1}}],[\"try\",{\"1\":{\"31\":1,\"38\":1,\"52\":1,\"56\":2,\"58\":1,\"69\":1}}],[\"très\",{\"1\":{\"31\":1,\"48\":1,\"115\":1}}],[\"traduisent\",{\"1\":{\"130\":1}}],[\"travaillez\",{\"1\":{\"148\":1}}],[\"travailler\",{\"1\":{\"33\":1,\"49\":1}}],[\"travail\",{\"1\":{\"116\":1}}],[\"travers\",{\"1\":{\"90\":1,\"136\":1}}],[\"trace\",{\"1\":{\"77\":1}}],[\"transactions\",{\"0\":{\"56\":1},\"1\":{\"38\":1,\"45\":1}}],[\"transférables\",{\"1\":{\"148\":1}}],[\"transformations\",{\"1\":{\"147\":1}}],[\"transforme\",{\"1\":{\"35\":1}}],[\"transfer\",{\"1\":{\"9\":1,\"87\":1}}],[\"traiter\",{\"1\":{\"9\":1,\"77\":1,\"87\":1}}],[\"their\",{\"1\":{\"77\":1}}],[\"the\",{\"1\":{\"0\":1,\"77\":1}}],[\"this\",{\"1\":{\"0\":2}}],[\"token\",{\"1\":{\"111\":1,\"137\":1}}],[\"torvalds\",{\"1\":{\"77\":1}}],[\"toggle\",{\"1\":{\"69\":1}}],[\"touche\",{\"1\":{\"73\":1}}],[\"toujours\",{\"1\":{\"56\":1,\"57\":1,\"59\":1,\"64\":1,\"148\":1}}],[\"tous\",{\"1\":{\"39\":1,\"47\":1,\"51\":3,\"98\":1,\"100\":1,\"116\":1,\"146\":1}}],[\"toute\",{\"1\":{\"71\":1,\"77\":2,\"118\":1}}],[\"toutes\",{\"1\":{\"9\":1,\"42\":1,\"63\":1,\"69\":2,\"87\":1,\"112\":1,\"130\":1}}],[\"tout\",{\"1\":{\"31\":1,\"32\":1,\"52\":1,\"71\":1,\"73\":1,\"75\":1,\"119\":1}}],[\"todo\",{\"1\":{\"39\":3,\"47\":9}}],[\"todoitem\",{\"1\":{\"37\":2,\"47\":4}}],[\"todositem\",{\"1\":{\"48\":1,\"51\":5,\"52\":4,\"53\":4,\"54\":3,\"58\":2,\"60\":4,\"62\":1,\"63\":2,\"65\":2,\"66\":2,\"67\":3,\"68\":2,\"69\":13}}],[\"todos\",{\"1\":{\"32\":5,\"37\":4,\"39\":4,\"47\":3,\"49\":1,\"51\":3,\"52\":3,\"53\":2,\"54\":2,\"58\":2,\"60\":4,\"62\":1,\"63\":2,\"65\":5,\"66\":11,\"67\":5,\"68\":4,\"69\":14}}],[\"to\",{\"1\":{\"0\":2,\"48\":1,\"64\":4,\"73\":2}}],[\"hésitez\",{\"1\":{\"118\":1}}],[\"héritage\",{\"1\":{\"77\":1}}],[\"hui\",{\"1\":{\"95\":1}}],[\"haut\",{\"1\":{\"31\":1}}],[\"honnêtement\",{\"1\":{\"71\":1}}],[\"hors\",{\"1\":{\"31\":1}}],[\"homepage\",{\"1\":{\"0\":2}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}],[\"hein\",{\"1\":{\"77\":1}}],[\"helloasso\",{\"1\":{\"20\":1,\"107\":1}}],[\"here\",{\"1\":{\"0\":1,\"137\":1}}],[\"httpexception\",{\"1\":{\"31\":1,\"71\":1,\"127\":1,\"138\":1,\"143\":4}}],[\"https\",{\"1\":{\"11\":1,\"89\":1}}],[\"http\",{\"0\":{\"120\":1,\"137\":1,\"140\":1},\"1\":{\"9\":2,\"31\":3,\"87\":2,\"110\":1,\"125\":1,\"135\":1}}],[\"hyperion\",{\"0\":{\"5\":1,\"8\":1,\"11\":1,\"40\":1,\"47\":1,\"86\":1,\"89\":1,\"94\":1,\"97\":1,\"114\":1},\"1\":{\"7\":2,\"8\":1,\"11\":3,\"35\":3,\"40\":1,\"47\":1,\"49\":1,\"69\":1,\"71\":1,\"77\":1,\"85\":4,\"86\":1,\"89\":2,\"90\":2,\"92\":2,\"93\":1,\"95\":1,\"96\":1,\"105\":1,\"108\":1,\"110\":1,\"112\":1,\"118\":2,\"119\":1,\"126\":1,\"135\":1,\"143\":1,\"145\":1,\"148\":3}}],[\"cv\",{\"1\":{\"117\":1}}],[\"côté\",{\"1\":{\"112\":2}}],[\"current\",{\"1\":{\"69\":3,\"102\":1,\"108\":3,\"138\":3}}],[\"cycle\",{\"1\":{\"38\":1}}],[\"critique\",{\"1\":{\"116\":1}}],[\"créée\",{\"1\":{\"141\":1}}],[\"créneaux\",{\"1\":{\"99\":1}}],[\"création\",{\"0\":{\"52\":1},\"1\":{\"58\":1,\"136\":1}}],[\"créer\",{\"0\":{\"122\":1,\"126\":1,\"131\":1},\"1\":{\"48\":1,\"52\":1,\"64\":1,\"69\":1,\"110\":1,\"122\":2,\"135\":1,\"145\":1}}],[\"crée\",{\"1\":{\"47\":1,\"52\":1,\"58\":1,\"69\":1,\"122\":1}}],[\"crois\",{\"1\":{\"31\":1,\"71\":1}}],[\"created\",{\"1\":{\"69\":1,\"122\":1,\"131\":1,\"141\":1}}],[\"create\",{\"0\":{\"52\":1,\"126\":1},\"1\":{\"31\":2,\"41\":1,\"42\":1,\"47\":1,\"48\":1,\"52\":1,\"58\":1,\"69\":1,\"125\":1,\"126\":2,\"135\":1,\"138\":4,\"139\":1}}],[\"crud\",{\"0\":{\"42\":1,\"50\":1,\"125\":1,\"138\":1,\"139\":1},\"1\":{\"31\":3,\"48\":1,\"108\":2,\"125\":1,\"126\":2,\"127\":1,\"128\":1,\"129\":1,\"135\":1,\"138\":2}}],[\"cruds\",{\"0\":{\"31\":1},\"1\":{\"31\":4,\"69\":1,\"71\":2,\"77\":2,\"83\":1}}],[\"cf\",{\"1\":{\"31\":1}}],[\"ct\",{\"1\":{\"25\":1}}],[\"cd\",{\"0\":{\"22\":1}}],[\"cité\",{\"1\":{\"77\":1}}],[\"ci\",{\"0\":{\"22\":1}}],[\"cinéma\",{\"1\":{\"99\":1}}],[\"ciné\",{\"1\":{\"21\":1}}],[\"cmt\",{\"1\":{\"18\":1,\"21\":1,\"23\":1}}],[\"c\",{\"1\":{\"17\":1,\"31\":5,\"34\":3,\"35\":1,\"71\":11,\"73\":6,\"75\":4,\"77\":5,\"92\":2,\"93\":1,\"119\":1,\"125\":1}}],[\"clubs\",{\"1\":{\"98\":1}}],[\"clés\",{\"0\":{\"109\":1}}],[\"clé\",{\"1\":{\"42\":1}}],[\"cloné\",{\"1\":{\"90\":1}}],[\"clone\",{\"1\":{\"11\":1,\"89\":1}}],[\"cloner\",{\"0\":{\"11\":1,\"89\":1},\"1\":{\"11\":1,\"89\":1}}],[\"close\",{\"1\":{\"38\":1}}],[\"class\",{\"1\":{\"37\":2,\"104\":1}}],[\"classe\",{\"1\":{\"37\":1,\"71\":1,\"73\":1}}],[\"classes\",{\"1\":{\"35\":1,\"37\":1,\"71\":1}}],[\"clientes\",{\"0\":{\"106\":1},\"1\":{\"110\":1}}],[\"clients\",{\"1\":{\"18\":1}}],[\"client\",{\"0\":{\"137\":1,\"142\":1},\"1\":{\"9\":1,\"87\":1}}],[\"chercher\",{\"1\":{\"146\":1}}],[\"choisi\",{\"1\":{\"71\":1}}],[\"choix\",{\"0\":{\"101\":1},\"1\":{\"35\":1}}],[\"chose\",{\"1\":{\"10\":1,\"88\":1}}],[\"change\",{\"1\":{\"124\":1}}],[\"chaîner\",{\"1\":{\"66\":1}}],[\"charge\",{\"1\":{\"66\":1}}],[\"chargement\",{\"0\":{\"61\":1},\"1\":{\"61\":1,\"68\":1}}],[\"chargées\",{\"1\":{\"63\":1}}],[\"champs\",{\"1\":{\"85\":1,\"123\":1}}],[\"champ\",{\"1\":{\"53\":1}}],[\"chaque\",{\"1\":{\"9\":1,\"20\":1,\"23\":1,\"37\":1,\"46\":1,\"62\":2,\"66\":1,\"87\":1,\"122\":1,\"146\":1}}],[\"chaine\",{\"1\":{\"8\":1,\"86\":1}}],[\"cache\",{\"1\":{\"121\":1,\"147\":2}}],[\"cacheable\",{\"1\":{\"121\":1}}],[\"cacher\",{\"1\":{\"31\":1}}],[\"caché\",{\"1\":{\"92\":1,\"93\":1}}],[\"catch\",{\"1\":{\"56\":1,\"77\":1}}],[\"cas\",{\"1\":{\"45\":1,\"52\":1,\"64\":2,\"65\":1,\"71\":1,\"122\":1,\"123\":1,\"124\":1}}],[\"car\",{\"1\":{\"25\":1,\"35\":1}}],[\"caractéristiques\",{\"1\":{\"9\":1,\"87\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1}}],[\"capot\",{\"1\":{\"23\":1}}],[\"calypsso\",{\"1\":{\"18\":1}}],[\"can\",{\"1\":{\"0\":1,\"138\":1}}],[\"cohérence\",{\"0\":{\"144\":1}}],[\"cotisations\",{\"1\":{\"99\":1}}],[\"cool\",{\"1\":{\"77\":1}}],[\"couches\",{\"1\":{\"136\":1,\"147\":1}}],[\"count\",{\"1\":{\"68\":4}}],[\"couvrir\",{\"1\":{\"48\":1}}],[\"collaboration\",{\"1\":{\"116\":1}}],[\"collections\",{\"1\":{\"64\":1,\"65\":1}}],[\"column\",{\"1\":{\"37\":8,\"73\":1,\"104\":3}}],[\"colonnes\",{\"1\":{\"68\":1}}],[\"colonne\",{\"1\":{\"31\":1,\"37\":1}}],[\"corps\",{\"1\":{\"121\":1,\"122\":1}}],[\"correctes\",{\"1\":{\"112\":1}}],[\"correspondance\",{\"0\":{\"135\":1},\"1\":{\"147\":1}}],[\"correspondante\",{\"1\":{\"108\":1}}],[\"correspond\",{\"1\":{\"37\":1,\"51\":1,\"71\":1}}],[\"correspondent\",{\"1\":{\"31\":1,\"135\":1}}],[\"core\",{\"0\":{\"34\":1},\"1\":{\"23\":1,\"34\":1,\"81\":1}}],[\"coredata\",{\"1\":{\"19\":1}}],[\"code=403\",{\"1\":{\"138\":1,\"143\":1}}],[\"code=404\",{\"1\":{\"127\":1,\"143\":1}}],[\"codes\",{\"0\":{\"140\":1},\"1\":{\"71\":1}}],[\"code\",{\"0\":{\"22\":1},\"1\":{\"23\":1,\"32\":1,\"35\":1,\"44\":1,\"46\":1,\"49\":1,\"69\":1,\"71\":1,\"77\":1,\"115\":1,\"116\":1,\"122\":1,\"123\":1,\"124\":1,\"143\":1,\"146\":1,\"148\":1}}],[\"compétences\",{\"1\":{\"148\":1}}],[\"compréhension\",{\"1\":{\"119\":1}}],[\"comprenez\",{\"1\":{\"118\":1,\"148\":1}}],[\"comprennent\",{\"1\":{\"77\":1}}],[\"comprendrez\",{\"1\":{\"32\":1}}],[\"comprendre\",{\"0\":{\"61\":1},\"1\":{\"7\":1,\"9\":1,\"44\":1,\"85\":1,\"87\":1,\"145\":1,\"148\":1}}],[\"composition\",{\"1\":{\"71\":1}}],[\"comptes\",{\"1\":{\"98\":1}}],[\"compte\",{\"1\":{\"68\":1,\"98\":1}}],[\"completion\",{\"1\":{\"69\":1}}],[\"complet\",{\"0\":{\"69\":1,\"136\":1},\"1\":{\"69\":1}}],[\"completed\",{\"1\":{\"47\":1,\"67\":1,\"69\":2}}],[\"complexité\",{\"1\":{\"59\":1}}],[\"complexe\",{\"1\":{\"48\":1,\"95\":1}}],[\"complexes\",{\"1\":{\"44\":1,\"59\":1,\"64\":1,\"68\":1,\"103\":1}}],[\"compliqué\",{\"1\":{\"31\":1,\"73\":1}}],[\"com\",{\"1\":{\"10\":1,\"11\":1,\"88\":1,\"89\":1}}],[\"communiquaient\",{\"1\":{\"95\":1}}],[\"communication\",{\"1\":{\"77\":1}}],[\"commit\",{\"1\":{\"38\":1,\"42\":2,\"47\":2,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"58\":1,\"69\":2,\"131\":1,\"133\":1,\"134\":1,\"139\":1}}],[\"commande\",{\"1\":{\"10\":1,\"11\":1,\"88\":1,\"89\":1}}],[\"comment\",{\"1\":{\"48\":2,\"51\":1,\"85\":1,\"118\":1,\"135\":1,\"148\":1}}],[\"commencer\",{\"1\":{\"10\":1,\"49\":1,\"88\":1}}],[\"comme\",{\"0\":{\"102\":1,\"103\":1,\"104\":1},\"1\":{\"8\":1,\"10\":1,\"31\":1,\"32\":1,\"47\":1,\"49\":1,\"65\":1,\"71\":2,\"73\":1,\"75\":1,\"77\":1,\"86\":1,\"88\":1,\"92\":1,\"93\":1}}],[\"conversion\",{\"1\":{\"77\":1,\"139\":1}}],[\"convertir\",{\"1\":{\"31\":1}}],[\"condition\",{\"1\":{\"71\":1}}],[\"conditions\",{\"1\":{\"31\":1}}],[\"considérez\",{\"1\":{\"68\":1}}],[\"conseil\",{\"1\":{\"49\":1,\"118\":1}}],[\"connecté\",{\"1\":{\"108\":1}}],[\"connection\",{\"1\":{\"34\":1}}],[\"connaître\",{\"1\":{\"46\":1}}],[\"concrète\",{\"1\":{\"117\":1}}],[\"concrètement\",{\"0\":{\"97\":1}}],[\"concret\",{\"0\":{\"108\":1}}],[\"concrets\",{\"1\":{\"48\":1}}],[\"concurrence\",{\"1\":{\"40\":1,\"102\":1}}],[\"concepts\",{\"0\":{\"36\":1,\"92\":1,\"109\":1},\"1\":{\"25\":1,\"48\":2}}],[\"contraster\",{\"1\":{\"73\":1}}],[\"contrôle\",{\"1\":{\"34\":1}}],[\"contre\",{\"1\":{\"31\":1,\"45\":1}}],[\"context\",{\"1\":{\"57\":1}}],[\"contexte\",{\"0\":{\"25\":1},\"1\":{\"31\":1}}],[\"contenu\",{\"1\":{\"141\":1}}],[\"contenus\",{\"1\":{\"8\":1,\"86\":1}}],[\"contenir\",{\"1\":{\"9\":1,\"87\":1}}],[\"content\",{\"1\":{\"0\":1,\"122\":1,\"123\":1,\"124\":1,\"137\":1,\"141\":1}}],[\"conçue\",{\"1\":{\"8\":1,\"86\":1}}],[\"configuré\",{\"1\":{\"11\":1,\"89\":1}}],[\"configurer\",{\"1\":{\"10\":1,\"88\":1,\"118\":1,\"148\":1}}],[\"configuration\",{\"0\":{\"85\":1},\"1\":{\"0\":1,\"10\":1,\"38\":1,\"48\":1,\"88\":1,\"90\":1,\"118\":1,\"148\":1}}],[\"config\",{\"1\":{\"0\":1,\"10\":2,\"23\":1,\"85\":2,\"88\":2}}],[\"cerveau\",{\"1\":{\"92\":1,\"93\":1}}],[\"certains\",{\"1\":{\"65\":1,\"71\":1}}],[\"celui\",{\"1\":{\"51\":1,\"148\":1}}],[\"cela\",{\"1\":{\"10\":1,\"88\":1,\"90\":1}}],[\"ceci\",{\"1\":{\"32\":1}}],[\"cette\",{\"0\":{\"144\":1},\"1\":{\"32\":1,\"35\":1,\"69\":1,\"148\":2}}],[\"ces\",{\"0\":{\"101\":1},\"1\":{\"31\":1,\"69\":1,\"71\":1,\"119\":1,\"130\":1,\"135\":1,\"148\":1}}],[\"centralise\",{\"1\":{\"96\":1}}],[\"centralien\",{\"0\":{\"25\":1}}],[\"centrale\",{\"1\":{\"25\":1,\"92\":1,\"93\":1,\"116\":1}}],[\"ce\",{\"0\":{\"8\":1,\"9\":1,\"86\":1,\"87\":1},\"1\":{\"7\":1,\"31\":3,\"48\":1,\"61\":1,\"71\":1,\"73\":1,\"85\":1,\"92\":1,\"118\":1}}],[\"pensez\",{\"1\":{\"92\":1,\"93\":1,\"148\":1}}],[\"penser\",{\"1\":{\"31\":1}}],[\"petit\",{\"1\":{\"77\":1}}],[\"petits\",{\"1\":{\"75\":1}}],[\"petites\",{\"1\":{\"64\":2}}],[\"peu\",{\"1\":{\"73\":1,\"75\":1}}],[\"peur\",{\"1\":{\"71\":1}}],[\"peuvent\",{\"1\":{\"59\":1,\"147\":1}}],[\"peut\",{\"1\":{\"31\":5,\"44\":1,\"48\":4,\"49\":1,\"64\":1,\"71\":1,\"73\":1,\"75\":2,\"77\":1,\"98\":1,\"121\":2,\"147\":1}}],[\"permissions\",{\"1\":{\"98\":1,\"103\":1,\"111\":1,\"138\":1,\"142\":1,\"143\":1}}],[\"permettent\",{\"1\":{\"110\":1}}],[\"permettra\",{\"1\":{\"69\":1}}],[\"permet\",{\"1\":{\"31\":1,\"32\":1,\"39\":1,\"61\":1}}],[\"perspective\",{\"1\":{\"73\":2}}],[\"performance\",{\"0\":{\"57\":1,\"147\":1},\"1\":{\"102\":1,\"103\":1}}],[\"performances\",{\"1\":{\"40\":1,\"59\":2,\"68\":1}}],[\"pilier\",{\"1\":{\"31\":1}}],[\"push\",{\"1\":{\"100\":1,\"107\":1}}],[\"puissant\",{\"1\":{\"48\":1}}],[\"puissance\",{\"1\":{\"32\":1}}],[\"puis\",{\"1\":{\"31\":2}}],[\"pure\",{\"1\":{\"25\":1}}],[\"put\",{\"1\":{\"9\":1,\"87\":1,\"110\":1}}],[\"pk\",{\"1\":{\"23\":1,\"77\":1}}],[\"pydantic\",{\"1\":{\"73\":1,\"77\":1,\"108\":1,\"143\":1}}],[\"pycharm\",{\"1\":{\"49\":1}}],[\"python\",{\"1\":{\"31\":3,\"32\":2,\"34\":1,\"35\":2,\"37\":1,\"44\":1,\"48\":1,\"71\":1,\"77\":1,\"102\":1,\"108\":1}}],[\"py\",{\"1\":{\"23\":1,\"83\":4}}],[\"photos\",{\"1\":{\"107\":1}}],[\"ph\",{\"1\":{\"21\":1}}],[\"pdfs\",{\"1\":{\"21\":1}}],[\"poser\",{\"1\":{\"118\":1}}],[\"postgresql\",{\"0\":{\"103\":1},\"1\":{\"20\":1,\"46\":1,\"103\":1,\"115\":1}}],[\"post\",{\"0\":{\"122\":1},\"1\":{\"9\":1,\"31\":1,\"87\":1,\"110\":1,\"122\":1,\"126\":1,\"135\":1,\"137\":1,\"138\":1,\"141\":1}}],[\"portabilité\",{\"0\":{\"46\":1}}],[\"populates=\",{\"1\":{\"37\":2,\"104\":1}}],[\"populaires\",{\"1\":{\"32\":1,\"115\":1}}],[\"points\",{\"0\":{\"55\":1},\"1\":{\"42\":1}}],[\"point\",{\"1\":{\"20\":1,\"23\":1,\"71\":1,\"77\":1,\"81\":1,\"125\":1}}],[\"pouvons\",{\"1\":{\"148\":1}}],[\"pouvez\",{\"1\":{\"10\":1,\"11\":1,\"32\":1,\"48\":1,\"66\":1,\"88\":1,\"89\":1,\"145\":1}}],[\"pourquoi\",{\"0\":{\"92\":1,\"94\":1,\"101\":1,\"114\":1,\"144\":1},\"1\":{\"92\":1,\"102\":1,\"103\":1,\"104\":1,\"118\":1}}],[\"pourriez\",{\"1\":{\"62\":1}}],[\"pourrait\",{\"1\":{\"31\":1}}],[\"pour\",{\"0\":{\"47\":1,\"48\":1,\"115\":1,\"116\":1,\"117\":1},\"1\":{\"8\":2,\"9\":4,\"11\":1,\"23\":1,\"31\":4,\"32\":2,\"35\":2,\"38\":1,\"40\":1,\"47\":1,\"48\":2,\"49\":1,\"51\":1,\"52\":2,\"53\":1,\"54\":1,\"56\":1,\"57\":2,\"62\":2,\"64\":1,\"65\":3,\"66\":2,\"68\":2,\"71\":1,\"73\":2,\"77\":2,\"86\":2,\"87\":4,\"90\":1,\"92\":1,\"95\":1,\"98\":1,\"99\":1,\"100\":1,\"103\":3,\"107\":1,\"108\":1,\"116\":1,\"118\":1,\"122\":1,\"123\":1,\"124\":1,\"139\":1,\"146\":1,\"148\":1}}],[\"patterns\",{\"1\":{\"115\":1,\"117\":1,\"146\":1}}],[\"patch\",{\"0\":{\"123\":1},\"1\":{\"31\":1,\"110\":1,\"123\":1,\"128\":1,\"135\":1,\"141\":1}}],[\"paiements\",{\"1\":{\"99\":1}}],[\"parfaite\",{\"0\":{\"135\":1}}],[\"parfait\",{\"1\":{\"103\":1}}],[\"parfois\",{\"1\":{\"75\":1}}],[\"parse\",{\"1\":{\"77\":1}}],[\"parcimonie\",{\"1\":{\"59\":1}}],[\"par\",{\"1\":{\"31\":2,\"49\":1,\"67\":1,\"68\":1,\"116\":1,\"143\":1}}],[\"partielle\",{\"1\":{\"123\":1}}],[\"partiellement\",{\"1\":{\"123\":1}}],[\"partie\",{\"1\":{\"105\":1}}],[\"partir\",{\"1\":{\"17\":1,\"77\":1}}],[\"partage\",{\"1\":{\"100\":1}}],[\"partagent\",{\"1\":{\"31\":1}}],[\"partout\",{\"1\":{\"75\":1,\"119\":1}}],[\"parler\",{\"1\":{\"71\":1,\"73\":1}}],[\"parle\",{\"1\":{\"31\":1}}],[\"password\",{\"1\":{\"111\":1}}],[\"passer\",{\"1\":{\"148\":1}}],[\"passe\",{\"1\":{\"23\":1,\"71\":1}}],[\"pas\",{\"0\":{\"7\":1,\"79\":1},\"1\":{\"7\":1,\"23\":1,\"31\":2,\"46\":1,\"71\":5,\"73\":2,\"85\":1,\"95\":1,\"105\":1,\"118\":1,\"121\":1,\"143\":1}}],[\"page\",{\"1\":{\"0\":1,\"31\":1,\"48\":1,\"71\":1,\"92\":1}}],[\"pratiques\",{\"1\":{\"68\":1,\"115\":1}}],[\"pratique\",{\"0\":{\"47\":1},\"1\":{\"48\":1,\"118\":1,\"148\":1}}],[\"prévisible\",{\"1\":{\"146\":1}}],[\"présente\",{\"1\":{\"71\":1}}],[\"préférez\",{\"1\":{\"57\":1,\"64\":1,\"68\":1}}],[\"précoce\",{\"1\":{\"45\":1}}],[\"prérequis\",{\"0\":{\"10\":1,\"88\":1}}],[\"primary\",{\"1\":{\"37\":2,\"104\":1}}],[\"privilégions\",{\"1\":{\"35\":1}}],[\"print\",{\"1\":{\"35\":1,\"39\":1,\"62\":1,\"63\":1}}],[\"principe\",{\"1\":{\"75\":1,\"77\":2}}],[\"principes\",{\"1\":{\"31\":1}}],[\"principaux\",{\"1\":{\"48\":1,\"85\":1}}],[\"principale\",{\"1\":{\"38\":1}}],[\"principalement\",{\"1\":{\"35\":1,\"51\":1}}],[\"principales\",{\"1\":{\"9\":1,\"40\":1,\"73\":1,\"87\":1}}],[\"prend\",{\"1\":{\"31\":1}}],[\"premiers\",{\"0\":{\"79\":1},\"1\":{\"7\":1,\"85\":1}}],[\"premier\",{\"0\":{\"7\":1},\"1\":{\"51\":1,\"92\":1,\"118\":1,\"148\":1}}],[\"pr\",{\"1\":{\"25\":1,\"31\":1,\"75\":2}}],[\"professionnel\",{\"0\":{\"117\":1}}],[\"profil\",{\"1\":{\"66\":1}}],[\"profile\",{\"1\":{\"66\":2}}],[\"production\",{\"1\":{\"104\":1,\"117\":1}}],[\"productivité\",{\"0\":{\"44\":1}}],[\"programmation\",{\"1\":{\"99\":1}}],[\"programmers\",{\"1\":{\"77\":2}}],[\"prochaines\",{\"0\":{\"118\":1,\"148\":1}}],[\"proche\",{\"1\":{\"34\":1}}],[\"processus\",{\"1\":{\"90\":1}}],[\"problématique\",{\"1\":{\"62\":1}}],[\"problematique\",{\"1\":{\"62\":1}}],[\"problème\",{\"0\":{\"62\":1,\"95\":1},\"1\":{\"62\":2}}],[\"protection\",{\"1\":{\"45\":1}}],[\"protocoles\",{\"1\":{\"9\":1,\"87\":1}}],[\"propos\",{\"1\":{\"71\":1}}],[\"propose\",{\"1\":{\"33\":1}}],[\"propre\",{\"1\":{\"69\":1,\"77\":1,\"115\":1}}],[\"propres\",{\"1\":{\"25\":1}}],[\"projets\",{\"1\":{\"117\":1,\"148\":1}}],[\"projet\",{\"1\":{\"23\":1,\"48\":1,\"90\":1,\"116\":1,\"117\":1}}],[\"project\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}],[\"pleins\",{\"1\":{\"77\":1}}],[\"please\",{\"1\":{\"0\":1}}],[\"placé\",{\"1\":{\"52\":1}}],[\"place\",{\"1\":{\"0\":1}}],[\"plutôt\",{\"1\":{\"57\":1}}],[\"plupart\",{\"1\":{\"35\":1,\"71\":1,\"96\":1}}],[\"plusieurs\",{\"1\":{\"48\":2,\"62\":1,\"77\":1,\"121\":1,\"123\":1}}],[\"plus\",{\"0\":{\"15\":1,\"17\":1,\"48\":1},\"1\":{\"11\":1,\"31\":1,\"32\":2,\"35\":1,\"44\":2,\"49\":1,\"90\":1,\"99\":1,\"102\":1,\"104\":1,\"121\":1,\"124\":1,\"145\":1,\"148\":1}}],[\"a101\",{\"1\":{\"108\":1}}],[\"about\",{\"1\":{\"77\":2}}],[\"abstraction\",{\"1\":{\"46\":1}}],[\"ah\",{\"1\":{\"73\":1}}],[\"at\",{\"1\":{\"69\":1,\"131\":1}}],[\"attendu\",{\"1\":{\"112\":1}}],[\"attendre\",{\"1\":{\"31\":1}}],[\"attention\",{\"1\":{\"42\":1}}],[\"attributs\",{\"1\":{\"71\":1}}],[\"attribut\",{\"1\":{\"37\":1}}],[\"agrégations\",{\"0\":{\"68\":1}}],[\"archi\",{\"1\":{\"81\":2}}],[\"architecture\",{\"0\":{\"81\":1,\"82\":1,\"83\":1,\"101\":1,\"119\":1},\"1\":{\"9\":1,\"87\":1,\"115\":1,\"117\":1}}],[\"arrière\",{\"1\":{\"52\":1}}],[\"ajout\",{\"1\":{\"52\":1}}],[\"alternative\",{\"1\":{\"65\":3}}],[\"alternatives\",{\"0\":{\"65\":1}}],[\"alembic\",{\"1\":{\"44\":1}}],[\"allons\",{\"1\":{\"48\":2,\"118\":1}}],[\"aller\",{\"0\":{\"48\":1},\"1\":{\"148\":1}}],[\"all\",{\"1\":{\"31\":1,\"51\":2,\"57\":1,\"62\":2,\"63\":2,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":2,\"132\":1}}],[\"admin\",{\"1\":{\"143\":2}}],[\"administratifs\",{\"0\":{\"100\":1}}],[\"add\",{\"1\":{\"42\":1,\"47\":1,\"52\":3,\"56\":1,\"58\":1,\"69\":1,\"131\":1,\"139\":1}}],[\"adresse\",{\"1\":{\"10\":1,\"88\":1,\"123\":1,\"133\":2}}],[\"await\",{\"1\":{\"41\":1,\"42\":4,\"47\":4,\"51\":1,\"52\":2,\"53\":2,\"54\":2,\"56\":3,\"58\":2,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":6,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":2,\"133\":2,\"134\":2,\"138\":1,\"139\":2}}],[\"améliorer\",{\"1\":{\"40\":1}}],[\"astuce\",{\"1\":{\"148\":1}}],[\"as\",{\"1\":{\"52\":1,\"58\":1,\"66\":2,\"69\":1}}],[\"async\",{\"1\":{\"41\":2,\"42\":5,\"47\":3,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"58\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":3,\"102\":2,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":1,\"139\":1}}],[\"asyncsession\",{\"1\":{\"41\":2,\"42\":2,\"47\":4,\"49\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"58\":1,\"60\":1,\"62\":1,\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":4,\"108\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"138\":1,\"139\":1}}],[\"asyncio\",{\"1\":{\"41\":1,\"47\":1,\"49\":1,\"69\":1}}],[\"asynchrones\",{\"0\":{\"42\":1}}],[\"asynchrone\",{\"0\":{\"40\":1,\"41\":1},\"1\":{\"40\":1}}],[\"association\",{\"1\":{\"118\":1}}],[\"associations\",{\"1\":{\"98\":2}}],[\"associées\",{\"1\":{\"48\":1}}],[\"assets\",{\"1\":{\"21\":1,\"81\":1}}],[\"assurez\",{\"1\":{\"10\":1,\"42\":1,\"88\":1}}],[\"actualités\",{\"1\":{\"99\":1}}],[\"actuels\",{\"1\":{\"115\":1}}],[\"actuel\",{\"1\":{\"69\":1}}],[\"acronyme\",{\"1\":{\"31\":1}}],[\"access\",{\"1\":{\"143\":1}}],[\"acceptable\",{\"1\":{\"64\":1}}],[\"accompagner\",{\"1\":{\"118\":1}}],[\"account\",{\"1\":{\"25\":1}}],[\"accédé\",{\"1\":{\"66\":1}}],[\"accéderez\",{\"1\":{\"64\":1}}],[\"accéder\",{\"1\":{\"39\":1,\"64\":1,\"75\":1}}],[\"accès\",{\"1\":{\"31\":1,\"62\":1}}],[\"affiches\",{\"1\":{\"21\":1}}],[\"aeecleclair\",{\"1\":{\"11\":1,\"89\":1}}],[\"avide\",{\"1\":{\"61\":1}}],[\"avancée\",{\"1\":{\"59\":1}}],[\"avancées\",{\"0\":{\"59\":1}}],[\"avantages\",{\"0\":{\"43\":1}}],[\"avant\",{\"1\":{\"10\":1,\"49\":1,\"58\":1,\"88\":1,\"95\":1,\"104\":1}}],[\"avons\",{\"1\":{\"48\":1}}],[\"avoir\",{\"1\":{\"31\":1,\"48\":1,\"71\":1,\"77\":1,\"90\":1}}],[\"avenir\",{\"0\":{\"117\":1}}],[\"avez\",{\"1\":{\"32\":1,\"46\":1,\"48\":1,\"111\":1}}],[\"avec\",{\"0\":{\"63\":1,\"67\":1},\"1\":{\"7\":1,\"8\":1,\"18\":1,\"23\":2,\"31\":2,\"32\":1,\"33\":1,\"34\":2,\"35\":1,\"38\":1,\"39\":1,\"42\":3,\"44\":1,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"51\":1,\"52\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"63\":1,\"66\":3,\"68\":1,\"71\":1,\"73\":3,\"77\":2,\"85\":1,\"86\":1,\"122\":1,\"141\":1,\"148\":1}}],[\"aujourd\",{\"1\":{\"95\":1}}],[\"aussi\",{\"1\":{\"73\":1}}],[\"auriez\",{\"1\":{\"66\":1}}],[\"aurez\",{\"1\":{\"49\":1}}],[\"aucune\",{\"1\":{\"31\":1,\"39\":1,\"63\":1}}],[\"aux\",{\"0\":{\"99\":1},\"1\":{\"31\":1,\"39\":1,\"64\":2,\"68\":1,\"73\":1,\"77\":1,\"110\":1}}],[\"autorisation\",{\"0\":{\"111\":1},\"1\":{\"111\":1}}],[\"auto\",{\"1\":{\"102\":1}}],[\"automatique\",{\"1\":{\"45\":1,\"102\":1,\"143\":1}}],[\"automatiquement\",{\"1\":{\"45\":1,\"49\":1,\"102\":1,\"143\":1}}],[\"automatiques\",{\"1\":{\"44\":1,\"104\":2}}],[\"automatisant\",{\"1\":{\"39\":1}}],[\"autocomplétion\",{\"1\":{\"44\":1}}],[\"autres\",{\"0\":{\"23\":1,\"75\":1},\"1\":{\"31\":1,\"75\":1,\"106\":1,\"117\":1,\"148\":2}}],[\"authorization\",{\"1\":{\"137\":1}}],[\"auth\",{\"0\":{\"18\":1},\"1\":{\"18\":1}}],[\"authentification\",{\"0\":{\"111\":1},\"1\":{\"8\":1,\"11\":2,\"18\":1,\"86\":1,\"90\":2,\"95\":1,\"100\":1,\"108\":1,\"111\":1,\"142\":1}}],[\"au\",{\"1\":{\"9\":2,\"32\":1,\"41\":1,\"42\":1,\"44\":1,\"48\":1,\"61\":1,\"87\":2,\"92\":3,\"93\":3,\"108\":1,\"121\":1,\"130\":1}}],[\"apprentissage\",{\"0\":{\"145\":1},\"1\":{\"118\":1}}],[\"apprendre\",{\"0\":{\"114\":1}}],[\"approfondir\",{\"1\":{\"48\":1}}],[\"approche\",{\"1\":{\"34\":1,\"35\":2,\"69\":1}}],[\"approches\",{\"0\":{\"33\":1}}],[\"appuyer\",{\"1\":{\"71\":1}}],[\"appel\",{\"1\":{\"122\":1,\"126\":1}}],[\"appelle\",{\"1\":{\"71\":1}}],[\"appelée\",{\"1\":{\"108\":1}}],[\"appelé\",{\"1\":{\"31\":1,\"121\":1,\"123\":1}}],[\"applicatif\",{\"1\":{\"125\":1}}],[\"applications\",{\"0\":{\"106\":1},\"1\":{\"48\":1,\"103\":1,\"106\":1,\"110\":1}}],[\"application\",{\"1\":{\"8\":1,\"48\":1,\"86\":1,\"92\":3,\"93\":2,\"106\":1,\"122\":1,\"123\":1,\"137\":1}}],[\"applique\",{\"1\":{\"31\":1}}],[\"app\",{\"1\":{\"23\":1,\"49\":1,\"69\":1,\"102\":2,\"106\":1,\"108\":1}}],[\"après\",{\"1\":{\"10\":1,\"25\":1,\"71\":1,\"88\":1,\"90\":1,\"124\":1}}],[\"api\",{\"0\":{\"9\":1,\"87\":1,\"110\":1},\"1\":{\"8\":1,\"9\":2,\"31\":1,\"86\":1,\"87\":2,\"102\":1,\"106\":1,\"110\":1,\"118\":1}}],[\"ait\",{\"1\":{\"75\":1}}],[\"aider\",{\"1\":{\"44\":1,\"49\":1}}],[\"aidera\",{\"1\":{\"7\":1,\"85\":1,\"148\":1}}],[\"ailleurs\",{\"1\":{\"31\":1}}],[\"ai\",{\"1\":{\"23\":1}}],[\"ainsi\",{\"1\":{\"8\":1,\"39\":1,\"86\":1}}],[\"a\",{\"1\":{\"0\":1,\"17\":1,\"23\":1,\"25\":1,\"31\":3,\"71\":4,\"75\":1,\"77\":1,\"81\":1,\"92\":1}}],[\"anciens\",{\"1\":{\"118\":1}}],[\"and\",{\"1\":{\"66\":1,\"77\":1}}],[\"annuler\",{\"1\":{\"52\":1}}],[\"annexes\",{\"1\":{\"8\":1,\"86\":1}}],[\"an\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,jn(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:n,options:s,id:r}})=>{const o=An[n];e==="suggest"?self.postMessage([e,r,Et(t,o,s)]):e==="search"?self.postMessage([e,r,vt(t,o,s,"max")]):self.postMessage({suggestions:[e,r,Et(t,o,s)],results:[e,r,vt(t,o,s,__SLIMSEARCH_SORT_STRATEGY__)]})};
//# sourceMappingURL=index.js.map
